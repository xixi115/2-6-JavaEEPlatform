/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 4.0, "minX": 0.0, "maxY": 148.0, "series": [{"data": [[0.0, 4.0], [0.1, 5.0], [0.2, 8.0], [0.3, 8.0], [0.4, 8.0], [0.5, 8.0], [0.6, 8.0], [0.7, 8.0], [0.8, 8.0], [0.9, 8.0], [1.0, 8.0], [1.1, 8.0], [1.2, 8.0], [1.3, 8.0], [1.4, 8.0], [1.5, 8.0], [1.6, 8.0], [1.7, 8.0], [1.8, 8.0], [1.9, 8.0], [2.0, 8.0], [2.1, 8.0], [2.2, 8.0], [2.3, 8.0], [2.4, 8.0], [2.5, 8.0], [2.6, 8.0], [2.7, 8.0], [2.8, 8.0], [2.9, 8.0], [3.0, 8.0], [3.1, 8.0], [3.2, 8.0], [3.3, 8.0], [3.4, 8.0], [3.5, 8.0], [3.6, 8.0], [3.7, 8.0], [3.8, 8.0], [3.9, 8.0], [4.0, 8.0], [4.1, 8.0], [4.2, 8.0], [4.3, 8.0], [4.4, 8.0], [4.5, 8.0], [4.6, 8.0], [4.7, 8.0], [4.8, 8.0], [4.9, 8.0], [5.0, 8.0], [5.1, 8.0], [5.2, 8.0], [5.3, 8.0], [5.4, 8.0], [5.5, 8.0], [5.6, 8.0], [5.7, 8.0], [5.8, 8.0], [5.9, 8.0], [6.0, 8.0], [6.1, 8.0], [6.2, 8.0], [6.3, 8.0], [6.4, 8.0], [6.5, 8.0], [6.6, 8.0], [6.7, 8.0], [6.8, 8.0], [6.9, 8.0], [7.0, 8.0], [7.1, 8.0], [7.2, 8.0], [7.3, 8.0], [7.4, 8.0], [7.5, 8.0], [7.6, 8.0], [7.7, 8.0], [7.8, 8.0], [7.9, 8.0], [8.0, 8.0], [8.1, 8.0], [8.2, 8.0], [8.3, 8.0], [8.4, 8.0], [8.5, 8.0], [8.6, 8.0], [8.7, 8.0], [8.8, 8.0], [8.9, 8.0], [9.0, 8.0], [9.1, 8.0], [9.2, 8.0], [9.3, 8.0], [9.4, 8.0], [9.5, 8.0], [9.6, 8.0], [9.7, 8.0], [9.8, 8.0], [9.9, 8.0], [10.0, 8.0], [10.1, 8.0], [10.2, 8.0], [10.3, 8.0], [10.4, 8.0], [10.5, 8.0], [10.6, 8.0], [10.7, 8.0], [10.8, 8.0], [10.9, 8.0], [11.0, 8.0], [11.1, 8.0], [11.2, 8.0], [11.3, 8.0], [11.4, 8.0], [11.5, 8.0], [11.6, 8.0], [11.7, 8.0], [11.8, 8.0], [11.9, 8.0], [12.0, 8.0], [12.1, 8.0], [12.2, 8.0], [12.3, 8.0], [12.4, 8.0], [12.5, 8.0], [12.6, 8.0], [12.7, 8.0], [12.8, 8.0], [12.9, 8.0], [13.0, 8.0], [13.1, 8.0], [13.2, 8.0], [13.3, 8.0], [13.4, 8.0], [13.5, 8.0], [13.6, 8.0], [13.7, 8.0], [13.8, 8.0], [13.9, 8.0], [14.0, 8.0], [14.1, 8.0], [14.2, 8.0], [14.3, 8.0], [14.4, 8.0], [14.5, 8.0], [14.6, 8.0], [14.7, 8.0], [14.8, 8.0], [14.9, 8.0], [15.0, 8.0], [15.1, 8.0], [15.2, 8.0], [15.3, 8.0], [15.4, 8.0], [15.5, 8.0], [15.6, 8.0], [15.7, 8.0], [15.8, 8.0], [15.9, 8.0], [16.0, 8.0], [16.1, 8.0], [16.2, 8.0], [16.3, 8.0], [16.4, 8.0], [16.5, 8.0], [16.6, 8.0], [16.7, 8.0], [16.8, 8.0], [16.9, 8.0], [17.0, 8.0], [17.1, 8.0], [17.2, 8.0], [17.3, 8.0], [17.4, 8.0], [17.5, 8.0], [17.6, 8.0], [17.7, 8.0], [17.8, 8.0], [17.9, 8.0], [18.0, 8.0], [18.1, 8.0], [18.2, 8.0], [18.3, 8.0], [18.4, 8.0], [18.5, 8.0], [18.6, 8.0], [18.7, 8.0], [18.8, 8.0], [18.9, 8.0], [19.0, 8.0], [19.1, 8.0], [19.2, 8.0], [19.3, 8.0], [19.4, 8.0], [19.5, 8.0], [19.6, 8.0], [19.7, 8.0], [19.8, 8.0], [19.9, 8.0], [20.0, 8.0], [20.1, 8.0], [20.2, 8.0], [20.3, 8.0], [20.4, 8.0], [20.5, 8.0], [20.6, 8.0], [20.7, 8.0], [20.8, 8.0], [20.9, 8.0], [21.0, 8.0], [21.1, 8.0], [21.2, 8.0], [21.3, 8.0], [21.4, 8.0], [21.5, 8.0], [21.6, 8.0], [21.7, 8.0], [21.8, 8.0], [21.9, 8.0], [22.0, 8.0], [22.1, 8.0], [22.2, 8.0], [22.3, 8.0], [22.4, 8.0], [22.5, 8.0], [22.6, 8.0], [22.7, 8.0], [22.8, 8.0], [22.9, 8.0], [23.0, 8.0], [23.1, 8.0], [23.2, 8.0], [23.3, 8.0], [23.4, 8.0], [23.5, 8.0], [23.6, 8.0], [23.7, 8.0], [23.8, 8.0], [23.9, 8.0], [24.0, 8.0], [24.1, 8.0], [24.2, 8.0], [24.3, 8.0], [24.4, 8.0], [24.5, 8.0], [24.6, 8.0], [24.7, 8.0], [24.8, 8.0], [24.9, 8.0], [25.0, 8.0], [25.1, 8.0], [25.2, 8.0], [25.3, 8.0], [25.4, 8.0], [25.5, 8.0], [25.6, 8.0], [25.7, 8.0], [25.8, 8.0], [25.9, 8.0], [26.0, 8.0], [26.1, 8.0], [26.2, 8.0], [26.3, 8.0], [26.4, 8.0], [26.5, 8.0], [26.6, 8.0], [26.7, 8.0], [26.8, 8.0], [26.9, 8.0], [27.0, 8.0], [27.1, 8.0], [27.2, 8.0], [27.3, 8.0], [27.4, 8.0], [27.5, 8.0], [27.6, 8.0], [27.7, 8.0], [27.8, 8.0], [27.9, 8.0], [28.0, 8.0], [28.1, 8.0], [28.2, 8.0], [28.3, 8.0], [28.4, 8.0], [28.5, 8.0], [28.6, 8.0], [28.7, 8.0], [28.8, 8.0], [28.9, 8.0], [29.0, 8.0], [29.1, 8.0], [29.2, 8.0], [29.3, 8.0], [29.4, 8.0], [29.5, 8.0], [29.6, 8.0], [29.7, 8.0], [29.8, 8.0], [29.9, 8.0], [30.0, 8.0], [30.1, 8.0], [30.2, 8.0], [30.3, 8.0], [30.4, 8.0], [30.5, 8.0], [30.6, 8.0], [30.7, 8.0], [30.8, 8.0], [30.9, 8.0], [31.0, 8.0], [31.1, 8.0], [31.2, 8.0], [31.3, 8.0], [31.4, 8.0], [31.5, 8.0], [31.6, 8.0], [31.7, 8.0], [31.8, 8.0], [31.9, 8.0], [32.0, 8.0], [32.1, 8.0], [32.2, 8.0], [32.3, 8.0], [32.4, 8.0], [32.5, 8.0], [32.6, 8.0], [32.7, 8.0], [32.8, 8.0], [32.9, 8.0], [33.0, 8.0], [33.1, 8.0], [33.2, 8.0], [33.3, 8.0], [33.4, 8.0], [33.5, 8.0], [33.6, 8.0], [33.7, 8.0], [33.8, 8.0], [33.9, 8.0], [34.0, 8.0], [34.1, 8.0], [34.2, 8.0], [34.3, 8.0], [34.4, 8.0], [34.5, 8.0], [34.6, 8.0], [34.7, 8.0], [34.8, 8.0], [34.9, 9.0], [35.0, 9.0], [35.1, 9.0], [35.2, 9.0], [35.3, 9.0], [35.4, 9.0], [35.5, 9.0], [35.6, 9.0], [35.7, 9.0], [35.8, 9.0], [35.9, 9.0], [36.0, 9.0], [36.1, 9.0], [36.2, 9.0], [36.3, 9.0], [36.4, 9.0], [36.5, 9.0], [36.6, 9.0], [36.7, 9.0], [36.8, 9.0], [36.9, 9.0], [37.0, 9.0], [37.1, 9.0], [37.2, 9.0], [37.3, 9.0], [37.4, 9.0], [37.5, 9.0], [37.6, 9.0], [37.7, 9.0], [37.8, 9.0], [37.9, 9.0], [38.0, 9.0], [38.1, 9.0], [38.2, 9.0], [38.3, 9.0], [38.4, 9.0], [38.5, 9.0], [38.6, 9.0], [38.7, 9.0], [38.8, 9.0], [38.9, 9.0], [39.0, 9.0], [39.1, 9.0], [39.2, 9.0], [39.3, 9.0], [39.4, 9.0], [39.5, 9.0], [39.6, 9.0], [39.7, 9.0], [39.8, 9.0], [39.9, 9.0], [40.0, 9.0], [40.1, 9.0], [40.2, 9.0], [40.3, 9.0], [40.4, 9.0], [40.5, 9.0], [40.6, 9.0], [40.7, 9.0], [40.8, 9.0], [40.9, 9.0], [41.0, 9.0], [41.1, 9.0], [41.2, 9.0], [41.3, 9.0], [41.4, 9.0], [41.5, 9.0], [41.6, 9.0], [41.7, 9.0], [41.8, 9.0], [41.9, 9.0], [42.0, 9.0], [42.1, 9.0], [42.2, 9.0], [42.3, 9.0], [42.4, 9.0], [42.5, 9.0], [42.6, 9.0], [42.7, 9.0], [42.8, 9.0], [42.9, 9.0], [43.0, 9.0], [43.1, 9.0], [43.2, 9.0], [43.3, 9.0], [43.4, 9.0], [43.5, 9.0], [43.6, 9.0], [43.7, 9.0], [43.8, 9.0], [43.9, 9.0], [44.0, 9.0], [44.1, 9.0], [44.2, 9.0], [44.3, 9.0], [44.4, 9.0], [44.5, 9.0], [44.6, 9.0], [44.7, 9.0], [44.8, 9.0], [44.9, 9.0], [45.0, 9.0], [45.1, 9.0], [45.2, 9.0], [45.3, 9.0], [45.4, 9.0], [45.5, 9.0], [45.6, 9.0], [45.7, 9.0], [45.8, 9.0], [45.9, 9.0], [46.0, 9.0], [46.1, 9.0], [46.2, 9.0], [46.3, 9.0], [46.4, 9.0], [46.5, 9.0], [46.6, 9.0], [46.7, 9.0], [46.8, 9.0], [46.9, 9.0], [47.0, 9.0], [47.1, 9.0], [47.2, 9.0], [47.3, 9.0], [47.4, 9.0], [47.5, 9.0], [47.6, 9.0], [47.7, 9.0], [47.8, 9.0], [47.9, 9.0], [48.0, 9.0], [48.1, 9.0], [48.2, 9.0], [48.3, 9.0], [48.4, 9.0], [48.5, 9.0], [48.6, 9.0], [48.7, 9.0], [48.8, 9.0], [48.9, 9.0], [49.0, 9.0], [49.1, 9.0], [49.2, 9.0], [49.3, 9.0], [49.4, 9.0], [49.5, 9.0], [49.6, 9.0], [49.7, 9.0], [49.8, 9.0], [49.9, 9.0], [50.0, 9.0], [50.1, 9.0], [50.2, 9.0], [50.3, 9.0], [50.4, 9.0], [50.5, 9.0], [50.6, 9.0], [50.7, 9.0], [50.8, 9.0], [50.9, 9.0], [51.0, 9.0], [51.1, 9.0], [51.2, 9.0], [51.3, 9.0], [51.4, 9.0], [51.5, 9.0], [51.6, 9.0], [51.7, 9.0], [51.8, 9.0], [51.9, 9.0], [52.0, 9.0], [52.1, 9.0], [52.2, 9.0], [52.3, 9.0], [52.4, 9.0], [52.5, 9.0], [52.6, 9.0], [52.7, 9.0], [52.8, 9.0], [52.9, 9.0], [53.0, 9.0], [53.1, 9.0], [53.2, 9.0], [53.3, 9.0], [53.4, 9.0], [53.5, 9.0], [53.6, 9.0], [53.7, 9.0], [53.8, 9.0], [53.9, 9.0], [54.0, 9.0], [54.1, 9.0], [54.2, 9.0], [54.3, 9.0], [54.4, 9.0], [54.5, 9.0], [54.6, 9.0], [54.7, 9.0], [54.8, 9.0], [54.9, 9.0], [55.0, 9.0], [55.1, 9.0], [55.2, 9.0], [55.3, 9.0], [55.4, 9.0], [55.5, 9.0], [55.6, 9.0], [55.7, 9.0], [55.8, 9.0], [55.9, 9.0], [56.0, 9.0], [56.1, 9.0], [56.2, 9.0], [56.3, 9.0], [56.4, 9.0], [56.5, 9.0], [56.6, 9.0], [56.7, 9.0], [56.8, 9.0], [56.9, 9.0], [57.0, 9.0], [57.1, 9.0], [57.2, 9.0], [57.3, 9.0], [57.4, 9.0], [57.5, 9.0], [57.6, 9.0], [57.7, 9.0], [57.8, 9.0], [57.9, 9.0], [58.0, 9.0], [58.1, 9.0], [58.2, 9.0], [58.3, 9.0], [58.4, 9.0], [58.5, 9.0], [58.6, 9.0], [58.7, 9.0], [58.8, 9.0], [58.9, 9.0], [59.0, 9.0], [59.1, 9.0], [59.2, 9.0], [59.3, 9.0], [59.4, 9.0], [59.5, 9.0], [59.6, 9.0], [59.7, 9.0], [59.8, 9.0], [59.9, 9.0], [60.0, 9.0], [60.1, 9.0], [60.2, 9.0], [60.3, 9.0], [60.4, 9.0], [60.5, 9.0], [60.6, 9.0], [60.7, 9.0], [60.8, 9.0], [60.9, 9.0], [61.0, 9.0], [61.1, 9.0], [61.2, 9.0], [61.3, 9.0], [61.4, 9.0], [61.5, 9.0], [61.6, 9.0], [61.7, 9.0], [61.8, 9.0], [61.9, 9.0], [62.0, 9.0], [62.1, 9.0], [62.2, 9.0], [62.3, 9.0], [62.4, 9.0], [62.5, 9.0], [62.6, 9.0], [62.7, 9.0], [62.8, 9.0], [62.9, 9.0], [63.0, 9.0], [63.1, 9.0], [63.2, 9.0], [63.3, 9.0], [63.4, 9.0], [63.5, 9.0], [63.6, 9.0], [63.7, 9.0], [63.8, 9.0], [63.9, 9.0], [64.0, 9.0], [64.1, 9.0], [64.2, 9.0], [64.3, 9.0], [64.4, 9.0], [64.5, 9.0], [64.6, 9.0], [64.7, 9.0], [64.8, 9.0], [64.9, 9.0], [65.0, 9.0], [65.1, 9.0], [65.2, 9.0], [65.3, 9.0], [65.4, 9.0], [65.5, 9.0], [65.6, 9.0], [65.7, 9.0], [65.8, 9.0], [65.9, 9.0], [66.0, 9.0], [66.1, 9.0], [66.2, 9.0], [66.3, 9.0], [66.4, 9.0], [66.5, 9.0], [66.6, 9.0], [66.7, 9.0], [66.8, 9.0], [66.9, 9.0], [67.0, 9.0], [67.1, 9.0], [67.2, 9.0], [67.3, 9.0], [67.4, 9.0], [67.5, 9.0], [67.6, 9.0], [67.7, 9.0], [67.8, 9.0], [67.9, 9.0], [68.0, 9.0], [68.1, 9.0], [68.2, 9.0], [68.3, 9.0], [68.4, 9.0], [68.5, 9.0], [68.6, 9.0], [68.7, 9.0], [68.8, 9.0], [68.9, 9.0], [69.0, 9.0], [69.1, 9.0], [69.2, 9.0], [69.3, 9.0], [69.4, 9.0], [69.5, 9.0], [69.6, 9.0], [69.7, 9.0], [69.8, 9.0], [69.9, 9.0], [70.0, 9.0], [70.1, 9.0], [70.2, 9.0], [70.3, 9.0], [70.4, 9.0], [70.5, 9.0], [70.6, 9.0], [70.7, 9.0], [70.8, 9.0], [70.9, 9.0], [71.0, 9.0], [71.1, 9.0], [71.2, 9.0], [71.3, 9.0], [71.4, 9.0], [71.5, 9.0], [71.6, 9.0], [71.7, 9.0], [71.8, 9.0], [71.9, 9.0], [72.0, 9.0], [72.1, 9.0], [72.2, 9.0], [72.3, 9.0], [72.4, 9.0], [72.5, 9.0], [72.6, 9.0], [72.7, 9.0], [72.8, 9.0], [72.9, 9.0], [73.0, 9.0], [73.1, 9.0], [73.2, 9.0], [73.3, 9.0], [73.4, 9.0], [73.5, 9.0], [73.6, 9.0], [73.7, 9.0], [73.8, 9.0], [73.9, 9.0], [74.0, 9.0], [74.1, 9.0], [74.2, 9.0], [74.3, 9.0], [74.4, 9.0], [74.5, 9.0], [74.6, 9.0], [74.7, 9.0], [74.8, 9.0], [74.9, 9.0], [75.0, 9.0], [75.1, 9.0], [75.2, 9.0], [75.3, 9.0], [75.4, 9.0], [75.5, 9.0], [75.6, 9.0], [75.7, 9.0], [75.8, 9.0], [75.9, 9.0], [76.0, 9.0], [76.1, 9.0], [76.2, 9.0], [76.3, 9.0], [76.4, 9.0], [76.5, 9.0], [76.6, 9.0], [76.7, 9.0], [76.8, 9.0], [76.9, 9.0], [77.0, 9.0], [77.1, 9.0], [77.2, 9.0], [77.3, 9.0], [77.4, 9.0], [77.5, 9.0], [77.6, 9.0], [77.7, 10.0], [77.8, 10.0], [77.9, 10.0], [78.0, 10.0], [78.1, 10.0], [78.2, 10.0], [78.3, 10.0], [78.4, 10.0], [78.5, 10.0], [78.6, 10.0], [78.7, 10.0], [78.8, 10.0], [78.9, 10.0], [79.0, 10.0], [79.1, 10.0], [79.2, 10.0], [79.3, 10.0], [79.4, 10.0], [79.5, 10.0], [79.6, 10.0], [79.7, 10.0], [79.8, 10.0], [79.9, 10.0], [80.0, 10.0], [80.1, 10.0], [80.2, 10.0], [80.3, 10.0], [80.4, 10.0], [80.5, 10.0], [80.6, 10.0], [80.7, 10.0], [80.8, 10.0], [80.9, 10.0], [81.0, 10.0], [81.1, 10.0], [81.2, 10.0], [81.3, 10.0], [81.4, 10.0], [81.5, 10.0], [81.6, 10.0], [81.7, 10.0], [81.8, 10.0], [81.9, 10.0], [82.0, 10.0], [82.1, 10.0], [82.2, 10.0], [82.3, 10.0], [82.4, 10.0], [82.5, 10.0], [82.6, 10.0], [82.7, 10.0], [82.8, 10.0], [82.9, 10.0], [83.0, 10.0], [83.1, 10.0], [83.2, 10.0], [83.3, 10.0], [83.4, 10.0], [83.5, 10.0], [83.6, 10.0], [83.7, 10.0], [83.8, 10.0], [83.9, 10.0], [84.0, 11.0], [84.1, 11.0], [84.2, 11.0], [84.3, 11.0], [84.4, 11.0], [84.5, 11.0], [84.6, 11.0], [84.7, 11.0], [84.8, 11.0], [84.9, 11.0], [85.0, 11.0], [85.1, 11.0], [85.2, 11.0], [85.3, 11.0], [85.4, 11.0], [85.5, 11.0], [85.6, 11.0], [85.7, 11.0], [85.8, 11.0], [85.9, 11.0], [86.0, 11.0], [86.1, 11.0], [86.2, 11.0], [86.3, 11.0], [86.4, 11.0], [86.5, 11.0], [86.6, 11.0], [86.7, 11.0], [86.8, 11.0], [86.9, 11.0], [87.0, 11.0], [87.1, 11.0], [87.2, 11.0], [87.3, 11.0], [87.4, 11.0], [87.5, 11.0], [87.6, 11.0], [87.7, 11.0], [87.8, 11.0], [87.9, 11.0], [88.0, 11.0], [88.1, 11.0], [88.2, 11.0], [88.3, 11.0], [88.4, 11.0], [88.5, 11.0], [88.6, 11.0], [88.7, 11.0], [88.8, 11.0], [88.9, 11.0], [89.0, 11.0], [89.1, 11.0], [89.2, 12.0], [89.3, 12.0], [89.4, 12.0], [89.5, 12.0], [89.6, 12.0], [89.7, 12.0], [89.8, 12.0], [89.9, 12.0], [90.0, 12.0], [90.1, 12.0], [90.2, 12.0], [90.3, 12.0], [90.4, 12.0], [90.5, 12.0], [90.6, 12.0], [90.7, 12.0], [90.8, 12.0], [90.9, 12.0], [91.0, 12.0], [91.1, 12.0], [91.2, 12.0], [91.3, 12.0], [91.4, 12.0], [91.5, 12.0], [91.6, 12.0], [91.7, 12.0], [91.8, 12.0], [91.9, 12.0], [92.0, 12.0], [92.1, 12.0], [92.2, 12.0], [92.3, 12.0], [92.4, 12.0], [92.5, 12.0], [92.6, 12.0], [92.7, 12.0], [92.8, 12.0], [92.9, 12.0], [93.0, 12.0], [93.1, 12.0], [93.2, 12.0], [93.3, 12.0], [93.4, 12.0], [93.5, 12.0], [93.6, 12.0], [93.7, 12.0], [93.8, 12.0], [93.9, 12.0], [94.0, 12.0], [94.1, 12.0], [94.2, 12.0], [94.3, 12.0], [94.4, 13.0], [94.5, 13.0], [94.6, 13.0], [94.7, 13.0], [94.8, 13.0], [94.9, 13.0], [95.0, 13.0], [95.1, 13.0], [95.2, 13.0], [95.3, 13.0], [95.4, 13.0], [95.5, 13.0], [95.6, 13.0], [95.7, 13.0], [95.8, 13.0], [95.9, 13.0], [96.0, 14.0], [96.1, 14.0], [96.2, 14.0], [96.3, 14.0], [96.4, 14.0], [96.5, 14.0], [96.6, 15.0], [96.7, 15.0], [96.8, 15.0], [96.9, 15.0], [97.0, 15.0], [97.1, 15.0], [97.2, 15.0], [97.3, 15.0], [97.4, 15.0], [97.5, 15.0], [97.6, 15.0], [97.7, 15.0], [97.8, 15.0], [97.9, 15.0], [98.0, 16.0], [98.1, 16.0], [98.2, 16.0], [98.3, 16.0], [98.4, 16.0], [98.5, 16.0], [98.6, 16.0], [98.7, 16.0], [98.8, 17.0], [98.9, 17.0], [99.0, 17.0], [99.1, 18.0], [99.2, 18.0], [99.3, 19.0], [99.4, 19.0], [99.5, 19.0], [99.6, 19.0], [99.7, 20.0], [99.8, 20.0], [99.9, 21.0]], "isOverall": false, "label": "Products", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 15999.0, "series": [{"data": [[0.0, 15999.0], [100.0, 1.0]], "isOverall": false, "label": "Products", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 16000.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 16000.0, "series": [{"data": [[0.0, 16000.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 4.9E-324, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.731671737E12, "maxY": 2.4761904761904763, "series": [{"data": [[1.731671763E12, 1.0], [1.731671935E12, 1.0], [1.731672017E12, 1.0], [1.731671804E12, 1.0], [1.731671976E12, 1.0], [1.731671886E12, 1.0], [1.731671845E12, 1.0], [1.731671755E12, 1.0], [1.731671927E12, 1.0], [1.731672009E12, 1.0], [1.731671796E12, 1.0], [1.731671968E12, 1.0], [1.731671878E12, 1.0], [1.731671837E12, 1.0], [1.731671747E12, 1.0], [1.731671919E12, 1.0], [1.731672001E12, 1.0], [1.731671788E12, 1.0], [1.73167196E12, 1.0], [1.73167187E12, 1.0], [1.731671829E12, 1.0], [1.731671739E12, 1.0], [1.731671911E12, 1.0], [1.731671993E12, 1.0], [1.73167178E12, 1.0], [1.731671952E12, 1.0], [1.731671862E12, 1.0], [1.731671821E12, 1.0], [1.731672034E12, 1.0], [1.731671903E12, 1.0], [1.731671985E12, 1.0], [1.731671772E12, 1.0], [1.731671944E12, 1.0], [1.731671854E12, 1.0], [1.731671813E12, 1.0], [1.731672026E12, 1.0], [1.731671895E12, 1.0], [1.731671977E12, 1.0], [1.731671764E12, 1.0], [1.731671936E12, 1.0], [1.731671846E12, 1.0], [1.731671805E12, 1.0], [1.731672018E12, 1.0], [1.731671887E12, 1.0], [1.731671969E12, 1.0], [1.731671756E12, 1.0], [1.731671928E12, 1.0], [1.731671838E12, 1.0], [1.731671797E12, 1.0], [1.73167201E12, 1.0], [1.731671879E12, 1.0], [1.731671961E12, 1.0], [1.731671748E12, 1.0], [1.73167192E12, 1.0], [1.73167183E12, 1.0], [1.731671789E12, 1.0], [1.731672002E12, 1.0], [1.731671871E12, 1.0], [1.731671953E12, 1.0], [1.73167174E12, 1.0], [1.731671912E12, 1.0], [1.731671822E12, 1.0], [1.731672035E12, 1.0], [1.731671781E12, 1.0], [1.731671994E12, 1.0], [1.731671863E12, 1.0], [1.731671945E12, 1.0], [1.731671904E12, 1.0], [1.731671814E12, 1.0], [1.731672027E12, 1.0], [1.731671773E12, 1.0], [1.731671986E12, 1.0], [1.731671855E12, 1.0], [1.731671937E12, 1.0], [1.731671896E12, 1.0], [1.731671892E12, 1.0], [1.731671761E12, 1.0], [1.731671974E12, 1.0], [1.731671933E12, 1.0], [1.731671843E12, 1.0], [1.731671802E12, 1.0], [1.731672015E12, 1.0], [1.731671884E12, 1.0], [1.731671753E12, 1.0], [1.731671966E12, 1.0], [1.731671925E12, 1.0], [1.731671835E12, 1.0], [1.731671794E12, 1.0], [1.731672007E12, 1.0], [1.731671876E12, 1.0], [1.731671745E12, 1.0], [1.731671958E12, 1.0], [1.731671917E12, 1.0], [1.731671827E12, 1.0], [1.731671786E12, 1.0], [1.731671999E12, 1.0], [1.731671868E12, 1.0], [1.731671737E12, 2.4761904761904763], [1.73167195E12, 1.0], [1.731671909E12, 1.0], [1.731671819E12, 1.0], [1.731671778E12, 1.0], [1.731671991E12, 1.0], [1.73167186E12, 1.0], [1.731672032E12, 1.0], [1.731671942E12, 1.0], [1.731671901E12, 1.0], [1.731671811E12, 1.0], [1.73167177E12, 1.0], [1.731671983E12, 1.0], [1.731671852E12, 1.0], [1.731672024E12, 1.0], [1.731671934E12, 1.0], [1.731671893E12, 1.0], [1.731671803E12, 1.0], [1.731671762E12, 1.0], [1.731671975E12, 1.0], [1.731671844E12, 1.0], [1.731672016E12, 1.0], [1.731671926E12, 1.0], [1.731671885E12, 1.0], [1.731671795E12, 1.0], [1.731671754E12, 1.0], [1.731671967E12, 1.0], [1.731671836E12, 1.0], [1.731672008E12, 1.0], [1.731671918E12, 1.0], [1.731671877E12, 1.0], [1.731671787E12, 1.0], [1.731671746E12, 1.0], [1.731671959E12, 1.0], [1.731671828E12, 1.0], [1.731672E12, 1.0], [1.73167191E12, 1.0], [1.731671869E12, 1.0], [1.731671779E12, 1.0], [1.731671738E12, 1.068965517241379], [1.731671951E12, 1.0], [1.731672033E12, 1.0], [1.73167182E12, 1.0], [1.731671992E12, 1.0], [1.731671902E12, 1.0], [1.731671861E12, 1.0], [1.731671771E12, 1.0], [1.731671943E12, 1.0], [1.731672025E12, 1.0], [1.731671812E12, 1.0], [1.731671984E12, 1.0], [1.731671894E12, 1.0], [1.731671853E12, 1.0], [1.731671849E12, 1.0], [1.731672021E12, 1.0], [1.731671808E12, 1.0], [1.731671931E12, 1.0], [1.73167189E12, 1.0], [1.731671972E12, 1.0], [1.731671759E12, 1.0], [1.731671841E12, 1.0], [1.731672013E12, 1.0], [1.7316718E12, 1.0], [1.731671923E12, 1.0], [1.731671882E12, 1.0], [1.731671964E12, 1.0], [1.731671751E12, 1.0], [1.731671833E12, 1.0], [1.731672005E12, 1.0], [1.731671792E12, 1.0], [1.731671915E12, 1.0], [1.731671874E12, 1.0], [1.731671956E12, 1.0], [1.731671743E12, 1.0], [1.731671825E12, 1.0], [1.731672038E12, 1.0], [1.731671997E12, 1.0], [1.731671784E12, 1.0], [1.731671907E12, 1.0], [1.731671866E12, 1.0], [1.731671948E12, 1.0], [1.731671817E12, 1.0], [1.73167203E12, 1.0], [1.731671989E12, 1.0], [1.731671776E12, 1.0], [1.731671899E12, 1.0], [1.731671858E12, 1.0], [1.73167194E12, 1.0], [1.731671809E12, 1.0], [1.731672022E12, 1.0], [1.731671981E12, 1.0], [1.731671768E12, 1.0], [1.731671891E12, 1.0], [1.73167185E12, 1.0], [1.731671932E12, 1.0], [1.731671801E12, 1.0], [1.731672014E12, 1.0], [1.731671973E12, 1.0], [1.73167176E12, 1.0], [1.731671883E12, 1.0], [1.731671842E12, 1.0], [1.731671924E12, 1.0], [1.731671793E12, 1.0], [1.731672006E12, 1.0], [1.731671965E12, 1.0], [1.731671752E12, 1.0], [1.731671875E12, 1.0], [1.731671834E12, 1.0], [1.731671916E12, 1.0], [1.731671785E12, 1.0], [1.731671998E12, 1.0], [1.731671957E12, 1.0], [1.731671744E12, 1.0], [1.731671867E12, 1.0], [1.731671826E12, 1.0], [1.731671908E12, 1.0], [1.731671777E12, 1.0], [1.73167199E12, 1.0], [1.731671949E12, 1.0], [1.731671859E12, 1.0], [1.731671818E12, 1.0], [1.731672031E12, 1.0], [1.7316719E12, 1.0], [1.731671769E12, 1.0], [1.731671982E12, 1.0], [1.731671941E12, 1.0], [1.731671851E12, 1.0], [1.73167181E12, 1.0], [1.731672023E12, 1.0], [1.731671806E12, 1.0], [1.731672019E12, 1.0], [1.731671765E12, 1.0], [1.731671978E12, 1.0], [1.731671847E12, 1.0], [1.731671929E12, 1.0], [1.731671888E12, 1.0], [1.731671798E12, 1.0], [1.731672011E12, 1.0], [1.731671757E12, 1.0], [1.73167197E12, 1.0], [1.731671839E12, 1.0], [1.731671921E12, 1.0], [1.73167188E12, 1.0], [1.73167179E12, 1.0], [1.731672003E12, 1.0], [1.731671749E12, 1.0], [1.731671962E12, 1.0], [1.731671831E12, 1.0], [1.731671913E12, 1.0], [1.731671872E12, 1.0], [1.731671782E12, 1.0], [1.731671995E12, 1.0], [1.731671741E12, 1.0], [1.731671954E12, 1.0], [1.731672036E12, 1.0], [1.731671823E12, 1.0], [1.731671905E12, 1.0], [1.731671864E12, 1.0], [1.731671774E12, 1.0], [1.731671987E12, 1.0], [1.731671946E12, 1.0], [1.731672028E12, 1.0], [1.731671815E12, 1.0], [1.731671897E12, 1.0], [1.731671856E12, 1.0], [1.731671766E12, 1.0], [1.731671979E12, 1.0], [1.731671938E12, 1.0], [1.73167202E12, 1.0], [1.731671807E12, 1.0], [1.731671889E12, 1.0], [1.731671848E12, 1.0], [1.731671758E12, 1.0], [1.731671971E12, 1.0], [1.73167193E12, 1.0], [1.731672012E12, 1.0], [1.731671799E12, 1.0], [1.731671881E12, 1.0], [1.73167184E12, 1.0], [1.73167175E12, 1.0], [1.731671963E12, 1.0], [1.731671922E12, 1.0], [1.731672004E12, 1.0], [1.731671791E12, 1.0], [1.731671873E12, 1.0], [1.731671832E12, 1.0], [1.731671742E12, 1.0], [1.731671955E12, 1.0], [1.731671914E12, 1.0], [1.731671996E12, 1.0], [1.731671783E12, 1.0], [1.731671865E12, 1.0], [1.731672037E12, 1.0], [1.731671824E12, 1.0], [1.731671947E12, 1.0], [1.731671906E12, 1.0], [1.731671988E12, 1.0], [1.731671775E12, 1.0], [1.731671857E12, 1.0], [1.731672029E12, 1.0], [1.731671816E12, 1.0], [1.731671939E12, 1.0], [1.731671898E12, 1.0], [1.73167198E12, 1.0], [1.731671767E12, 1.0]], "isOverall": false, "label": "线程组", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.731672038E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 9.327699530516453, "minX": 1.0, "maxY": 25.066666666666674, "series": [{"data": [[2.0, 25.066666666666674], [1.0, 9.327699530516453], [3.0, 13.0]], "isOverall": false, "label": "Products", "isController": false}, {"data": [[1.0021875000000067, 9.344749999999982]], "isOverall": false, "label": "Products-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 3738.0, "minX": 1.731671737E12, "maxY": 129706.0, "series": [{"data": [[1.731671763E12, 100837.0], [1.731671935E12, 101994.0], [1.731672017E12, 102503.0], [1.731671804E12, 114705.0], [1.731671976E12, 96807.0], [1.731671886E12, 92691.0], [1.731671845E12, 90294.0], [1.731671755E12, 91842.0], [1.731671927E12, 121431.0], [1.731672009E12, 95837.0], [1.731671796E12, 92387.0], [1.731671968E12, 102210.0], [1.731671878E12, 113088.0], [1.731671837E12, 105011.0], [1.731671747E12, 97877.0], [1.731671919E12, 104393.0], [1.731672001E12, 97535.0], [1.731671788E12, 98505.0], [1.73167196E12, 104303.0], [1.73167187E12, 113202.0], [1.731671829E12, 97743.0], [1.731671739E12, 88366.0], [1.731671911E12, 91698.0], [1.731671993E12, 122154.0], [1.73167178E12, 99303.0], [1.731671952E12, 93784.0], [1.731671862E12, 93438.0], [1.731671821E12, 95710.0], [1.731672034E12, 104490.0], [1.731671903E12, 102349.0], [1.731671985E12, 100040.0], [1.731671772E12, 112885.0], [1.731671944E12, 109616.0], [1.731671854E12, 99757.0], [1.731671813E12, 92116.0], [1.731672026E12, 100495.0], [1.731671895E12, 97178.0], [1.731671977E12, 94583.0], [1.731671764E12, 89268.0], [1.731671936E12, 114380.0], [1.731671846E12, 102674.0], [1.731671805E12, 88497.0], [1.731672018E12, 96020.0], [1.731671887E12, 99790.0], [1.731671969E12, 101905.0], [1.731671756E12, 107306.0], [1.731671928E12, 96999.0], [1.731671838E12, 106935.0], [1.731671797E12, 103693.0], [1.73167201E12, 108873.0], [1.731671879E12, 94381.0], [1.731671961E12, 97025.0], [1.731671748E12, 117920.0], [1.73167192E12, 92297.0], [1.73167183E12, 92211.0], [1.731671789E12, 97847.0], [1.731672002E12, 116111.0], [1.731671871E12, 94549.0], [1.731671953E12, 101911.0], [1.73167174E12, 98498.0], [1.731671912E12, 104106.0], [1.731671822E12, 102702.0], [1.731672035E12, 100169.0], [1.731671781E12, 106385.0], [1.731671994E12, 95616.0], [1.731671863E12, 101982.0], [1.731671945E12, 94222.0], [1.731671904E12, 104207.0], [1.731671814E12, 118141.0], [1.731672027E12, 100905.0], [1.731671773E12, 90935.0], [1.731671986E12, 93811.0], [1.731671855E12, 99800.0], [1.731671937E12, 98437.0], [1.731671896E12, 95453.0], [1.731671892E12, 94522.0], [1.731671761E12, 97849.0], [1.731671974E12, 121535.0], [1.731671933E12, 95365.0], [1.731671843E12, 98781.0], [1.731671802E12, 90319.0], [1.731672015E12, 99741.0], [1.731671884E12, 109127.0], [1.731671753E12, 109902.0], [1.731671966E12, 98498.0], [1.731671925E12, 109107.0], [1.731671835E12, 98918.0], [1.731671794E12, 98797.0], [1.731672007E12, 102329.0], [1.731671876E12, 101553.0], [1.731671745E12, 90804.0], [1.731671958E12, 92662.0], [1.731671917E12, 116982.0], [1.731671827E12, 98845.0], [1.731671786E12, 99398.0], [1.731671999E12, 94737.0], [1.731671868E12, 92943.0], [1.731671737E12, 36712.0], [1.73167195E12, 108843.0], [1.731671909E12, 96116.0], [1.731671819E12, 111303.0], [1.731671778E12, 103830.0], [1.731671991E12, 111159.0], [1.73167186E12, 94915.0], [1.731672032E12, 100843.0], [1.731671942E12, 97732.0], [1.731671901E12, 95355.0], [1.731671811E12, 92630.0], [1.73167177E12, 87584.0], [1.731671983E12, 113643.0], [1.731671852E12, 92412.0], [1.731672024E12, 94507.0], [1.731671934E12, 95752.0], [1.731671893E12, 101700.0], [1.731671803E12, 108323.0], [1.731671762E12, 106453.0], [1.731671975E12, 94536.0], [1.731671844E12, 103433.0], [1.731672016E12, 103889.0], [1.731671926E12, 88853.0], [1.731671885E12, 109569.0], [1.731671795E12, 117128.0], [1.731671754E12, 98930.0], [1.731671967E12, 95959.0], [1.731671836E12, 94541.0], [1.731672008E12, 98687.0], [1.731671918E12, 93816.0], [1.731671877E12, 90676.0], [1.731671787E12, 101367.0], [1.731671746E12, 104234.0], [1.731671959E12, 104005.0], [1.731671828E12, 107649.0], [1.731672E12, 99454.0], [1.73167191E12, 100085.0], [1.731671869E12, 106326.0], [1.731671779E12, 92674.0], [1.731671738E12, 129706.0], [1.731671951E12, 107088.0], [1.731672033E12, 91153.0], [1.73167182E12, 93438.0], [1.731671992E12, 89078.0], [1.731671902E12, 100997.0], [1.731671861E12, 119486.0], [1.731671771E12, 107615.0], [1.731671943E12, 95045.0], [1.731672025E12, 104106.0], [1.731671812E12, 109892.0], [1.731671984E12, 97237.0], [1.731671894E12, 104373.0], [1.731671853E12, 97089.0], [1.731671849E12, 93519.0], [1.731672021E12, 118020.0], [1.731671808E12, 96073.0], [1.731671931E12, 104972.0], [1.73167189E12, 97674.0], [1.731671972E12, 104543.0], [1.731671759E12, 105867.0], [1.731671841E12, 101895.0], [1.731672013E12, 97000.0], [1.7316718E12, 105988.0], [1.731671923E12, 100874.0], [1.731671882E12, 96234.0], [1.731671964E12, 110005.0], [1.731671751E12, 87805.0], [1.731671833E12, 113321.0], [1.731672005E12, 94284.0], [1.731671792E12, 91091.0], [1.731671915E12, 91860.0], [1.731671874E12, 98990.0], [1.731671956E12, 99379.0], [1.731671743E12, 101924.0], [1.731671825E12, 103110.0], [1.731672038E12, 23541.0], [1.731671997E12, 109897.0], [1.731671784E12, 113027.0], [1.731671907E12, 95522.0], [1.731671866E12, 105358.0], [1.731671948E12, 96389.0], [1.731671817E12, 87851.0], [1.73167203E12, 116993.0], [1.731671989E12, 99252.0], [1.731671776E12, 115178.0], [1.731671899E12, 114634.0], [1.731671858E12, 94269.0], [1.73167194E12, 102442.0], [1.731671809E12, 105807.0], [1.731672022E12, 97726.0], [1.731671981E12, 91578.0], [1.731671768E12, 97645.0], [1.731671891E12, 99585.0], [1.73167185E12, 107971.0], [1.731671932E12, 110190.0], [1.731671801E12, 102874.0], [1.731672014E12, 96888.0], [1.731671973E12, 93644.0], [1.73167176E12, 93046.0], [1.731671883E12, 88600.0], [1.731671842E12, 113532.0], [1.731671924E12, 94480.0], [1.731671793E12, 104302.0], [1.731672006E12, 103479.0], [1.731671965E12, 100483.0], [1.731671752E12, 103882.0], [1.731671875E12, 104751.0], [1.731671834E12, 98099.0], [1.731671916E12, 104494.0], [1.731671785E12, 104581.0], [1.731671998E12, 106940.0], [1.731671957E12, 98428.0], [1.731671744E12, 107698.0], [1.731671867E12, 100511.0], [1.731671826E12, 93478.0], [1.731671908E12, 116674.0], [1.731671777E12, 94647.0], [1.73167199E12, 96556.0], [1.731671949E12, 91971.0], [1.731671859E12, 104234.0], [1.731671818E12, 107955.0], [1.731672031E12, 96205.0], [1.7316719E12, 100099.0], [1.731671769E12, 98762.0], [1.731671982E12, 106460.0], [1.731671941E12, 104826.0], [1.731671851E12, 116229.0], [1.73167181E12, 102092.0], [1.731672023E12, 99395.0], [1.731671806E12, 108355.0], [1.731672019E12, 95149.0], [1.731671765E12, 110239.0], [1.731671978E12, 104110.0], [1.731671847E12, 106148.0], [1.731671929E12, 98598.0], [1.731671888E12, 98482.0], [1.731671798E12, 91986.0], [1.731672011E12, 93670.0], [1.731671757E12, 114101.0], [1.73167197E12, 101890.0], [1.731671839E12, 90665.0], [1.731671921E12, 99796.0], [1.73167188E12, 116034.0], [1.73167179E12, 102349.0], [1.731672003E12, 98427.0], [1.731671749E12, 92042.0], [1.731671962E12, 97119.0], [1.731671831E12, 111490.0], [1.731671913E12, 105450.0], [1.731671872E12, 102908.0], [1.731671782E12, 98739.0], [1.731671995E12, 95666.0], [1.731671741E12, 103536.0], [1.731671954E12, 96050.0], [1.731672036E12, 101454.0], [1.731671823E12, 115632.0], [1.731671905E12, 93619.0], [1.731671864E12, 89408.0], [1.731671774E12, 99626.0], [1.731671987E12, 100744.0], [1.731671946E12, 116410.0], [1.731672028E12, 94997.0], [1.731671815E12, 96813.0], [1.731671897E12, 110305.0], [1.731671856E12, 101924.0], [1.731671766E12, 99681.0], [1.731671979E12, 102067.0], [1.731671938E12, 99954.0], [1.73167202E12, 101453.0], [1.731671807E12, 93168.0], [1.731671889E12, 115768.0], [1.731671848E12, 98243.0], [1.731671758E12, 92065.0], [1.731671971E12, 95834.0], [1.73167193E12, 90979.0], [1.731672012E12, 116333.0], [1.731671799E12, 102589.0], [1.731671881E12, 97645.0], [1.73167184E12, 99752.0], [1.73167175E12, 106461.0], [1.731671963E12, 106593.0], [1.731671922E12, 104047.0], [1.731672004E12, 98360.0], [1.731671791E12, 106735.0], [1.731671873E12, 94272.0], [1.731671832E12, 95437.0], [1.731671742E12, 96021.0], [1.731671955E12, 115511.0], [1.731671914E12, 101593.0], [1.731671996E12, 90274.0], [1.731671783E12, 91880.0], [1.731671865E12, 106758.0], [1.731672037E12, 97778.0], [1.731671824E12, 94350.0], [1.731671947E12, 96094.0], [1.731671906E12, 104302.0], [1.731671988E12, 102747.0], [1.731671775E12, 100703.0], [1.731671857E12, 104233.0], [1.731672029E12, 104600.0], [1.731671816E12, 100026.0], [1.731671939E12, 93037.0], [1.731671898E12, 93335.0], [1.73167198E12, 104552.0], [1.731671767E12, 112156.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.731671763E12, 12599.0], [1.731671935E12, 13544.0], [1.731672017E12, 12389.0], [1.731671804E12, 12250.0], [1.731671976E12, 12952.0], [1.731671886E12, 12831.0], [1.731671845E12, 12561.0], [1.731671755E12, 13609.0], [1.731671927E12, 13113.0], [1.731672009E12, 14046.0], [1.731671796E12, 13603.0], [1.731671968E12, 13660.0], [1.731671878E12, 14339.0], [1.731671837E12, 14118.0], [1.731671747E12, 13785.0], [1.731671919E12, 13743.0], [1.731672001E12, 12975.0], [1.731671788E12, 12954.0], [1.73167196E12, 13196.0], [1.73167187E12, 12178.0], [1.731671829E12, 12378.0], [1.731671739E12, 12967.0], [1.731671911E12, 12645.0], [1.731671993E12, 13603.0], [1.73167178E12, 13499.0], [1.731671952E12, 12973.0], [1.731671862E12, 13271.0], [1.731671821E12, 13847.0], [1.731672034E12, 14048.0], [1.731671903E12, 13872.0], [1.731671985E12, 13562.0], [1.731671772E12, 13405.0], [1.731671944E12, 13830.0], [1.731671854E12, 12912.0], [1.731671813E12, 12671.0], [1.731672026E12, 12703.0], [1.731671895E12, 12432.0], [1.731671977E12, 13193.0], [1.731671764E12, 13100.0], [1.731671936E12, 12257.0], [1.731671846E12, 13963.0], [1.731671805E12, 12917.0], [1.731672018E12, 13200.0], [1.731671887E12, 14094.0], [1.731671969E12, 13680.0], [1.731671756E12, 14020.0], [1.731671928E12, 13551.0], [1.731671838E12, 12877.0], [1.731671797E12, 13455.0], [1.73167201E12, 13634.0], [1.731671879E12, 12279.0], [1.731671961E12, 12402.0], [1.731671748E12, 12574.0], [1.73167192E12, 12491.0], [1.73167183E12, 13329.0], [1.731671789E12, 12983.0], [1.731672002E12, 12657.0], [1.731671871E12, 13438.0], [1.731671953E12, 14080.0], [1.73167174E12, 13729.0], [1.731671912E12, 14230.0], [1.731671822E12, 13746.0], [1.731672035E12, 13519.0], [1.731671781E12, 13651.0], [1.731671994E12, 13613.0], [1.731671863E12, 13464.0], [1.731671945E12, 12249.0], [1.731671904E12, 12661.0], [1.731671814E12, 12875.0], [1.731672027E12, 12327.0], [1.731671773E12, 12501.0], [1.731671986E12, 12510.0], [1.731671855E12, 13369.0], [1.731671937E12, 14019.0], [1.731671896E12, 13766.0], [1.731671892E12, 12500.0], [1.731671761E12, 13346.0], [1.731671974E12, 13160.0], [1.731671933E12, 12741.0], [1.731671843E12, 13865.0], [1.731671802E12, 13955.0], [1.731672015E12, 13473.0], [1.731671884E12, 14082.0], [1.731671753E12, 13327.0], [1.731671966E12, 13729.0], [1.731671925E12, 14275.0], [1.731671835E12, 12804.0], [1.731671794E12, 13670.0], [1.731672007E12, 13211.0], [1.731671876E12, 12361.0], [1.731671745E12, 12446.0], [1.731671958E12, 12540.0], [1.731671917E12, 12250.0], [1.731671827E12, 13539.0], [1.731671786E12, 12849.0], [1.731671999E12, 13051.0], [1.731671868E12, 13874.0], [1.731671737E12, 5328.0], [1.73167195E12, 14374.0], [1.731671909E12, 13868.0], [1.731671819E12, 13336.0], [1.731671778E12, 13885.0], [1.731671991E12, 13790.0], [1.73167186E12, 13255.0], [1.731672032E12, 13285.0], [1.731671942E12, 12328.0], [1.731671901E12, 12438.0], [1.731671811E12, 13007.0], [1.73167177E12, 12771.0], [1.731671983E12, 12232.0], [1.731671852E12, 13472.0], [1.731672024E12, 13073.0], [1.731671934E12, 13856.0], [1.731671893E12, 14024.0], [1.731671803E12, 13759.0], [1.731671762E12, 13906.0], [1.731671975E12, 13518.0], [1.731671844E12, 13319.0], [1.731672016E12, 14130.0], [1.731671926E12, 12469.0], [1.731671885E12, 12810.0], [1.731671795E12, 12599.0], [1.731671754E12, 12759.0], [1.731671967E12, 12406.0], [1.731671836E12, 13001.0], [1.731672008E12, 12378.0], [1.731671918E12, 13631.0], [1.731671877E12, 13320.0], [1.731671787E12, 14049.0], [1.731671746E12, 13783.0], [1.731671959E12, 14204.0], [1.731671828E12, 13943.0], [1.731672E12, 14088.0], [1.73167191E12, 12961.0], [1.731671869E12, 13777.0], [1.731671779E12, 12540.0], [1.731671738E12, 14211.0], [1.731671951E12, 12619.0], [1.731672033E12, 12430.0], [1.73167182E12, 12512.0], [1.731671992E12, 12388.0], [1.731671902E12, 13499.0], [1.731671861E12, 12877.0], [1.731671771E12, 13853.0], [1.731671943E12, 13850.0], [1.731672025E12, 14230.0], [1.731671812E12, 14275.0], [1.731671984E12, 13896.0], [1.731671894E12, 13422.0], [1.731671853E12, 13498.0], [1.731671849E12, 13865.0], [1.731672021E12, 13090.0], [1.731671808E12, 12977.0], [1.731671931E12, 13691.0], [1.73167189E12, 13929.0], [1.731671972E12, 13812.0], [1.731671759E12, 14361.0], [1.731671841E12, 13662.0], [1.731672013E12, 13501.0], [1.7316718E12, 13399.0], [1.731671923E12, 12405.0], [1.731671882E12, 12477.0], [1.731671964E12, 12171.0], [1.731671751E12, 12681.0], [1.731671833E12, 13109.0], [1.731672005E12, 12500.0], [1.731671792E12, 12424.0], [1.731671915E12, 14238.0], [1.731671874E12, 13573.0], [1.731671956E12, 13856.0], [1.731671743E12, 13750.0], [1.731671825E12, 13901.0], [1.731672038E12, 3738.0], [1.731671997E12, 14086.0], [1.731671784E12, 14399.0], [1.731671907E12, 13153.0], [1.731671866E12, 13080.0], [1.731671948E12, 12531.0], [1.731671817E12, 12735.0], [1.73167203E12, 12232.0], [1.731671989E12, 12424.0], [1.731671776E12, 12492.0], [1.731671899E12, 13574.0], [1.731671858E12, 12928.0], [1.73167194E12, 14042.0], [1.731671809E12, 14311.0], [1.731672022E12, 13895.0], [1.731671981E12, 13901.0], [1.731671768E12, 13887.0], [1.731671891E12, 13400.0], [1.73167185E12, 13881.0], [1.731671932E12, 13098.0], [1.731671801E12, 12386.0], [1.731672014E12, 12507.0], [1.731671973E12, 12945.0], [1.73167176E12, 12479.0], [1.731671883E12, 13045.0], [1.731671842E12, 12568.0], [1.731671924E12, 13216.0], [1.731671793E12, 13854.0], [1.731672006E12, 14262.0], [1.731671965E12, 13744.0], [1.731671752E12, 13763.0], [1.731671875E12, 13917.0], [1.731671834E12, 13892.0], [1.731671916E12, 13548.0], [1.731671785E12, 12181.0], [1.731671998E12, 12568.0], [1.731671957E12, 13135.0], [1.731671744E12, 13371.0], [1.731671867E12, 12485.0], [1.731671826E12, 12503.0], [1.731671908E12, 12851.0], [1.731671777E12, 13389.0], [1.73167199E12, 13760.0], [1.731671949E12, 13027.0], [1.731671859E12, 13783.0], [1.731671818E12, 13938.0], [1.731672031E12, 14152.0], [1.7316719E12, 13818.0], [1.731671769E12, 12980.0], [1.731671982E12, 13512.0], [1.731671941E12, 13472.0], [1.731671851E12, 12187.0], [1.73167181E12, 12620.0], [1.731672023E12, 12771.0], [1.731671806E12, 14496.0], [1.731672019E12, 13128.0], [1.731671765E12, 13781.0], [1.731671978E12, 14019.0], [1.731671847E12, 13482.0], [1.731671929E12, 12957.0], [1.731671888E12, 13163.0], [1.731671798E12, 12663.0], [1.731672011E12, 12208.0], [1.731671757E12, 12203.0], [1.73167197E12, 12665.0], [1.731671839E12, 12495.0], [1.731671921E12, 13529.0], [1.73167188E12, 13401.0], [1.73167179E12, 13872.0], [1.731672003E12, 13921.0], [1.731671749E12, 13044.0], [1.731671962E12, 14076.0], [1.731671831E12, 14068.0], [1.731671913E12, 13170.0], [1.731671872E12, 14088.0], [1.731671782E12, 12679.0], [1.731671995E12, 12459.0], [1.731671741E12, 13434.0], [1.731671954E12, 12943.0], [1.731672036E12, 12426.0], [1.731671823E12, 12365.0], [1.731671905E12, 12946.0], [1.731671864E12, 12681.0], [1.731671774E12, 14058.0], [1.731671987E12, 13801.0], [1.731671946E12, 13607.0], [1.731672028E12, 14395.0], [1.731671815E12, 13560.0], [1.731671897E12, 13878.0], [1.731671856E12, 13750.0], [1.731671766E12, 13030.0], [1.731671979E12, 12869.0], [1.731671938E12, 13434.0], [1.73167202E12, 13640.0], [1.731671807E12, 12528.0], [1.731671889E12, 12437.0], [1.731671848E12, 12336.0], [1.731671758E12, 13134.0], [1.731671971E12, 13188.0], [1.73167193E12, 13238.0], [1.731672012E12, 13828.0], [1.731671799E12, 13974.0], [1.731671881E12, 13887.0], [1.73167184E12, 13824.0], [1.73167175E12, 13976.0], [1.731671963E12, 13641.0], [1.731671922E12, 14052.0], [1.731672004E12, 13162.0], [1.731671791E12, 13183.0], [1.731671873E12, 12487.0], [1.731671832E12, 12509.0], [1.731671742E12, 12847.0], [1.731671955E12, 12766.0], [1.731671914E12, 12323.0], [1.731671996E12, 13319.0], [1.731671783E12, 13290.0], [1.731671865E12, 14275.0], [1.731672037E12, 13728.0], [1.731671824E12, 13462.0], [1.731671947E12, 13663.0], [1.731671906E12, 13854.0], [1.731671988E12, 13689.0], [1.731671775E12, 13419.0], [1.731671857E12, 12889.0], [1.731672029E12, 13351.0], [1.731671816E12, 13222.0], [1.731671939E12, 12467.0], [1.731671898E12, 12208.0], [1.73167198E12, 12678.0], [1.731671767E12, 12943.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.731672038E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 8.54, "minX": 1.731671737E12, "maxY": 22.285714285714292, "series": [{"data": [[1.731671763E12, 9.411764705882353], [1.731671935E12, 9.222222222222223], [1.731672017E12, 9.6], [1.731671804E12, 9.860000000000001], [1.731671976E12, 9.0], [1.731671886E12, 9.235294117647056], [1.731671845E12, 8.54], [1.731671755E12, 9.129629629629628], [1.731671927E12, 9.884615384615381], [1.731672009E12, 9.178571428571429], [1.731671796E12, 9.125], [1.731671968E12, 10.500000000000002], [1.731671878E12, 9.175438596491228], [1.731671837E12, 9.333333333333336], [1.731671747E12, 9.400000000000002], [1.731671919E12, 8.981818181818177], [1.731672001E12, 9.249999999999996], [1.731671788E12, 9.615384615384611], [1.73167196E12, 9.433962264150942], [1.73167187E12, 10.24], [1.731671829E12, 9.739999999999997], [1.731671739E12, 9.499999999999996], [1.731671911E12, 8.680000000000001], [1.731671993E12, 9.555555555555555], [1.73167178E12, 9.38888888888889], [1.731671952E12, 9.538461538461537], [1.731671862E12, 9.054545454545455], [1.731671821E12, 8.963636363636363], [1.731672034E12, 9.160714285714285], [1.731671903E12, 9.178571428571427], [1.731671985E12, 9.055555555555555], [1.731671772E12, 9.499999999999998], [1.731671944E12, 9.618181818181816], [1.731671854E12, 8.942307692307693], [1.731671813E12, 9.11764705882353], [1.731672026E12, 9.50980392156863], [1.731671895E12, 9.319999999999999], [1.731671977E12, 8.807692307692308], [1.731671764E12, 9.134615384615385], [1.731671936E12, 9.8], [1.731671846E12, 9.178571428571427], [1.731671805E12, 9.05769230769231], [1.731672018E12, 9.528301886792454], [1.731671887E12, 9.035714285714285], [1.731671969E12, 9.581818181818177], [1.731671756E12, 9.624999999999995], [1.731671928E12, 9.035714285714285], [1.731671838E12, 9.711538461538458], [1.731671797E12, 9.703703703703704], [1.73167201E12, 9.166666666666668], [1.731671879E12, 8.98], [1.731671961E12, 9.100000000000001], [1.731671748E12, 10.099999999999998], [1.73167192E12, 8.94], [1.73167183E12, 9.283018867924527], [1.731671789E12, 9.607843137254903], [1.731672002E12, 10.058823529411764], [1.731671871E12, 9.055555555555555], [1.731671953E12, 9.160714285714286], [1.73167174E12, 9.70909090909091], [1.731671912E12, 9.228070175438596], [1.731671822E12, 9.400000000000002], [1.731672035E12, 9.222222222222221], [1.731671781E12, 9.636363636363635], [1.731671994E12, 8.76785714285714], [1.731671863E12, 9.055555555555552], [1.731671945E12, 9.299999999999999], [1.731671904E12, 9.509803921568627], [1.731671814E12, 9.921568627450979], [1.731672027E12, 10.099999999999996], [1.731671773E12, 9.419999999999998], [1.731671986E12, 10.040000000000001], [1.731671855E12, 9.20754716981132], [1.731671937E12, 9.31578947368421], [1.731671896E12, 9.163636363636364], [1.731671892E12, 8.879999999999997], [1.731671761E12, 9.339622641509436], [1.731671974E12, 10.057692307692307], [1.731671933E12, 9.176470588235292], [1.731671843E12, 8.92982456140351], [1.731671802E12, 8.636363636363635], [1.731672015E12, 9.20754716981132], [1.731671884E12, 9.17543859649123], [1.731671753E12, 9.925925925925926], [1.731671966E12, 9.127272727272727], [1.731671925E12, 9.403508771929825], [1.731671835E12, 9.098039215686272], [1.731671794E12, 9.127272727272723], [1.731672007E12, 9.000000000000002], [1.731671876E12, 9.34], [1.731671745E12, 9.679999999999998], [1.731671958E12, 9.14], [1.731671917E12, 9.720000000000002], [1.731671827E12, 9.203703703703702], [1.731671786E12, 9.725490196078432], [1.731671999E12, 9.346153846153847], [1.731671868E12, 8.81818181818182], [1.731671737E12, 22.285714285714292], [1.73167195E12, 9.27586206896552], [1.731671909E12, 8.94736842105263], [1.731671819E12, 9.648148148148147], [1.731671778E12, 9.236363636363631], [1.731671991E12, 9.27272727272727], [1.73167186E12, 9.07547169811321], [1.731672032E12, 9.339622641509434], [1.731671942E12, 9.280000000000003], [1.731671901E12, 9.78], [1.731671811E12, 9.73076923076923], [1.73167177E12, 8.76], [1.731671983E12, 10.020000000000001], [1.731671852E12, 8.666666666666666], [1.731672024E12, 9.615384615384615], [1.731671934E12, 9.109090909090911], [1.731671893E12, 9.17857142857143], [1.731671803E12, 9.599999999999998], [1.731671762E12, 9.178571428571429], [1.731671975E12, 9.017857142857144], [1.731671844E12, 9.056603773584904], [1.731672016E12, 9.000000000000004], [1.731671926E12, 8.999999999999998], [1.731671885E12, 9.442307692307693], [1.731671795E12, 10.560000000000006], [1.731671754E12, 9.568627450980395], [1.731671967E12, 9.259999999999996], [1.731671836E12, 9.33333333333333], [1.731672008E12, 9.919999999999998], [1.731671918E12, 8.727272727272728], [1.731671877E12, 9.11320754716981], [1.731671787E12, 9.228070175438598], [1.731671746E12, 9.745454545454539], [1.731671959E12, 9.210526315789474], [1.731671828E12, 9.392857142857142], [1.731672E12, 9.035714285714285], [1.73167191E12, 9.173076923076923], [1.731671869E12, 9.436363636363634], [1.731671779E12, 9.260000000000003], [1.731671738E12, 11.24137931034483], [1.731671951E12, 9.882352941176475], [1.731672033E12, 9.019999999999998], [1.73167182E12, 9.219999999999999], [1.731671992E12, 8.840000000000002], [1.731671902E12, 9.622641509433963], [1.731671861E12, 10.058823529411766], [1.731671771E12, 9.464285714285712], [1.731671943E12, 9.090909090909092], [1.731672025E12, 9.456140350877194], [1.731671812E12, 9.561403508771932], [1.731671984E12, 8.910714285714285], [1.731671894E12, 9.277777777777777], [1.731671853E12, 9.462962962962964], [1.731671849E12, 8.85454545454545], [1.731672021E12, 9.942307692307695], [1.731671808E12, 9.807692307692307], [1.731671931E12, 9.599999999999998], [1.73167189E12, 8.771929824561404], [1.731671972E12, 9.145454545454543], [1.731671759E12, 9.333333333333334], [1.731671841E12, 9.218181818181819], [1.731672013E12, 8.963636363636363], [1.7316718E12, 9.333333333333332], [1.731671923E12, 9.379999999999997], [1.731671882E12, 8.760000000000002], [1.731671964E12, 9.620000000000003], [1.731671751E12, 9.219999999999999], [1.731671833E12, 9.961538461538465], [1.731672005E12, 9.079999999999998], [1.731671792E12, 9.340000000000002], [1.731671915E12, 8.607142857142858], [1.731671874E12, 9.277777777777777], [1.731671956E12, 8.92982456140351], [1.731671743E12, 9.363636363636363], [1.731671825E12, 9.181818181818183], [1.731672038E12, 8.599999999999998], [1.731671997E12, 9.385964912280704], [1.731671784E12, 9.421052631578947], [1.731671907E12, 9.264150943396226], [1.731671866E12, 9.339622641509434], [1.731671948E12, 9.119999999999997], [1.731671817E12, 8.760000000000005], [1.73167203E12, 10.14], [1.731671989E12, 9.220000000000002], [1.731671776E12, 10.02], [1.731671899E12, 9.518518518518523], [1.731671858E12, 9.269230769230772], [1.73167194E12, 9.446428571428575], [1.731671809E12, 9.245614035087723], [1.731672022E12, 9.192982456140353], [1.731671981E12, 8.727272727272727], [1.731671768E12, 9.000000000000004], [1.731671891E12, 9.0188679245283], [1.73167185E12, 9.200000000000001], [1.731671932E12, 9.698113207547166], [1.731671801E12, 9.76], [1.731672014E12, 8.879999999999997], [1.731671973E12, 8.903846153846153], [1.73167176E12, 8.860000000000001], [1.731671883E12, 8.568627450980392], [1.731671842E12, 9.82], [1.731671924E12, 9.207547169811319], [1.731671793E12, 9.563636363636363], [1.731672006E12, 8.947368421052632], [1.731671965E12, 9.07272727272727], [1.731671752E12, 9.418181818181816], [1.731671875E12, 9.053571428571429], [1.731671834E12, 9.052631578947368], [1.731671916E12, 9.092592592592595], [1.731671785E12, 9.819999999999999], [1.731671998E12, 9.588235294117649], [1.731671957E12, 9.19230769230769], [1.731671744E12, 9.666666666666668], [1.731671867E12, 9.72], [1.731671826E12, 9.02], [1.731671908E12, 10.01960784313726], [1.731671777E12, 9.309090909090909], [1.73167199E12, 9.163636363636368], [1.731671949E12, 9.078431372549018], [1.731671859E12, 9.27272727272727], [1.731671818E12, 9.30357142857143], [1.731672031E12, 8.929824561403507], [1.7316719E12, 9.232142857142858], [1.731671769E12, 9.076923076923077], [1.731671982E12, 9.2962962962963], [1.731671941E12, 9.759259259259256], [1.731671851E12, 9.860000000000001], [1.73167181E12, 9.50980392156863], [1.731672023E12, 9.392156862745097], [1.731671806E12, 9.22413793103448], [1.731672019E12, 9.038461538461535], [1.731671765E12, 9.29090909090909], [1.731671978E12, 9.374999999999998], [1.731671847E12, 9.333333333333329], [1.731671929E12, 8.846153846153843], [1.731671888E12, 9.188679245283017], [1.731671798E12, 8.62], [1.731672011E12, 9.180000000000003], [1.731671757E12, 10.04], [1.73167197E12, 9.490196078431373], [1.731671839E12, 9.159999999999998], [1.731671921E12, 9.444444444444441], [1.73167188E12, 9.433962264150946], [1.73167179E12, 9.357142857142858], [1.731672003E12, 9.000000000000002], [1.731671749E12, 9.555555555555555], [1.731671962E12, 9.232142857142858], [1.731671831E12, 9.642857142857146], [1.731671913E12, 9.566037735849054], [1.731671872E12, 9.035714285714286], [1.731671782E12, 9.549019607843135], [1.731671995E12, 8.82], [1.731671741E12, 9.62962962962963], [1.731671954E12, 9.28846153846154], [1.731672036E12, 9.459999999999999], [1.731671823E12, 10.040000000000001], [1.731671905E12, 9.461538461538462], [1.731671864E12, 8.839999999999998], [1.731671774E12, 9.035714285714286], [1.731671987E12, 9.472727272727274], [1.731671946E12, 9.666666666666664], [1.731672028E12, 9.719298245614038], [1.731671815E12, 9.14285714285714], [1.731671897E12, 9.490909090909092], [1.731671856E12, 9.145454545454546], [1.731671766E12, 9.320754716981131], [1.731671979E12, 9.153846153846153], [1.731671938E12, 9.283018867924527], [1.73167202E12, 9.8], [1.731671807E12, 9.28], [1.731671889E12, 9.679999999999994], [1.731671848E12, 9.56], [1.731671758E12, 9.056603773584907], [1.731671971E12, 9.226415094339625], [1.73167193E12, 8.653846153846155], [1.731672012E12, 9.654545454545456], [1.731671799E12, 9.410714285714281], [1.731671881E12, 8.75438596491228], [1.73167184E12, 8.909090909090907], [1.73167175E12, 9.357142857142856], [1.731671963E12, 9.166666666666668], [1.731671922E12, 9.0], [1.731672004E12, 8.961538461538462], [1.731671791E12, 10.075471698113205], [1.731671873E12, 9.079999999999998], [1.731671832E12, 9.235294117647058], [1.731671742E12, 9.745098039215687], [1.731671955E12, 9.843137254901961], [1.731671914E12, 9.580000000000004], [1.731671996E12, 8.634615384615385], [1.731671783E12, 9.245283018867923], [1.731671865E12, 9.298245614035087], [1.731672037E12, 9.490909090909092], [1.731671824E12, 9.181818181818178], [1.731671947E12, 9.160714285714285], [1.731671906E12, 9.23636363636364], [1.731671988E12, 9.036363636363637], [1.731671775E12, 9.629629629629632], [1.731671857E12, 9.346153846153843], [1.731672029E12, 9.509433962264152], [1.731671816E12, 9.075471698113205], [1.731671939E12, 9.159999999999998], [1.731671898E12, 9.28], [1.73167198E12, 9.745098039215689], [1.731671767E12, 9.823529411764708]], "isOverall": false, "label": "Products", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.731672038E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 8.54, "minX": 1.731671737E12, "maxY": 22.14285714285714, "series": [{"data": [[1.731671763E12, 9.411764705882353], [1.731671935E12, 9.222222222222223], [1.731672017E12, 9.6], [1.731671804E12, 9.860000000000001], [1.731671976E12, 8.96153846153846], [1.731671886E12, 9.215686274509803], [1.731671845E12, 8.54], [1.731671755E12, 9.129629629629628], [1.731671927E12, 9.884615384615381], [1.731672009E12, 9.142857142857142], [1.731671796E12, 9.125], [1.731671968E12, 10.500000000000002], [1.731671878E12, 9.157894736842104], [1.731671837E12, 9.298245614035086], [1.731671747E12, 9.345454545454547], [1.731671919E12, 8.981818181818177], [1.731672001E12, 9.249999999999996], [1.731671788E12, 9.576923076923077], [1.73167196E12, 9.433962264150942], [1.73167187E12, 10.24], [1.731671829E12, 9.739999999999997], [1.731671739E12, 9.365384615384617], [1.731671911E12, 8.64], [1.731671993E12, 9.555555555555555], [1.73167178E12, 9.37037037037037], [1.731671952E12, 9.51923076923077], [1.731671862E12, 9.03636363636364], [1.731671821E12, 8.927272727272728], [1.731672034E12, 9.160714285714285], [1.731671903E12, 9.160714285714294], [1.731671985E12, 9.055555555555555], [1.731671772E12, 9.481481481481483], [1.731671944E12, 9.618181818181816], [1.731671854E12, 8.923076923076923], [1.731671813E12, 9.098039215686278], [1.731672026E12, 9.50980392156863], [1.731671895E12, 9.3], [1.731671977E12, 8.788461538461537], [1.731671764E12, 9.115384615384619], [1.731671936E12, 9.8], [1.731671846E12, 9.178571428571427], [1.731671805E12, 9.03846153846154], [1.731672018E12, 9.509433962264152], [1.731671887E12, 9.017857142857142], [1.731671969E12, 9.581818181818177], [1.731671756E12, 9.624999999999995], [1.731671928E12, 9.000000000000002], [1.731671838E12, 9.711538461538458], [1.731671797E12, 9.703703703703704], [1.73167201E12, 9.166666666666668], [1.731671879E12, 8.960000000000003], [1.731671961E12, 9.079999999999998], [1.731671748E12, 10.06], [1.73167192E12, 8.94], [1.73167183E12, 9.264150943396224], [1.731671789E12, 9.607843137254903], [1.731672002E12, 10.039215686274508], [1.731671871E12, 9.055555555555555], [1.731671953E12, 9.160714285714286], [1.73167174E12, 9.61818181818182], [1.731671912E12, 9.228070175438596], [1.731671822E12, 9.381818181818186], [1.731672035E12, 9.222222222222221], [1.731671781E12, 9.618181818181817], [1.731671994E12, 8.76785714285714], [1.731671863E12, 9.055555555555552], [1.731671945E12, 9.299999999999999], [1.731671904E12, 9.490196078431367], [1.731671814E12, 9.921568627450979], [1.731672027E12, 10.099999999999996], [1.731671773E12, 9.4], [1.731671986E12, 10.02], [1.731671855E12, 9.188679245283017], [1.731671937E12, 9.298245614035087], [1.731671896E12, 9.163636363636364], [1.731671892E12, 8.879999999999997], [1.731671761E12, 9.339622641509436], [1.731671974E12, 10.057692307692307], [1.731671933E12, 9.156862745098037], [1.731671843E12, 8.92982456140351], [1.731671802E12, 8.636363636363635], [1.731672015E12, 9.20754716981132], [1.731671884E12, 9.157894736842106], [1.731671753E12, 9.925925925925926], [1.731671966E12, 9.127272727272727], [1.731671925E12, 9.3859649122807], [1.731671835E12, 9.078431372549021], [1.731671794E12, 9.09090909090909], [1.731672007E12, 8.981132075471697], [1.731671876E12, 9.34], [1.731671745E12, 9.639999999999999], [1.731671958E12, 9.14], [1.731671917E12, 9.720000000000002], [1.731671827E12, 9.185185185185187], [1.731671786E12, 9.509803921568626], [1.731671999E12, 9.326923076923075], [1.731671868E12, 8.81818181818182], [1.731671737E12, 22.14285714285714], [1.73167195E12, 9.27586206896552], [1.731671909E12, 8.929824561403509], [1.731671819E12, 9.648148148148147], [1.731671778E12, 9.236363636363631], [1.731671991E12, 9.254545454545456], [1.73167186E12, 9.056603773584905], [1.731672032E12, 9.320754716981131], [1.731671942E12, 9.280000000000003], [1.731671901E12, 9.760000000000003], [1.731671811E12, 9.73076923076923], [1.73167177E12, 8.740000000000004], [1.731671983E12, 10.020000000000001], [1.731671852E12, 8.666666666666666], [1.731672024E12, 9.615384615384615], [1.731671934E12, 9.09090909090909], [1.731671893E12, 9.160714285714286], [1.731671803E12, 9.563636363636368], [1.731671762E12, 9.178571428571429], [1.731671975E12, 9.0], [1.731671844E12, 9.037735849056602], [1.731672016E12, 9.000000000000004], [1.731671926E12, 8.999999999999998], [1.731671885E12, 9.423076923076922], [1.731671795E12, 10.54], [1.731671754E12, 9.529411764705882], [1.731671967E12, 9.24], [1.731671836E12, 9.274509803921568], [1.731672008E12, 9.9], [1.731671918E12, 8.672727272727272], [1.731671877E12, 9.11320754716981], [1.731671787E12, 9.192982456140353], [1.731671746E12, 9.727272727272725], [1.731671959E12, 9.210526315789474], [1.731671828E12, 9.392857142857142], [1.731672E12, 9.035714285714285], [1.73167191E12, 9.173076923076923], [1.731671869E12, 9.418181818181818], [1.731671779E12, 9.260000000000003], [1.731671738E12, 11.172413793103448], [1.731671951E12, 9.882352941176475], [1.731672033E12, 9.019999999999998], [1.73167182E12, 9.159999999999998], [1.731671992E12, 8.840000000000002], [1.731671902E12, 9.622641509433963], [1.731671861E12, 10.058823529411766], [1.731671771E12, 9.464285714285712], [1.731671943E12, 9.090909090909092], [1.731672025E12, 9.438596491228068], [1.731671812E12, 9.561403508771932], [1.731671984E12, 8.892857142857146], [1.731671894E12, 9.259259259259258], [1.731671853E12, 9.462962962962964], [1.731671849E12, 8.85454545454545], [1.731672021E12, 9.942307692307695], [1.731671808E12, 9.788461538461542], [1.731671931E12, 9.599999999999998], [1.73167189E12, 8.771929824561404], [1.731671972E12, 9.145454545454543], [1.731671759E12, 9.333333333333334], [1.731671841E12, 9.218181818181819], [1.731672013E12, 8.963636363636363], [1.7316718E12, 9.314814814814811], [1.731671923E12, 9.379999999999997], [1.731671882E12, 8.74], [1.731671964E12, 9.580000000000002], [1.731671751E12, 9.179999999999998], [1.731671833E12, 9.903846153846155], [1.731672005E12, 9.059999999999999], [1.731671792E12, 9.320000000000002], [1.731671915E12, 8.607142857142858], [1.731671874E12, 9.240740740740739], [1.731671956E12, 8.894736842105267], [1.731671743E12, 9.363636363636363], [1.731671825E12, 9.16363636363636], [1.731672038E12, 8.599999999999998], [1.731671997E12, 9.385964912280704], [1.731671784E12, 9.403508771929825], [1.731671907E12, 9.245283018867925], [1.731671866E12, 9.339622641509434], [1.731671948E12, 9.099999999999998], [1.731671817E12, 8.760000000000005], [1.73167203E12, 10.14], [1.731671989E12, 9.200000000000005], [1.731671776E12, 9.999999999999996], [1.731671899E12, 9.518518518518523], [1.731671858E12, 9.25], [1.73167194E12, 9.446428571428575], [1.731671809E12, 9.228070175438598], [1.731672022E12, 9.192982456140353], [1.731671981E12, 8.727272727272727], [1.731671768E12, 9.000000000000004], [1.731671891E12, 9.0188679245283], [1.73167185E12, 9.200000000000001], [1.731671932E12, 9.679245283018865], [1.731671801E12, 9.76], [1.731672014E12, 8.879999999999997], [1.731671973E12, 8.903846153846153], [1.73167176E12, 8.860000000000001], [1.731671883E12, 8.568627450980392], [1.731671842E12, 9.799999999999995], [1.731671924E12, 9.207547169811319], [1.731671793E12, 9.563636363636363], [1.731672006E12, 8.929824561403505], [1.731671965E12, 9.036363636363639], [1.731671752E12, 9.38181818181818], [1.731671875E12, 9.035714285714286], [1.731671834E12, 9.035087719298243], [1.731671916E12, 9.092592592592595], [1.731671785E12, 9.799999999999999], [1.731671998E12, 9.588235294117649], [1.731671957E12, 9.19230769230769], [1.731671744E12, 9.611111111111107], [1.731671867E12, 9.699999999999996], [1.731671826E12, 9.02], [1.731671908E12, 10.01960784313726], [1.731671777E12, 9.290909090909087], [1.73167199E12, 9.163636363636368], [1.731671949E12, 9.078431372549018], [1.731671859E12, 9.27272727272727], [1.731671818E12, 9.285714285714285], [1.731672031E12, 8.929824561403507], [1.7316719E12, 9.214285714285715], [1.731671769E12, 9.057692307692307], [1.731671982E12, 9.2962962962963], [1.731671941E12, 9.759259259259256], [1.731671851E12, 9.839999999999998], [1.73167181E12, 9.490196078431376], [1.731672023E12, 9.392156862745097], [1.731671806E12, 9.206896551724139], [1.731672019E12, 9.038461538461535], [1.731671765E12, 9.29090909090909], [1.731671978E12, 9.33928571428571], [1.731671847E12, 9.314814814814815], [1.731671929E12, 8.846153846153843], [1.731671888E12, 9.188679245283017], [1.731671798E12, 8.599999999999998], [1.731672011E12, 9.180000000000003], [1.731671757E12, 10.02], [1.73167197E12, 9.490196078431373], [1.731671839E12, 9.159999999999998], [1.731671921E12, 9.444444444444441], [1.73167188E12, 9.433962264150946], [1.73167179E12, 9.357142857142858], [1.731672003E12, 8.982456140350875], [1.731671749E12, 9.518518518518519], [1.731671962E12, 9.232142857142858], [1.731671831E12, 9.607142857142861], [1.731671913E12, 9.547169811320751], [1.731671872E12, 9.017857142857144], [1.731671782E12, 9.529411764705884], [1.731671995E12, 8.82], [1.731671741E12, 9.592592592592592], [1.731671954E12, 9.28846153846154], [1.731672036E12, 9.459999999999999], [1.731671823E12, 10.020000000000003], [1.731671905E12, 9.442307692307693], [1.731671864E12, 8.839999999999998], [1.731671774E12, 8.999999999999996], [1.731671987E12, 9.472727272727274], [1.731671946E12, 9.648148148148149], [1.731672028E12, 9.701754385964914], [1.731671815E12, 9.14285714285714], [1.731671897E12, 9.47272727272727], [1.731671856E12, 9.145454545454546], [1.731671766E12, 9.30188679245283], [1.731671979E12, 9.134615384615385], [1.731671938E12, 9.264150943396228], [1.73167202E12, 9.8], [1.731671807E12, 9.259999999999998], [1.731671889E12, 9.679999999999994], [1.731671848E12, 9.56], [1.731671758E12, 9.0188679245283], [1.731671971E12, 9.226415094339625], [1.73167193E12, 8.634615384615385], [1.731672012E12, 9.654545454545456], [1.731671799E12, 9.410714285714281], [1.731671881E12, 8.75438596491228], [1.73167184E12, 8.909090909090907], [1.73167175E12, 9.339285714285712], [1.731671963E12, 9.166666666666668], [1.731671922E12, 9.0], [1.731672004E12, 8.961538461538462], [1.731671791E12, 10.056603773584905], [1.731671873E12, 9.079999999999998], [1.731671832E12, 9.235294117647058], [1.731671742E12, 9.68627450980392], [1.731671955E12, 9.843137254901961], [1.731671914E12, 9.580000000000004], [1.731671996E12, 8.615384615384613], [1.731671783E12, 9.226415094339622], [1.731671865E12, 9.298245614035087], [1.731672037E12, 9.47272727272727], [1.731671824E12, 9.163636363636368], [1.731671947E12, 9.160714285714285], [1.731671906E12, 9.23636363636364], [1.731671988E12, 9.01818181818182], [1.731671775E12, 9.592592592592593], [1.731671857E12, 9.326923076923073], [1.731672029E12, 9.509433962264152], [1.731671816E12, 9.056603773584904], [1.731671939E12, 9.14], [1.731671898E12, 9.28], [1.73167198E12, 9.745098039215689], [1.731671767E12, 9.803921568627455]], "isOverall": false, "label": "Products", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.731672038E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.731671737E12, "maxY": 1.3333333333333335, "series": [{"data": [[1.731671763E12, 0.09803921568627454], [1.731671935E12, 0.0], [1.731672017E12, 0.08000000000000002], [1.731671804E12, 0.10000000000000003], [1.731671976E12, 0.07692307692307693], [1.731671886E12, 0.11764705882352944], [1.731671845E12, 0.10000000000000003], [1.731671755E12, 0.09259259259259262], [1.731671927E12, 0.0576923076923077], [1.731672009E12, 0.0], [1.731671796E12, 0.10714285714285716], [1.731671968E12, 0.11111111111111113], [1.731671878E12, 0.07017543859649124], [1.731671837E12, 0.05263157894736842], [1.731671747E12, 0.09090909090909094], [1.731671919E12, 0.09090909090909094], [1.731672001E12, 0.09615384615384617], [1.731671788E12, 0.057692307692307716], [1.73167196E12, 0.09433962264150945], [1.73167187E12, 0.08000000000000002], [1.731671829E12, 0.08000000000000002], [1.731671739E12, 0.13461538461538464], [1.731671911E12, 0.02000000000000001], [1.731671993E12, 0.03703703703703704], [1.73167178E12, 0.11111111111111113], [1.731671952E12, 0.07692307692307694], [1.731671862E12, 0.07272727272727274], [1.731671821E12, 0.05454545454545455], [1.731672034E12, 0.0892857142857143], [1.731671903E12, 0.0], [1.731671985E12, 0.03703703703703704], [1.731671772E12, 0.09259259259259262], [1.731671944E12, 0.054545454545454536], [1.731671854E12, 0.07692307692307693], [1.731671813E12, 0.09803921568627454], [1.731672026E12, 0.09803921568627454], [1.731671895E12, 0.08000000000000002], [1.731671977E12, 0.1153846153846154], [1.731671764E12, 0.09615384615384617], [1.731671936E12, 0.05999999999999999], [1.731671846E12, 0.07142857142857144], [1.731671805E12, 0.09615384615384617], [1.731672018E12, 0.11320754716981134], [1.731671887E12, 0.0892857142857143], [1.731671969E12, 0.09090909090909093], [1.731671756E12, 0.0892857142857143], [1.731671928E12, 0.07142857142857144], [1.731671838E12, 0.0576923076923077], [1.731671797E12, 0.07407407407407406], [1.73167201E12, 0.07407407407407406], [1.731671879E12, 0.08000000000000002], [1.731671961E12, 0.040000000000000015], [1.731671748E12, 0.10000000000000003], [1.73167192E12, 0.08000000000000002], [1.73167183E12, 0.09433962264150945], [1.731671789E12, 0.11764705882352944], [1.731672002E12, 0.11764705882352944], [1.731671871E12, 0.09259259259259262], [1.731671953E12, 0.07142857142857144], [1.73167174E12, 0.10909090909090911], [1.731671912E12, 0.10526315789473686], [1.731671822E12, 0.01818181818181818], [1.731672035E12, 0.09259259259259262], [1.731671781E12, 0.03636363636363637], [1.731671994E12, 0.05357142857142858], [1.731671863E12, 0.055555555555555566], [1.731671945E12, 0.06000000000000001], [1.731671904E12, 0.05882352941176472], [1.731671814E12, 0.09803921568627452], [1.731672027E12, 0.10000000000000003], [1.731671773E12, 0.10000000000000003], [1.731671986E12, 0.08000000000000002], [1.731671855E12, 0.09433962264150945], [1.731671937E12, 0.08771929824561404], [1.731671896E12, 0.09090909090909093], [1.731671892E12, 0.10000000000000003], [1.731671761E12, 0.09433962264150945], [1.731671974E12, 0.0576923076923077], [1.731671933E12, 0.0392156862745098], [1.731671843E12, 0.05263157894736842], [1.731671802E12, 0.07272727272727274], [1.731672015E12, 0.09433962264150945], [1.731671884E12, 0.08771929824561404], [1.731671753E12, 0.09259259259259263], [1.731671966E12, 0.07272727272727272], [1.731671925E12, 0.07017543859649122], [1.731671835E12, 0.07843137254901962], [1.731671794E12, 0.09090909090909094], [1.731672007E12, 0.07547169811320754], [1.731671876E12, 0.05999999999999999], [1.731671745E12, 0.10000000000000003], [1.731671958E12, 0.10000000000000003], [1.731671917E12, 0.04], [1.731671827E12, 0.07407407407407408], [1.731671786E12, 0.11764705882352944], [1.731671999E12, 0.1153846153846154], [1.731671868E12, 0.07272727272727274], [1.731671737E12, 1.3333333333333335], [1.73167195E12, 0.06896551724137932], [1.731671909E12, 0.07017543859649124], [1.731671819E12, 0.07407407407407407], [1.731671778E12, 0.054545454545454536], [1.731671991E12, 0.07272727272727272], [1.73167186E12, 0.09433962264150945], [1.731672032E12, 0.09433962264150945], [1.731671942E12, 0.08000000000000002], [1.731671901E12, 0.040000000000000015], [1.731671811E12, 0.09615384615384617], [1.73167177E12, 0.10000000000000003], [1.731671983E12, 0.0], [1.731671852E12, 0.055555555555555546], [1.731672024E12, 0.0], [1.731671934E12, 0.03636363636363637], [1.731671893E12, 0.10714285714285716], [1.731671803E12, 0.09090909090909094], [1.731671762E12, 0.08928571428571427], [1.731671975E12, 0.03571428571428571], [1.731671844E12, 0.05660377358490567], [1.731672016E12, 0.03508771929824561], [1.731671926E12, 0.06000000000000001], [1.731671885E12, 0.09615384615384617], [1.731671795E12, 0.10000000000000003], [1.731671754E12, 0.09803921568627454], [1.731671967E12, 0.10000000000000003], [1.731671836E12, 0.09803921568627454], [1.731672008E12, 0.02000000000000001], [1.731671918E12, 0.10909090909090911], [1.731671877E12, 0.09433962264150945], [1.731671787E12, 0.08771929824561404], [1.731671746E12, 0.10909090909090911], [1.731671959E12, 0.10526315789473686], [1.731671828E12, 0.0892857142857143], [1.731672E12, 0.0892857142857143], [1.73167191E12, 0.038461538461538484], [1.731671869E12, 0.07272727272727272], [1.731671779E12, 0.10000000000000003], [1.731671738E12, 0.10344827586206899], [1.731671951E12, 0.039215686274509824], [1.731672033E12, 0.10000000000000003], [1.73167182E12, 0.12000000000000002], [1.731671992E12, 0.0], [1.731671902E12, 0.03773584905660378], [1.731671861E12, 0.09803921568627454], [1.731671771E12, 0.10714285714285716], [1.731671943E12, 0.10909090909090911], [1.731672025E12, 0.03508771929824561], [1.731671812E12, 0.07017543859649124], [1.731671984E12, 0.0892857142857143], [1.731671894E12, 0.09259259259259262], [1.731671853E12, 0.09259259259259262], [1.731671849E12, 0.03636363636363636], [1.731672021E12, 0.1153846153846154], [1.731671808E12, 0.1153846153846154], [1.731671931E12, 0.0], [1.73167189E12, 0.08771929824561404], [1.731671972E12, 0.09090909090909093], [1.731671759E12, 0.08771929824561404], [1.731671841E12, 0.07272727272727274], [1.731672013E12, 0.07272727272727272], [1.7316718E12, 0.09259259259259262], [1.731671923E12, 0.10000000000000003], [1.731671882E12, 0.06000000000000001], [1.731671964E12, 0.02], [1.731671751E12, 0.10000000000000003], [1.731671833E12, 0.1153846153846154], [1.731672005E12, 0.02000000000000001], [1.731671792E12, 0.08000000000000002], [1.731671915E12, 0.10714285714285716], [1.731671874E12, 0.11111111111111113], [1.731671956E12, 0.07017543859649124], [1.731671743E12, 0.10909090909090909], [1.731671825E12, 0.07272727272727272], [1.731672038E12, 0.0], [1.731671997E12, 0.08771929824561404], [1.731671784E12, 0.05263157894736842], [1.731671907E12, 0.09433962264150945], [1.731671866E12, 0.07547169811320754], [1.731671948E12, 0.040000000000000015], [1.731671817E12, 0.10000000000000003], [1.73167203E12, 0.0], [1.731671989E12, 0.040000000000000015], [1.731671776E12, 0.10000000000000003], [1.731671899E12, 0.09259259259259262], [1.731671858E12, 0.07692307692307694], [1.73167194E12, 0.10714285714285716], [1.731671809E12, 0.07017543859649124], [1.731672022E12, 0.07017543859649124], [1.731671981E12, 0.018181818181818184], [1.731671768E12, 0.07017543859649124], [1.731671891E12, 0.09433962264150945], [1.73167185E12, 0.0], [1.731671932E12, 0.01886792452830189], [1.731671801E12, 0.08000000000000002], [1.731672014E12, 0.10000000000000003], [1.731671973E12, 0.09615384615384617], [1.73167176E12, 0.10000000000000003], [1.731671883E12, 0.11764705882352944], [1.731671842E12, 0.08000000000000002], [1.731671924E12, 0.03773584905660379], [1.731671793E12, 0.10909090909090911], [1.731672006E12, 0.0], [1.731671965E12, 0.01818181818181818], [1.731671752E12, 0.10909090909090911], [1.731671875E12, 0.0892857142857143], [1.731671834E12, 0.08771929824561404], [1.731671916E12, 0.055555555555555566], [1.731671785E12, 0.10000000000000003], [1.731671998E12, 0.09803921568627454], [1.731671957E12, 0.07692307692307694], [1.731671744E12, 0.09259259259259262], [1.731671867E12, 0.04000000000000001], [1.731671826E12, 0.08000000000000002], [1.731671908E12, 0.09803921568627452], [1.731671777E12, 0.10909090909090911], [1.73167199E12, 0.10909090909090911], [1.731671949E12, 0.09803921568627452], [1.731671859E12, 0.05454545454545454], [1.731671818E12, 0.10714285714285716], [1.731672031E12, 0.07017543859649124], [1.7316719E12, 0.0], [1.731671769E12, 0.07692307692307693], [1.731671982E12, 0.018518518518518517], [1.731671941E12, 0.09259259259259262], [1.731671851E12, 0.10000000000000003], [1.73167181E12, 0.07843137254901962], [1.731672023E12, 0.019607843137254898], [1.731671806E12, 0.06896551724137932], [1.731672019E12, 0.07692307692307691], [1.731671765E12, 0.09090909090909093], [1.731671978E12, 0.07142857142857144], [1.731671847E12, 0.07407407407407406], [1.731671929E12, 0.0576923076923077], [1.731671888E12, 0.09433962264150945], [1.731671798E12, 0.10000000000000003], [1.731672011E12, 0.08000000000000002], [1.731671757E12, 0.10000000000000003], [1.73167197E12, 0.09803921568627454], [1.731671839E12, 0.10000000000000003], [1.731671921E12, 0.11111111111111113], [1.73167188E12, 0.037735849056603786], [1.73167179E12, 0.0892857142857143], [1.731672003E12, 0.05263157894736843], [1.731671749E12, 0.12962962962962968], [1.731671962E12, 0.07142857142857144], [1.731671831E12, 0.05357142857142856], [1.731671913E12, 0.09433962264150945], [1.731671872E12, 0.03571428571428571], [1.731671782E12, 0.07843137254901962], [1.731671995E12, 0.10000000000000003], [1.731671741E12, 0.09259259259259262], [1.731671954E12, 0.09615384615384617], [1.731672036E12, 0.10000000000000003], [1.731671823E12, 0.08000000000000002], [1.731671905E12, 0.1153846153846154], [1.731671864E12, 0.08000000000000002], [1.731671774E12, 0.0892857142857143], [1.731671987E12, 0.10909090909090911], [1.731671946E12, 0.11111111111111113], [1.731672028E12, 0.05263157894736843], [1.731671815E12, 0.0892857142857143], [1.731671897E12, 0.09090909090909094], [1.731671856E12, 0.07272727272727274], [1.731671766E12, 0.09433962264150945], [1.731671979E12, 0.0], [1.731671938E12, 0.05660377358490567], [1.73167202E12, 0.07272727272727272], [1.731671807E12, 0.10000000000000003], [1.731671889E12, 0.05999999999999999], [1.731671848E12, 0.10000000000000003], [1.731671758E12, 0.13207547169811323], [1.731671971E12, 0.11320754716981134], [1.73167193E12, 0.07692307692307696], [1.731672012E12, 0.10909090909090911], [1.731671799E12, 0.10714285714285719], [1.731671881E12, 0.08771929824561404], [1.73167184E12, 0.10909090909090911], [1.73167175E12, 0.07142857142857144], [1.731671963E12, 0.018518518518518517], [1.731671922E12, 0.0892857142857143], [1.731672004E12, 0.07692307692307693], [1.731671791E12, 0.09433962264150945], [1.731671873E12, 0.04000000000000002], [1.731671832E12, 0.05882352941176472], [1.731671742E12, 0.11764705882352944], [1.731671955E12, 0.09803921568627454], [1.731671914E12, 0.02], [1.731671996E12, 0.07692307692307693], [1.731671783E12, 0.11320754716981134], [1.731671865E12, 0.10526315789473686], [1.731672037E12, 0.10909090909090911], [1.731671824E12, 0.07272727272727274], [1.731671947E12, 0.0892857142857143], [1.731671906E12, 0.09090909090909093], [1.731671988E12, 0.09090909090909094], [1.731671775E12, 0.07407407407407407], [1.731671857E12, 0.01923076923076923], [1.731672029E12, 0.018867924528301896], [1.731671816E12, 0.09433962264150945], [1.731671939E12, 0.10000000000000003], [1.731671898E12, 0.10000000000000003], [1.73167198E12, 0.0392156862745098], [1.731671767E12, 0.11764705882352944]], "isOverall": false, "label": "Products", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.731672038E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 4.0, "minX": 1.731671737E12, "maxY": 148.0, "series": [{"data": [[1.731671763E12, 17.0], [1.731671935E12, 17.0], [1.731672017E12, 17.0], [1.731671804E12, 20.0], [1.731671976E12, 13.0], [1.731671886E12, 16.0], [1.731671845E12, 10.0], [1.731671755E12, 12.0], [1.731671927E12, 19.0], [1.731672009E12, 15.0], [1.731671796E12, 13.0], [1.731671968E12, 57.0], [1.731671878E12, 15.0], [1.731671837E12, 15.0], [1.731671747E12, 13.0], [1.731671919E12, 13.0], [1.731672001E12, 16.0], [1.731671788E12, 13.0], [1.73167196E12, 16.0], [1.73167187E12, 21.0], [1.731671829E12, 17.0], [1.731671739E12, 13.0], [1.731671911E12, 11.0], [1.731671993E12, 20.0], [1.73167178E12, 15.0], [1.731671952E12, 17.0], [1.731671862E12, 14.0], [1.731671821E12, 13.0], [1.731672034E12, 17.0], [1.731671903E12, 15.0], [1.731671985E12, 13.0], [1.731671772E12, 17.0], [1.731671944E12, 17.0], [1.731671854E12, 13.0], [1.731671813E12, 15.0], [1.731672026E12, 13.0], [1.731671895E12, 16.0], [1.731671977E12, 12.0], [1.731671764E12, 18.0], [1.731671936E12, 19.0], [1.731671846E12, 17.0], [1.731671805E12, 14.0], [1.731672018E12, 19.0], [1.731671887E12, 22.0], [1.731671969E12, 15.0], [1.731671756E12, 17.0], [1.731671928E12, 14.0], [1.731671838E12, 16.0], [1.731671797E12, 15.0], [1.73167201E12, 15.0], [1.731671879E12, 12.0], [1.731671961E12, 17.0], [1.731671748E12, 19.0], [1.73167192E12, 18.0], [1.73167183E12, 16.0], [1.731671789E12, 16.0], [1.731672002E12, 19.0], [1.731671871E12, 12.0], [1.731671953E12, 14.0], [1.73167174E12, 15.0], [1.731671912E12, 16.0], [1.731671822E12, 15.0], [1.731672035E12, 13.0], [1.731671781E12, 15.0], [1.731671994E12, 12.0], [1.731671863E12, 14.0], [1.731671945E12, 17.0], [1.731671904E12, 16.0], [1.731671814E12, 20.0], [1.731672027E12, 16.0], [1.731671773E12, 17.0], [1.731671986E12, 17.0], [1.731671855E12, 16.0], [1.731671937E12, 13.0], [1.731671896E12, 16.0], [1.731671892E12, 12.0], [1.731671761E12, 16.0], [1.731671974E12, 21.0], [1.731671933E12, 17.0], [1.731671843E12, 13.0], [1.731671802E12, 11.0], [1.731672015E12, 17.0], [1.731671884E12, 17.0], [1.731671753E12, 15.0], [1.731671966E12, 13.0], [1.731671925E12, 16.0], [1.731671835E12, 14.0], [1.731671794E12, 15.0], [1.731672007E12, 13.0], [1.731671876E12, 18.0], [1.731671745E12, 17.0], [1.731671958E12, 14.0], [1.731671917E12, 19.0], [1.731671827E12, 17.0], [1.731671786E12, 23.0], [1.731671999E12, 16.0], [1.731671868E12, 12.0], [1.731671737E12, 148.0], [1.73167195E12, 16.0], [1.731671909E12, 13.0], [1.731671819E12, 16.0], [1.731671778E12, 15.0], [1.731671991E12, 15.0], [1.73167186E12, 13.0], [1.731672032E12, 14.0], [1.731671942E12, 16.0], [1.731671901E12, 14.0], [1.731671811E12, 17.0], [1.73167177E12, 11.0], [1.731671983E12, 22.0], [1.731671852E12, 12.0], [1.731672024E12, 15.0], [1.731671934E12, 13.0], [1.731671893E12, 16.0], [1.731671803E12, 16.0], [1.731671762E12, 13.0], [1.731671975E12, 12.0], [1.731671844E12, 13.0], [1.731672016E12, 12.0], [1.731671926E12, 12.0], [1.731671885E12, 16.0], [1.731671795E12, 24.0], [1.731671754E12, 17.0], [1.731671967E12, 14.0], [1.731671836E12, 17.0], [1.731672008E12, 16.0], [1.731671918E12, 12.0], [1.731671877E12, 16.0], [1.731671787E12, 12.0], [1.731671746E12, 18.0], [1.731671959E12, 15.0], [1.731671828E12, 15.0], [1.731672E12, 14.0], [1.73167191E12, 15.0], [1.731671869E12, 16.0], [1.731671779E12, 13.0], [1.731671738E12, 23.0], [1.731671951E12, 17.0], [1.731672033E12, 12.0], [1.73167182E12, 15.0], [1.731671992E12, 12.0], [1.731671902E12, 16.0], [1.731671861E12, 19.0], [1.731671771E12, 16.0], [1.731671943E12, 17.0], [1.731672025E12, 18.0], [1.731671812E12, 16.0], [1.731671984E12, 12.0], [1.731671894E12, 12.0], [1.731671853E12, 28.0], [1.731671849E12, 16.0], [1.731672021E12, 19.0], [1.731671808E12, 19.0], [1.731671931E12, 18.0], [1.73167189E12, 12.0], [1.731671972E12, 15.0], [1.731671759E12, 13.0], [1.731671841E12, 17.0], [1.731672013E12, 13.0], [1.7316718E12, 14.0], [1.731671923E12, 16.0], [1.731671882E12, 12.0], [1.731671964E12, 19.0], [1.731671751E12, 11.0], [1.731671833E12, 20.0], [1.731672005E12, 13.0], [1.731671792E12, 16.0], [1.731671915E12, 11.0], [1.731671874E12, 16.0], [1.731671956E12, 14.0], [1.731671743E12, 13.0], [1.731671825E12, 14.0], [1.731672038E12, 10.0], [1.731671997E12, 16.0], [1.731671784E12, 15.0], [1.731671907E12, 15.0], [1.731671866E12, 15.0], [1.731671948E12, 13.0], [1.731671817E12, 11.0], [1.73167203E12, 19.0], [1.731671989E12, 15.0], [1.731671776E12, 21.0], [1.731671899E12, 21.0], [1.731671858E12, 17.0], [1.73167194E12, 18.0], [1.731671809E12, 13.0], [1.731672022E12, 17.0], [1.731671981E12, 12.0], [1.731671768E12, 13.0], [1.731671891E12, 12.0], [1.73167185E12, 17.0], [1.731671932E12, 15.0], [1.731671801E12, 16.0], [1.731672014E12, 13.0], [1.731671973E12, 12.0], [1.73167176E12, 14.0], [1.731671883E12, 10.0], [1.731671842E12, 19.0], [1.731671924E12, 16.0], [1.731671793E12, 15.0], [1.731672006E12, 16.0], [1.731671965E12, 20.0], [1.731671752E12, 17.0], [1.731671875E12, 14.0], [1.731671834E12, 14.0], [1.731671916E12, 15.0], [1.731671785E12, 20.0], [1.731671998E12, 16.0], [1.731671957E12, 14.0], [1.731671744E12, 16.0], [1.731671867E12, 23.0], [1.731671826E12, 12.0], [1.731671908E12, 20.0], [1.731671777E12, 13.0], [1.73167199E12, 16.0], [1.731671949E12, 14.0], [1.731671859E12, 17.0], [1.731671818E12, 16.0], [1.731672031E12, 12.0], [1.7316719E12, 13.0], [1.731671769E12, 14.0], [1.731671982E12, 15.0], [1.731671941E12, 17.0], [1.731671851E12, 19.0], [1.73167181E12, 17.0], [1.731672023E12, 13.0], [1.731671806E12, 12.0], [1.731672019E12, 17.0], [1.731671765E12, 17.0], [1.731671978E12, 16.0], [1.731671847E12, 12.0], [1.731671929E12, 12.0], [1.731671888E12, 15.0], [1.731671798E12, 10.0], [1.731672011E12, 14.0], [1.731671757E12, 19.0], [1.73167197E12, 17.0], [1.731671839E12, 17.0], [1.731671921E12, 20.0], [1.73167188E12, 20.0], [1.73167179E12, 14.0], [1.731672003E12, 14.0], [1.731671749E12, 15.0], [1.731671962E12, 16.0], [1.731671831E12, 16.0], [1.731671913E12, 15.0], [1.731671872E12, 14.0], [1.731671782E12, 18.0], [1.731671995E12, 12.0], [1.731671741E12, 13.0], [1.731671954E12, 17.0], [1.731672036E12, 16.0], [1.731671823E12, 19.0], [1.731671905E12, 16.0], [1.731671864E12, 11.0], [1.731671774E12, 13.0], [1.731671987E12, 15.0], [1.731671946E12, 19.0], [1.731672028E12, 63.0], [1.731671815E12, 14.0], [1.731671897E12, 16.0], [1.731671856E12, 13.0], [1.731671766E12, 13.0], [1.731671979E12, 12.0], [1.731671938E12, 14.0], [1.73167202E12, 15.0], [1.731671807E12, 15.0], [1.731671889E12, 20.0], [1.731671848E12, 18.0], [1.731671758E12, 14.0], [1.731671971E12, 16.0], [1.73167193E12, 11.0], [1.731672012E12, 20.0], [1.731671799E12, 16.0], [1.731671881E12, 12.0], [1.73167184E12, 14.0], [1.73167175E12, 13.0], [1.731671963E12, 15.0], [1.731671922E12, 14.0], [1.731672004E12, 14.0], [1.731671791E12, 18.0], [1.731671873E12, 15.0], [1.731671832E12, 13.0], [1.731671742E12, 17.0], [1.731671955E12, 20.0], [1.731671914E12, 16.0], [1.731671996E12, 10.0], [1.731671783E12, 16.0], [1.731671865E12, 16.0], [1.731672037E12, 17.0], [1.731671824E12, 13.0], [1.731671947E12, 14.0], [1.731671906E12, 15.0], [1.731671988E12, 12.0], [1.731671775E12, 16.0], [1.731671857E12, 17.0], [1.731672029E12, 17.0], [1.731671816E12, 13.0], [1.731671939E12, 12.0], [1.731671898E12, 14.0], [1.73167198E12, 16.0], [1.731671767E12, 19.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.731671763E12, 12.0], [1.731671935E12, 12.0], [1.731672017E12, 12.0], [1.731671804E12, 13.799999999999997], [1.731671976E12, 11.0], [1.731671886E12, 11.600000000000009], [1.731671845E12, 10.0], [1.731671755E12, 10.5], [1.731671927E12, 12.700000000000003], [1.731672009E12, 10.0], [1.731671796E12, 11.0], [1.731671968E12, 12.5], [1.731671878E12, 12.0], [1.731671837E12, 11.0], [1.731671747E12, 11.399999999999999], [1.731671919E12, 12.0], [1.731672001E12, 13.400000000000006], [1.731671788E12, 11.700000000000003], [1.73167196E12, 12.0], [1.73167187E12, 13.0], [1.731671829E12, 12.899999999999999], [1.731671739E12, 11.0], [1.731671911E12, 10.0], [1.731671993E12, 13.0], [1.73167178E12, 11.5], [1.731671952E12, 12.0], [1.731671862E12, 12.0], [1.731671821E12, 11.399999999999999], [1.731672034E12, 11.0], [1.731671903E12, 11.300000000000004], [1.731671985E12, 11.5], [1.731671772E12, 13.0], [1.731671944E12, 13.0], [1.731671854E12, 10.700000000000003], [1.731671813E12, 11.0], [1.731672026E12, 12.0], [1.731671895E12, 13.799999999999997], [1.731671977E12, 10.0], [1.731671764E12, 11.0], [1.731671936E12, 12.0], [1.731671846E12, 11.300000000000004], [1.731671805E12, 11.0], [1.731672018E12, 12.200000000000003], [1.731671887E12, 11.300000000000004], [1.731671969E12, 12.399999999999999], [1.731671756E12, 12.0], [1.731671928E12, 11.300000000000004], [1.731671838E12, 12.700000000000003], [1.731671797E12, 12.0], [1.73167201E12, 12.0], [1.731671879E12, 12.0], [1.731671961E12, 10.899999999999999], [1.731671748E12, 13.0], [1.73167192E12, 10.899999999999999], [1.73167183E12, 11.0], [1.731671789E12, 12.0], [1.731672002E12, 13.800000000000004], [1.731671871E12, 11.0], [1.731671953E12, 10.600000000000009], [1.73167174E12, 12.0], [1.731671912E12, 11.200000000000003], [1.731671822E12, 13.399999999999999], [1.731672035E12, 12.0], [1.731671781E12, 13.0], [1.731671994E12, 11.300000000000004], [1.731671863E12, 10.5], [1.731671945E12, 12.0], [1.731671904E12, 12.800000000000004], [1.731671814E12, 14.0], [1.731672027E12, 14.899999999999999], [1.731671773E12, 11.899999999999999], [1.731671986E12, 13.0], [1.731671855E12, 11.600000000000001], [1.731671937E12, 11.200000000000003], [1.731671896E12, 10.399999999999999], [1.731671892E12, 10.0], [1.731671761E12, 11.600000000000001], [1.731671974E12, 12.0], [1.731671933E12, 11.600000000000009], [1.731671843E12, 11.0], [1.731671802E12, 10.0], [1.731672015E12, 11.600000000000001], [1.731671884E12, 12.0], [1.731671753E12, 12.0], [1.731671966E12, 12.0], [1.731671925E12, 12.0], [1.731671835E12, 11.800000000000004], [1.731671794E12, 11.399999999999999], [1.731672007E12, 12.0], [1.731671876E12, 12.0], [1.731671745E12, 11.899999999999999], [1.731671958E12, 11.0], [1.731671917E12, 13.899999999999999], [1.731671827E12, 11.0], [1.731671786E12, 11.0], [1.731671999E12, 11.700000000000003], [1.731671868E12, 10.0], [1.731671737E12, 65.00000000000004], [1.73167195E12, 10.200000000000003], [1.731671909E12, 11.0], [1.731671819E12, 12.5], [1.731671778E12, 12.0], [1.731671991E12, 12.399999999999999], [1.73167186E12, 11.0], [1.731672032E12, 12.0], [1.731671942E12, 11.899999999999999], [1.731671901E12, 12.0], [1.731671811E12, 13.0], [1.73167177E12, 9.899999999999999], [1.731671983E12, 13.799999999999997], [1.731671852E12, 10.0], [1.731672024E12, 12.0], [1.731671934E12, 11.0], [1.731671893E12, 11.300000000000004], [1.731671803E12, 13.0], [1.731671762E12, 12.0], [1.731671975E12, 12.0], [1.731671844E12, 12.0], [1.731672016E12, 10.0], [1.731671926E12, 10.899999999999999], [1.731671885E12, 12.0], [1.731671795E12, 13.799999999999997], [1.731671754E12, 12.0], [1.731671967E12, 11.0], [1.731671836E12, 11.800000000000004], [1.731672008E12, 13.899999999999999], [1.731671918E12, 10.0], [1.731671877E12, 10.0], [1.731671787E12, 12.0], [1.731671746E12, 13.0], [1.731671959E12, 11.400000000000006], [1.731671828E12, 12.0], [1.731672E12, 11.0], [1.73167191E12, 12.0], [1.731671869E12, 12.0], [1.731671779E12, 11.0], [1.731671738E12, 13.70000000000001], [1.731671951E12, 13.800000000000004], [1.731672033E12, 11.0], [1.73167182E12, 11.899999999999999], [1.731671992E12, 10.899999999999999], [1.731671902E12, 12.0], [1.731671861E12, 13.0], [1.731671771E12, 12.300000000000004], [1.731671943E12, 10.399999999999999], [1.731672025E12, 11.200000000000003], [1.731671812E12, 12.0], [1.731671984E12, 10.300000000000004], [1.731671894E12, 12.0], [1.731671853E12, 11.5], [1.731671849E12, 10.0], [1.731672021E12, 14.100000000000009], [1.731671808E12, 13.0], [1.731671931E12, 12.399999999999999], [1.73167189E12, 10.0], [1.731671972E12, 11.0], [1.731671759E12, 12.0], [1.731671841E12, 12.0], [1.731672013E12, 11.399999999999999], [1.7316718E12, 12.0], [1.731671923E12, 12.0], [1.731671882E12, 10.899999999999999], [1.731671964E12, 12.0], [1.731671751E12, 10.0], [1.731671833E12, 12.700000000000003], [1.731672005E12, 10.0], [1.731671792E12, 12.0], [1.731671915E12, 10.0], [1.731671874E12, 11.5], [1.731671956E12, 10.0], [1.731671743E12, 12.0], [1.731671825E12, 11.0], [1.731672038E12, 9.4], [1.731671997E12, 12.200000000000003], [1.731671784E12, 12.0], [1.731671907E12, 11.600000000000001], [1.731671866E12, 12.0], [1.731671948E12, 11.0], [1.731671817E12, 9.899999999999999], [1.73167203E12, 13.899999999999999], [1.731671989E12, 12.0], [1.731671776E12, 13.0], [1.731671899E12, 12.5], [1.731671858E12, 11.700000000000003], [1.73167194E12, 11.300000000000004], [1.731671809E12, 12.0], [1.731672022E12, 11.0], [1.731671981E12, 10.0], [1.731671768E12, 11.200000000000003], [1.731671891E12, 11.600000000000001], [1.73167185E12, 12.0], [1.731671932E12, 13.0], [1.731671801E12, 15.0], [1.731672014E12, 10.899999999999999], [1.731671973E12, 11.0], [1.73167176E12, 11.0], [1.731671883E12, 10.0], [1.731671842E12, 12.0], [1.731671924E12, 11.600000000000001], [1.731671793E12, 12.0], [1.731672006E12, 11.200000000000003], [1.731671965E12, 10.0], [1.731671752E12, 11.399999999999999], [1.731671875E12, 12.0], [1.731671834E12, 11.0], [1.731671916E12, 11.5], [1.731671785E12, 12.0], [1.731671998E12, 12.0], [1.731671957E12, 12.0], [1.731671744E12, 12.0], [1.731671867E12, 15.699999999999996], [1.731671826E12, 10.899999999999999], [1.731671908E12, 14.800000000000004], [1.731671777E12, 11.0], [1.73167199E12, 11.399999999999999], [1.731671949E12, 10.800000000000004], [1.731671859E12, 11.0], [1.731671818E12, 12.0], [1.731672031E12, 10.0], [1.7316719E12, 12.0], [1.731671769E12, 11.0], [1.731671982E12, 12.0], [1.731671941E12, 13.0], [1.731671851E12, 12.0], [1.73167181E12, 14.400000000000013], [1.731672023E12, 12.0], [1.731671806E12, 12.0], [1.731672019E12, 11.700000000000003], [1.731671765E12, 12.0], [1.731671978E12, 12.0], [1.731671847E12, 12.0], [1.731671929E12, 11.0], [1.731671888E12, 12.0], [1.731671798E12, 10.0], [1.731672011E12, 12.0], [1.731671757E12, 12.0], [1.73167197E12, 13.0], [1.731671839E12, 11.799999999999997], [1.731671921E12, 12.0], [1.73167188E12, 12.0], [1.73167179E12, 11.300000000000004], [1.731672003E12, 11.0], [1.731671749E12, 13.0], [1.731671962E12, 11.0], [1.731671831E12, 13.0], [1.731671913E12, 12.0], [1.731671872E12, 12.0], [1.731671782E12, 11.800000000000004], [1.731671995E12, 10.0], [1.731671741E12, 11.5], [1.731671954E12, 12.0], [1.731672036E12, 12.0], [1.731671823E12, 13.899999999999999], [1.731671905E12, 11.700000000000003], [1.731671864E12, 10.0], [1.731671774E12, 10.300000000000004], [1.731671987E12, 11.399999999999999], [1.731671946E12, 12.0], [1.731672028E12, 10.0], [1.731671815E12, 12.0], [1.731671897E12, 12.399999999999999], [1.731671856E12, 12.0], [1.731671766E12, 12.0], [1.731671979E12, 11.0], [1.731671938E12, 12.0], [1.73167202E12, 13.0], [1.731671807E12, 11.0], [1.731671889E12, 13.799999999999997], [1.731671848E12, 14.699999999999996], [1.731671758E12, 11.0], [1.731671971E12, 11.600000000000001], [1.73167193E12, 10.0], [1.731672012E12, 12.0], [1.731671799E12, 12.0], [1.731671881E12, 11.0], [1.73167184E12, 10.0], [1.73167175E12, 11.0], [1.731671963E12, 12.0], [1.731671922E12, 12.0], [1.731672004E12, 11.700000000000003], [1.731671791E12, 12.600000000000001], [1.731671873E12, 10.899999999999999], [1.731671832E12, 12.0], [1.731671742E12, 12.0], [1.731671955E12, 12.0], [1.731671914E12, 15.0], [1.731671996E12, 10.0], [1.731671783E12, 11.0], [1.731671865E12, 12.0], [1.731672037E12, 12.399999999999999], [1.731671824E12, 11.0], [1.731671947E12, 12.0], [1.731671906E12, 12.0], [1.731671988E12, 11.399999999999999], [1.731671775E12, 13.0], [1.731671857E12, 12.0], [1.731672029E12, 12.600000000000001], [1.731671816E12, 11.0], [1.731671939E12, 11.0], [1.731671898E12, 12.0], [1.73167198E12, 15.0], [1.731671767E12, 12.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.731671763E12, 17.0], [1.731671935E12, 17.0], [1.731672017E12, 17.0], [1.731671804E12, 20.0], [1.731671976E12, 13.0], [1.731671886E12, 16.0], [1.731671845E12, 10.0], [1.731671755E12, 12.0], [1.731671927E12, 19.0], [1.731672009E12, 15.0], [1.731671796E12, 13.0], [1.731671968E12, 57.0], [1.731671878E12, 15.0], [1.731671837E12, 15.0], [1.731671747E12, 13.0], [1.731671919E12, 13.0], [1.731672001E12, 16.0], [1.731671788E12, 13.0], [1.73167196E12, 16.0], [1.73167187E12, 21.0], [1.731671829E12, 17.0], [1.731671739E12, 13.0], [1.731671911E12, 11.0], [1.731671993E12, 20.0], [1.73167178E12, 15.0], [1.731671952E12, 17.0], [1.731671862E12, 14.0], [1.731671821E12, 13.0], [1.731672034E12, 17.0], [1.731671903E12, 15.0], [1.731671985E12, 13.0], [1.731671772E12, 17.0], [1.731671944E12, 17.0], [1.731671854E12, 13.0], [1.731671813E12, 15.0], [1.731672026E12, 13.0], [1.731671895E12, 16.0], [1.731671977E12, 12.0], [1.731671764E12, 18.0], [1.731671936E12, 19.0], [1.731671846E12, 17.0], [1.731671805E12, 14.0], [1.731672018E12, 19.0], [1.731671887E12, 22.0], [1.731671969E12, 15.0], [1.731671756E12, 17.0], [1.731671928E12, 14.0], [1.731671838E12, 16.0], [1.731671797E12, 15.0], [1.73167201E12, 15.0], [1.731671879E12, 12.0], [1.731671961E12, 17.0], [1.731671748E12, 19.0], [1.73167192E12, 18.0], [1.73167183E12, 16.0], [1.731671789E12, 16.0], [1.731672002E12, 19.0], [1.731671871E12, 12.0], [1.731671953E12, 14.0], [1.73167174E12, 15.0], [1.731671912E12, 16.0], [1.731671822E12, 15.0], [1.731672035E12, 13.0], [1.731671781E12, 15.0], [1.731671994E12, 12.0], [1.731671863E12, 14.0], [1.731671945E12, 17.0], [1.731671904E12, 16.0], [1.731671814E12, 20.0], [1.731672027E12, 16.0], [1.731671773E12, 17.0], [1.731671986E12, 17.0], [1.731671855E12, 16.0], [1.731671937E12, 13.0], [1.731671896E12, 16.0], [1.731671892E12, 12.0], [1.731671761E12, 16.0], [1.731671974E12, 21.0], [1.731671933E12, 17.0], [1.731671843E12, 13.0], [1.731671802E12, 11.0], [1.731672015E12, 17.0], [1.731671884E12, 17.0], [1.731671753E12, 15.0], [1.731671966E12, 13.0], [1.731671925E12, 16.0], [1.731671835E12, 14.0], [1.731671794E12, 15.0], [1.731672007E12, 13.0], [1.731671876E12, 18.0], [1.731671745E12, 17.0], [1.731671958E12, 14.0], [1.731671917E12, 19.0], [1.731671827E12, 17.0], [1.731671786E12, 23.0], [1.731671999E12, 16.0], [1.731671868E12, 12.0], [1.731671737E12, 148.0], [1.73167195E12, 16.0], [1.731671909E12, 13.0], [1.731671819E12, 16.0], [1.731671778E12, 15.0], [1.731671991E12, 15.0], [1.73167186E12, 13.0], [1.731672032E12, 14.0], [1.731671942E12, 16.0], [1.731671901E12, 14.0], [1.731671811E12, 17.0], [1.73167177E12, 11.0], [1.731671983E12, 22.0], [1.731671852E12, 12.0], [1.731672024E12, 15.0], [1.731671934E12, 13.0], [1.731671893E12, 16.0], [1.731671803E12, 16.0], [1.731671762E12, 13.0], [1.731671975E12, 12.0], [1.731671844E12, 13.0], [1.731672016E12, 12.0], [1.731671926E12, 12.0], [1.731671885E12, 16.0], [1.731671795E12, 24.0], [1.731671754E12, 17.0], [1.731671967E12, 14.0], [1.731671836E12, 17.0], [1.731672008E12, 16.0], [1.731671918E12, 12.0], [1.731671877E12, 16.0], [1.731671787E12, 12.0], [1.731671746E12, 18.0], [1.731671959E12, 15.0], [1.731671828E12, 15.0], [1.731672E12, 14.0], [1.73167191E12, 15.0], [1.731671869E12, 16.0], [1.731671779E12, 13.0], [1.731671738E12, 23.0], [1.731671951E12, 17.0], [1.731672033E12, 12.0], [1.73167182E12, 15.0], [1.731671992E12, 12.0], [1.731671902E12, 16.0], [1.731671861E12, 19.0], [1.731671771E12, 16.0], [1.731671943E12, 17.0], [1.731672025E12, 18.0], [1.731671812E12, 16.0], [1.731671984E12, 12.0], [1.731671894E12, 12.0], [1.731671853E12, 28.0], [1.731671849E12, 16.0], [1.731672021E12, 19.0], [1.731671808E12, 19.0], [1.731671931E12, 18.0], [1.73167189E12, 12.0], [1.731671972E12, 15.0], [1.731671759E12, 13.0], [1.731671841E12, 17.0], [1.731672013E12, 13.0], [1.7316718E12, 14.0], [1.731671923E12, 16.0], [1.731671882E12, 12.0], [1.731671964E12, 19.0], [1.731671751E12, 11.0], [1.731671833E12, 20.0], [1.731672005E12, 13.0], [1.731671792E12, 16.0], [1.731671915E12, 11.0], [1.731671874E12, 16.0], [1.731671956E12, 14.0], [1.731671743E12, 13.0], [1.731671825E12, 14.0], [1.731672038E12, 10.0], [1.731671997E12, 16.0], [1.731671784E12, 15.0], [1.731671907E12, 15.0], [1.731671866E12, 15.0], [1.731671948E12, 13.0], [1.731671817E12, 11.0], [1.73167203E12, 19.0], [1.731671989E12, 15.0], [1.731671776E12, 21.0], [1.731671899E12, 21.0], [1.731671858E12, 17.0], [1.73167194E12, 18.0], [1.731671809E12, 13.0], [1.731672022E12, 17.0], [1.731671981E12, 12.0], [1.731671768E12, 13.0], [1.731671891E12, 12.0], [1.73167185E12, 17.0], [1.731671932E12, 15.0], [1.731671801E12, 16.0], [1.731672014E12, 13.0], [1.731671973E12, 12.0], [1.73167176E12, 14.0], [1.731671883E12, 10.0], [1.731671842E12, 19.0], [1.731671924E12, 16.0], [1.731671793E12, 15.0], [1.731672006E12, 16.0], [1.731671965E12, 20.0], [1.731671752E12, 17.0], [1.731671875E12, 14.0], [1.731671834E12, 14.0], [1.731671916E12, 15.0], [1.731671785E12, 20.0], [1.731671998E12, 16.0], [1.731671957E12, 14.0], [1.731671744E12, 16.0], [1.731671867E12, 23.0], [1.731671826E12, 12.0], [1.731671908E12, 20.0], [1.731671777E12, 13.0], [1.73167199E12, 16.0], [1.731671949E12, 14.0], [1.731671859E12, 17.0], [1.731671818E12, 16.0], [1.731672031E12, 12.0], [1.7316719E12, 13.0], [1.731671769E12, 14.0], [1.731671982E12, 15.0], [1.731671941E12, 17.0], [1.731671851E12, 19.0], [1.73167181E12, 17.0], [1.731672023E12, 13.0], [1.731671806E12, 12.0], [1.731672019E12, 17.0], [1.731671765E12, 17.0], [1.731671978E12, 16.0], [1.731671847E12, 12.0], [1.731671929E12, 12.0], [1.731671888E12, 15.0], [1.731671798E12, 10.0], [1.731672011E12, 14.0], [1.731671757E12, 19.0], [1.73167197E12, 17.0], [1.731671839E12, 17.0], [1.731671921E12, 20.0], [1.73167188E12, 20.0], [1.73167179E12, 14.0], [1.731672003E12, 14.0], [1.731671749E12, 15.0], [1.731671962E12, 16.0], [1.731671831E12, 16.0], [1.731671913E12, 15.0], [1.731671872E12, 14.0], [1.731671782E12, 18.0], [1.731671995E12, 12.0], [1.731671741E12, 13.0], [1.731671954E12, 17.0], [1.731672036E12, 16.0], [1.731671823E12, 19.0], [1.731671905E12, 16.0], [1.731671864E12, 11.0], [1.731671774E12, 13.0], [1.731671987E12, 15.0], [1.731671946E12, 19.0], [1.731672028E12, 63.0], [1.731671815E12, 14.0], [1.731671897E12, 16.0], [1.731671856E12, 13.0], [1.731671766E12, 13.0], [1.731671979E12, 12.0], [1.731671938E12, 14.0], [1.73167202E12, 15.0], [1.731671807E12, 15.0], [1.731671889E12, 20.0], [1.731671848E12, 18.0], [1.731671758E12, 14.0], [1.731671971E12, 16.0], [1.73167193E12, 11.0], [1.731672012E12, 20.0], [1.731671799E12, 16.0], [1.731671881E12, 12.0], [1.73167184E12, 14.0], [1.73167175E12, 13.0], [1.731671963E12, 15.0], [1.731671922E12, 14.0], [1.731672004E12, 14.0], [1.731671791E12, 18.0], [1.731671873E12, 15.0], [1.731671832E12, 13.0], [1.731671742E12, 17.0], [1.731671955E12, 20.0], [1.731671914E12, 16.0], [1.731671996E12, 10.0], [1.731671783E12, 16.0], [1.731671865E12, 16.0], [1.731672037E12, 17.0], [1.731671824E12, 13.0], [1.731671947E12, 14.0], [1.731671906E12, 15.0], [1.731671988E12, 12.0], [1.731671775E12, 16.0], [1.731671857E12, 17.0], [1.731672029E12, 17.0], [1.731671816E12, 13.0], [1.731671939E12, 12.0], [1.731671898E12, 14.0], [1.73167198E12, 16.0], [1.731671767E12, 19.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.731671763E12, 15.399999999999999], [1.731671935E12, 15.0], [1.731672017E12, 16.449999999999996], [1.731671804E12, 19.0], [1.731671976E12, 12.0], [1.731671886E12, 15.0], [1.731671845E12, 10.0], [1.731671755E12, 11.25], [1.731671927E12, 18.349999999999994], [1.731672009E12, 15.0], [1.731671796E12, 12.0], [1.731671968E12, 15.25], [1.731671878E12, 15.0], [1.731671837E12, 13.0], [1.731671747E12, 12.199999999999996], [1.731671919E12, 12.0], [1.731672001E12, 15.0], [1.731671788E12, 12.349999999999994], [1.73167196E12, 14.0], [1.73167187E12, 20.0], [1.731671829E12, 16.0], [1.731671739E12, 12.0], [1.731671911E12, 10.0], [1.731671993E12, 19.0], [1.73167178E12, 15.0], [1.731671952E12, 15.0], [1.731671862E12, 12.0], [1.731671821E12, 12.0], [1.731672034E12, 15.149999999999999], [1.731671903E12, 12.299999999999997], [1.731671985E12, 12.0], [1.731671772E12, 15.25], [1.731671944E12, 15.199999999999996], [1.731671854E12, 12.0], [1.731671813E12, 12.799999999999997], [1.731672026E12, 12.399999999999999], [1.731671895E12, 15.449999999999996], [1.731671977E12, 11.0], [1.731671764E12, 15.349999999999994], [1.731671936E12, 19.0], [1.731671846E12, 15.149999999999999], [1.731671805E12, 12.349999999999994], [1.731672018E12, 15.299999999999997], [1.731671887E12, 12.0], [1.731671969E12, 13.199999999999996], [1.731671756E12, 15.149999999999999], [1.731671928E12, 12.149999999999999], [1.731671838E12, 15.0], [1.731671797E12, 13.0], [1.73167201E12, 14.25], [1.731671879E12, 12.0], [1.731671961E12, 15.449999999999996], [1.731671748E12, 19.0], [1.73167192E12, 11.449999999999996], [1.73167183E12, 15.0], [1.731671789E12, 15.399999999999999], [1.731672002E12, 18.4], [1.731671871E12, 12.0], [1.731671953E12, 13.0], [1.73167174E12, 13.0], [1.731671912E12, 15.0], [1.731671822E12, 15.0], [1.731672035E12, 12.25], [1.731671781E12, 13.199999999999996], [1.731671994E12, 12.0], [1.731671863E12, 13.0], [1.731671945E12, 13.0], [1.731671904E12, 16.0], [1.731671814E12, 19.0], [1.731672027E12, 15.449999999999996], [1.731671773E12, 16.449999999999996], [1.731671986E12, 15.449999999999996], [1.731671855E12, 15.0], [1.731671937E12, 12.099999999999994], [1.731671896E12, 15.199999999999996], [1.731671892E12, 11.449999999999996], [1.731671761E12, 15.0], [1.731671974E12, 19.349999999999994], [1.731671933E12, 15.0], [1.731671843E12, 12.0], [1.731671802E12, 10.199999999999996], [1.731672015E12, 16.0], [1.731671884E12, 15.0], [1.731671753E12, 13.5], [1.731671966E12, 12.0], [1.731671925E12, 15.099999999999994], [1.731671835E12, 12.0], [1.731671794E12, 12.199999999999996], [1.731672007E12, 12.0], [1.731671876E12, 15.449999999999996], [1.731671745E12, 16.0], [1.731671958E12, 11.449999999999996], [1.731671917E12, 19.0], [1.731671827E12, 15.0], [1.731671786E12, 19.799999999999997], [1.731671999E12, 15.349999999999994], [1.731671868E12, 11.199999999999996], [1.731671737E12, 140.7999999999999], [1.73167195E12, 16.0], [1.731671909E12, 12.0], [1.731671819E12, 15.0], [1.731671778E12, 12.199999999999996], [1.731671991E12, 15.0], [1.73167186E12, 12.0], [1.731672032E12, 12.299999999999997], [1.731671942E12, 15.449999999999996], [1.731671901E12, 13.0], [1.731671811E12, 16.0], [1.73167177E12, 10.449999999999996], [1.731671983E12, 20.0], [1.731671852E12, 10.5], [1.731672024E12, 13.349999999999994], [1.731671934E12, 12.0], [1.731671893E12, 15.149999999999999], [1.731671803E12, 15.0], [1.731671762E12, 12.0], [1.731671975E12, 12.0], [1.731671844E12, 12.0], [1.731672016E12, 12.0], [1.731671926E12, 12.0], [1.731671885E12, 15.0], [1.731671795E12, 21.0], [1.731671754E12, 15.0], [1.731671967E12, 12.0], [1.731671836E12, 14.399999999999999], [1.731672008E12, 15.449999999999996], [1.731671918E12, 11.199999999999996], [1.731671877E12, 16.0], [1.731671787E12, 12.0], [1.731671746E12, 15.0], [1.731671959E12, 15.0], [1.731671828E12, 12.0], [1.731672E12, 13.149999999999999], [1.73167191E12, 12.0], [1.731671869E12, 15.199999999999996], [1.731671779E12, 11.449999999999996], [1.731671738E12, 21.049999999999997], [1.731671951E12, 15.0], [1.731672033E12, 12.0], [1.73167182E12, 15.0], [1.731671992E12, 12.0], [1.731671902E12, 15.299999999999997], [1.731671861E12, 18.4], [1.731671771E12, 15.149999999999999], [1.731671943E12, 15.199999999999996], [1.731672025E12, 16.099999999999994], [1.731671812E12, 15.0], [1.731671984E12, 11.149999999999999], [1.731671894E12, 12.0], [1.731671853E12, 12.5], [1.731671849E12, 11.999999999999979], [1.731672021E12, 19.0], [1.731671808E12, 15.0], [1.731671931E12, 16.0], [1.73167189E12, 12.0], [1.731671972E12, 15.0], [1.731671759E12, 13.0], [1.731671841E12, 16.0], [1.731672013E12, 12.0], [1.7316718E12, 12.0], [1.731671923E12, 15.0], [1.731671882E12, 11.449999999999996], [1.731671964E12, 19.0], [1.731671751E12, 11.0], [1.731671833E12, 19.0], [1.731672005E12, 12.449999999999996], [1.731671792E12, 15.449999999999996], [1.731671915E12, 10.0], [1.731671874E12, 15.0], [1.731671956E12, 12.0], [1.731671743E12, 12.199999999999996], [1.731671825E12, 12.0], [1.731672038E12, 10.0], [1.731671997E12, 15.0], [1.731671784E12, 15.0], [1.731671907E12, 14.299999999999997], [1.731671866E12, 13.0], [1.731671948E12, 12.0], [1.731671817E12, 11.0], [1.73167203E12, 18.0], [1.731671989E12, 15.0], [1.731671776E12, 19.0], [1.731671899E12, 18.25], [1.731671858E12, 15.0], [1.73167194E12, 16.15], [1.731671809E12, 12.0], [1.731672022E12, 12.399999999999977], [1.731671981E12, 10.0], [1.731671768E12, 12.0], [1.731671891E12, 12.0], [1.73167185E12, 15.199999999999996], [1.731671932E12, 15.0], [1.731671801E12, 15.449999999999996], [1.731672014E12, 11.449999999999996], [1.731671973E12, 12.0], [1.73167176E12, 11.449999999999996], [1.731671883E12, 10.0], [1.731671842E12, 19.0], [1.731671924E12, 15.0], [1.731671793E12, 12.599999999999987], [1.731672006E12, 15.0], [1.731671965E12, 12.199999999999996], [1.731671752E12, 15.0], [1.731671875E12, 12.149999999999999], [1.731671834E12, 12.0], [1.731671916E12, 15.0], [1.731671785E12, 15.699999999999974], [1.731671998E12, 15.399999999999999], [1.731671957E12, 12.349999999999994], [1.731671744E12, 16.0], [1.731671867E12, 16.449999999999996], [1.731671826E12, 11.449999999999996], [1.731671908E12, 19.4], [1.731671777E12, 12.0], [1.73167199E12, 15.199999999999996], [1.731671949E12, 11.799999999999997], [1.731671859E12, 15.199999999999996], [1.731671818E12, 15.0], [1.731672031E12, 10.199999999999989], [1.7316719E12, 12.149999999999999], [1.731671769E12, 13.349999999999994], [1.731671982E12, 15.0], [1.731671941E12, 13.75], [1.731671851E12, 19.0], [1.73167181E12, 15.0], [1.731672023E12, 13.0], [1.731671806E12, 12.0], [1.731672019E12, 12.349999999999994], [1.731671765E12, 15.0], [1.731671978E12, 15.0], [1.731671847E12, 12.0], [1.731671929E12, 12.0], [1.731671888E12, 15.0], [1.731671798E12, 10.0], [1.731672011E12, 13.449999999999996], [1.731671757E12, 19.0], [1.73167197E12, 16.0], [1.731671839E12, 15.449999999999996], [1.731671921E12, 15.75], [1.73167188E12, 19.0], [1.73167179E12, 12.149999999999999], [1.731672003E12, 11.099999999999994], [1.731671749E12, 13.0], [1.731671962E12, 16.0], [1.731671831E12, 15.0], [1.731671913E12, 13.0], [1.731671872E12, 12.149999999999999], [1.731671782E12, 15.0], [1.731671995E12, 11.449999999999996], [1.731671741E12, 12.0], [1.731671954E12, 15.0], [1.731672036E12, 15.449999999999996], [1.731671823E12, 19.0], [1.731671905E12, 16.0], [1.731671864E12, 11.0], [1.731671774E12, 12.0], [1.731671987E12, 15.0], [1.731671946E12, 19.0], [1.731672028E12, 11.69999999999996], [1.731671815E12, 13.0], [1.731671897E12, 15.0], [1.731671856E12, 12.0], [1.731671766E12, 13.0], [1.731671979E12, 12.0], [1.731671938E12, 13.0], [1.73167202E12, 15.0], [1.731671807E12, 14.0], [1.731671889E12, 19.0], [1.731671848E12, 15.449999999999996], [1.731671758E12, 12.0], [1.731671971E12, 16.0], [1.73167193E12, 11.0], [1.731672012E12, 19.199999999999996], [1.731671799E12, 15.0], [1.731671881E12, 11.099999999999994], [1.73167184E12, 12.0], [1.73167175E12, 13.0], [1.731671963E12, 15.0], [1.731671922E12, 12.0], [1.731672004E12, 12.0], [1.731671791E12, 17.0], [1.731671873E12, 12.0], [1.731671832E12, 12.0], [1.731671742E12, 15.399999999999999], [1.731671955E12, 20.0], [1.731671914E12, 15.0], [1.731671996E12, 10.0], [1.731671783E12, 15.299999999999997], [1.731671865E12, 15.099999999999994], [1.731672037E12, 15.199999999999996], [1.731671824E12, 13.0], [1.731671947E12, 12.149999999999999], [1.731671906E12, 14.199999999999996], [1.731671988E12, 12.0], [1.731671775E12, 15.25], [1.731671857E12, 15.349999999999994], [1.731672029E12, 15.0], [1.731671816E12, 12.0], [1.731671939E12, 11.449999999999996], [1.731671898E12, 13.449999999999996], [1.73167198E12, 15.399999999999999], [1.731671767E12, 19.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.731671763E12, 8.0], [1.731671935E12, 5.0], [1.731672017E12, 8.0], [1.731671804E12, 8.0], [1.731671976E12, 8.0], [1.731671886E12, 8.0], [1.731671845E12, 8.0], [1.731671755E12, 8.0], [1.731671927E12, 8.0], [1.731672009E12, 8.0], [1.731671796E12, 8.0], [1.731671968E12, 8.0], [1.731671878E12, 4.0], [1.731671837E12, 8.0], [1.731671747E12, 8.0], [1.731671919E12, 8.0], [1.731672001E12, 5.0], [1.731671788E12, 8.0], [1.73167196E12, 8.0], [1.73167187E12, 8.0], [1.731671829E12, 8.0], [1.731671739E12, 8.0], [1.731671911E12, 8.0], [1.731671993E12, 8.0], [1.73167178E12, 8.0], [1.731671952E12, 8.0], [1.731671862E12, 8.0], [1.731671821E12, 8.0], [1.731672034E12, 8.0], [1.731671903E12, 8.0], [1.731671985E12, 8.0], [1.731671772E12, 8.0], [1.731671944E12, 5.0], [1.731671854E12, 8.0], [1.731671813E12, 8.0], [1.731672026E12, 8.0], [1.731671895E12, 8.0], [1.731671977E12, 8.0], [1.731671764E12, 8.0], [1.731671936E12, 8.0], [1.731671846E12, 8.0], [1.731671805E12, 8.0], [1.731672018E12, 8.0], [1.731671887E12, 8.0], [1.731671969E12, 8.0], [1.731671756E12, 6.0], [1.731671928E12, 8.0], [1.731671838E12, 8.0], [1.731671797E12, 8.0], [1.73167201E12, 5.0], [1.731671879E12, 8.0], [1.731671961E12, 8.0], [1.731671748E12, 8.0], [1.73167192E12, 8.0], [1.73167183E12, 8.0], [1.731671789E12, 8.0], [1.731672002E12, 8.0], [1.731671871E12, 8.0], [1.731671953E12, 8.0], [1.73167174E12, 8.0], [1.731671912E12, 8.0], [1.731671822E12, 5.0], [1.731672035E12, 8.0], [1.731671781E12, 8.0], [1.731671994E12, 8.0], [1.731671863E12, 8.0], [1.731671945E12, 8.0], [1.731671904E12, 8.0], [1.731671814E12, 8.0], [1.731672027E12, 8.0], [1.731671773E12, 8.0], [1.731671986E12, 8.0], [1.731671855E12, 8.0], [1.731671937E12, 8.0], [1.731671896E12, 8.0], [1.731671892E12, 8.0], [1.731671761E12, 8.0], [1.731671974E12, 8.0], [1.731671933E12, 8.0], [1.731671843E12, 8.0], [1.731671802E12, 8.0], [1.731672015E12, 8.0], [1.731671884E12, 8.0], [1.731671753E12, 8.0], [1.731671966E12, 8.0], [1.731671925E12, 7.0], [1.731671835E12, 8.0], [1.731671794E12, 5.0], [1.731672007E12, 8.0], [1.731671876E12, 8.0], [1.731671745E12, 8.0], [1.731671958E12, 8.0], [1.731671917E12, 8.0], [1.731671827E12, 8.0], [1.731671786E12, 8.0], [1.731671999E12, 8.0], [1.731671868E12, 8.0], [1.731671737E12, 9.0], [1.73167195E12, 8.0], [1.731671909E12, 8.0], [1.731671819E12, 8.0], [1.731671778E12, 8.0], [1.731671991E12, 5.0], [1.73167186E12, 8.0], [1.731672032E12, 8.0], [1.731671942E12, 8.0], [1.731671901E12, 8.0], [1.731671811E12, 8.0], [1.73167177E12, 8.0], [1.731671983E12, 8.0], [1.731671852E12, 8.0], [1.731672024E12, 8.0], [1.731671934E12, 8.0], [1.731671893E12, 8.0], [1.731671803E12, 5.0], [1.731671762E12, 8.0], [1.731671975E12, 8.0], [1.731671844E12, 8.0], [1.731672016E12, 8.0], [1.731671926E12, 8.0], [1.731671885E12, 8.0], [1.731671795E12, 8.0], [1.731671754E12, 8.0], [1.731671967E12, 8.0], [1.731671836E12, 8.0], [1.731672008E12, 8.0], [1.731671918E12, 8.0], [1.731671877E12, 8.0], [1.731671787E12, 8.0], [1.731671746E12, 5.0], [1.731671959E12, 8.0], [1.731671828E12, 8.0], [1.731672E12, 8.0], [1.73167191E12, 8.0], [1.731671869E12, 5.0], [1.731671779E12, 8.0], [1.731671738E12, 9.0], [1.731671951E12, 8.0], [1.731672033E12, 8.0], [1.73167182E12, 8.0], [1.731671992E12, 8.0], [1.731671902E12, 8.0], [1.731671861E12, 8.0], [1.731671771E12, 8.0], [1.731671943E12, 8.0], [1.731672025E12, 8.0], [1.731671812E12, 5.0], [1.731671984E12, 8.0], [1.731671894E12, 8.0], [1.731671853E12, 8.0], [1.731671849E12, 8.0], [1.731672021E12, 8.0], [1.731671808E12, 8.0], [1.731671931E12, 8.0], [1.73167189E12, 8.0], [1.731671972E12, 5.0], [1.731671759E12, 8.0], [1.731671841E12, 5.0], [1.731672013E12, 8.0], [1.7316718E12, 8.0], [1.731671923E12, 8.0], [1.731671882E12, 8.0], [1.731671964E12, 8.0], [1.731671751E12, 8.0], [1.731671833E12, 8.0], [1.731672005E12, 8.0], [1.731671792E12, 8.0], [1.731671915E12, 8.0], [1.731671874E12, 8.0], [1.731671956E12, 8.0], [1.731671743E12, 8.0], [1.731671825E12, 8.0], [1.731672038E12, 8.0], [1.731671997E12, 8.0], [1.731671784E12, 5.0], [1.731671907E12, 5.0], [1.731671866E12, 8.0], [1.731671948E12, 8.0], [1.731671817E12, 8.0], [1.73167203E12, 8.0], [1.731671989E12, 8.0], [1.731671776E12, 8.0], [1.731671899E12, 8.0], [1.731671858E12, 8.0], [1.73167194E12, 8.0], [1.731671809E12, 8.0], [1.731672022E12, 8.0], [1.731671981E12, 8.0], [1.731671768E12, 8.0], [1.731671891E12, 8.0], [1.73167185E12, 5.0], [1.731671932E12, 8.0], [1.731671801E12, 8.0], [1.731672014E12, 8.0], [1.731671973E12, 8.0], [1.73167176E12, 8.0], [1.731671883E12, 8.0], [1.731671842E12, 8.0], [1.731671924E12, 8.0], [1.731671793E12, 8.0], [1.731672006E12, 8.0], [1.731671965E12, 8.0], [1.731671752E12, 8.0], [1.731671875E12, 8.0], [1.731671834E12, 8.0], [1.731671916E12, 5.0], [1.731671785E12, 8.0], [1.731671998E12, 8.0], [1.731671957E12, 8.0], [1.731671744E12, 8.0], [1.731671867E12, 8.0], [1.731671826E12, 8.0], [1.731671908E12, 8.0], [1.731671777E12, 8.0], [1.73167199E12, 8.0], [1.731671949E12, 8.0], [1.731671859E12, 5.0], [1.731671818E12, 8.0], [1.731672031E12, 8.0], [1.7316719E12, 8.0], [1.731671769E12, 8.0], [1.731671982E12, 5.0], [1.731671941E12, 8.0], [1.731671851E12, 8.0], [1.73167181E12, 8.0], [1.731672023E12, 8.0], [1.731671806E12, 8.0], [1.731672019E12, 8.0], [1.731671765E12, 5.0], [1.731671978E12, 8.0], [1.731671847E12, 8.0], [1.731671929E12, 8.0], [1.731671888E12, 5.0], [1.731671798E12, 8.0], [1.731672011E12, 8.0], [1.731671757E12, 8.0], [1.73167197E12, 8.0], [1.731671839E12, 8.0], [1.731671921E12, 8.0], [1.73167188E12, 8.0], [1.73167179E12, 8.0], [1.731672003E12, 8.0], [1.731671749E12, 8.0], [1.731671962E12, 8.0], [1.731671831E12, 7.0], [1.731671913E12, 8.0], [1.731671872E12, 8.0], [1.731671782E12, 8.0], [1.731671995E12, 8.0], [1.731671741E12, 9.0], [1.731671954E12, 5.0], [1.731672036E12, 8.0], [1.731671823E12, 8.0], [1.731671905E12, 8.0], [1.731671864E12, 8.0], [1.731671774E12, 8.0], [1.731671987E12, 8.0], [1.731671946E12, 8.0], [1.731672028E12, 8.0], [1.731671815E12, 8.0], [1.731671897E12, 4.0], [1.731671856E12, 8.0], [1.731671766E12, 8.0], [1.731671979E12, 8.0], [1.731671938E12, 8.0], [1.73167202E12, 6.0], [1.731671807E12, 8.0], [1.731671889E12, 8.0], [1.731671848E12, 8.0], [1.731671758E12, 8.0], [1.731671971E12, 8.0], [1.73167193E12, 8.0], [1.731672012E12, 8.0], [1.731671799E12, 8.0], [1.731671881E12, 8.0], [1.73167184E12, 8.0], [1.73167175E12, 8.0], [1.731671963E12, 4.0], [1.731671922E12, 8.0], [1.731672004E12, 8.0], [1.731671791E12, 8.0], [1.731671873E12, 8.0], [1.731671832E12, 8.0], [1.731671742E12, 8.0], [1.731671955E12, 8.0], [1.731671914E12, 8.0], [1.731671996E12, 8.0], [1.731671783E12, 8.0], [1.731671865E12, 8.0], [1.731672037E12, 8.0], [1.731671824E12, 8.0], [1.731671947E12, 8.0], [1.731671906E12, 8.0], [1.731671988E12, 8.0], [1.731671775E12, 6.0], [1.731671857E12, 8.0], [1.731672029E12, 5.0], [1.731671816E12, 8.0], [1.731671939E12, 8.0], [1.731671898E12, 8.0], [1.73167198E12, 8.0], [1.731671767E12, 8.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.731671763E12, 9.0], [1.731671935E12, 9.0], [1.731672017E12, 9.0], [1.731671804E12, 9.0], [1.731671976E12, 9.0], [1.731671886E12, 9.0], [1.731671845E12, 8.0], [1.731671755E12, 9.0], [1.731671927E12, 9.0], [1.731672009E12, 9.0], [1.731671796E12, 9.0], [1.731671968E12, 9.0], [1.731671878E12, 9.0], [1.731671837E12, 9.0], [1.731671747E12, 9.0], [1.731671919E12, 8.0], [1.731672001E12, 8.5], [1.731671788E12, 9.0], [1.73167196E12, 9.0], [1.73167187E12, 9.0], [1.731671829E12, 9.0], [1.731671739E12, 9.0], [1.731671911E12, 9.0], [1.731671993E12, 9.0], [1.73167178E12, 9.0], [1.731671952E12, 9.0], [1.731671862E12, 9.0], [1.731671821E12, 9.0], [1.731672034E12, 9.0], [1.731671903E12, 9.0], [1.731671985E12, 9.0], [1.731671772E12, 9.0], [1.731671944E12, 9.0], [1.731671854E12, 9.0], [1.731671813E12, 9.0], [1.731672026E12, 9.0], [1.731671895E12, 9.0], [1.731671977E12, 9.0], [1.731671764E12, 9.0], [1.731671936E12, 9.0], [1.731671846E12, 9.0], [1.731671805E12, 9.0], [1.731672018E12, 9.0], [1.731671887E12, 8.0], [1.731671969E12, 9.0], [1.731671756E12, 9.0], [1.731671928E12, 9.0], [1.731671838E12, 9.0], [1.731671797E12, 9.0], [1.73167201E12, 8.0], [1.731671879E12, 9.0], [1.731671961E12, 9.0], [1.731671748E12, 9.0], [1.73167192E12, 9.0], [1.73167183E12, 9.0], [1.731671789E12, 9.0], [1.731672002E12, 9.0], [1.731671871E12, 9.0], [1.731671953E12, 9.0], [1.73167174E12, 9.0], [1.731671912E12, 9.0], [1.731671822E12, 9.0], [1.731672035E12, 9.0], [1.731671781E12, 9.0], [1.731671994E12, 8.0], [1.731671863E12, 9.0], [1.731671945E12, 9.0], [1.731671904E12, 9.0], [1.731671814E12, 9.0], [1.731672027E12, 9.0], [1.731671773E12, 9.0], [1.731671986E12, 9.0], [1.731671855E12, 9.0], [1.731671937E12, 9.0], [1.731671896E12, 9.0], [1.731671892E12, 9.0], [1.731671761E12, 9.0], [1.731671974E12, 9.0], [1.731671933E12, 9.0], [1.731671843E12, 9.0], [1.731671802E12, 8.0], [1.731672015E12, 9.0], [1.731671884E12, 8.0], [1.731671753E12, 9.0], [1.731671966E12, 9.0], [1.731671925E12, 9.0], [1.731671835E12, 9.0], [1.731671794E12, 9.0], [1.731672007E12, 8.0], [1.731671876E12, 8.5], [1.731671745E12, 9.0], [1.731671958E12, 9.0], [1.731671917E12, 8.0], [1.731671827E12, 9.0], [1.731671786E12, 9.0], [1.731671999E12, 9.0], [1.731671868E12, 9.0], [1.731671737E12, 12.0], [1.73167195E12, 9.0], [1.731671909E12, 9.0], [1.731671819E12, 9.0], [1.731671778E12, 9.0], [1.731671991E12, 9.0], [1.73167186E12, 9.0], [1.731672032E12, 9.0], [1.731671942E12, 8.5], [1.731671901E12, 9.0], [1.731671811E12, 9.0], [1.73167177E12, 9.0], [1.731671983E12, 9.0], [1.731671852E12, 8.0], [1.731672024E12, 9.0], [1.731671934E12, 9.0], [1.731671893E12, 9.0], [1.731671803E12, 9.0], [1.731671762E12, 9.0], [1.731671975E12, 9.0], [1.731671844E12, 9.0], [1.731672016E12, 9.0], [1.731671926E12, 9.0], [1.731671885E12, 9.0], [1.731671795E12, 9.0], [1.731671754E12, 9.0], [1.731671967E12, 9.0], [1.731671836E12, 9.0], [1.731672008E12, 9.0], [1.731671918E12, 8.0], [1.731671877E12, 9.0], [1.731671787E12, 9.0], [1.731671746E12, 9.0], [1.731671959E12, 9.0], [1.731671828E12, 9.0], [1.731672E12, 9.0], [1.73167191E12, 9.0], [1.731671869E12, 9.0], [1.731671779E12, 9.0], [1.731671738E12, 10.0], [1.731671951E12, 9.0], [1.731672033E12, 9.0], [1.73167182E12, 9.0], [1.731671992E12, 8.5], [1.731671902E12, 9.0], [1.731671861E12, 9.0], [1.731671771E12, 9.0], [1.731671943E12, 9.0], [1.731672025E12, 9.0], [1.731671812E12, 9.0], [1.731671984E12, 9.0], [1.731671894E12, 9.0], [1.731671853E12, 9.0], [1.731671849E12, 8.0], [1.731672021E12, 9.0], [1.731671808E12, 9.0], [1.731671931E12, 9.0], [1.73167189E12, 8.0], [1.731671972E12, 9.0], [1.731671759E12, 9.0], [1.731671841E12, 9.0], [1.731672013E12, 9.0], [1.7316718E12, 9.0], [1.731671923E12, 9.0], [1.731671882E12, 8.0], [1.731671964E12, 9.0], [1.731671751E12, 9.0], [1.731671833E12, 9.0], [1.731672005E12, 9.0], [1.731671792E12, 9.0], [1.731671915E12, 8.0], [1.731671874E12, 9.0], [1.731671956E12, 9.0], [1.731671743E12, 9.0], [1.731671825E12, 9.0], [1.731672038E12, 9.0], [1.731671997E12, 9.0], [1.731671784E12, 9.0], [1.731671907E12, 9.0], [1.731671866E12, 9.0], [1.731671948E12, 9.0], [1.731671817E12, 9.0], [1.73167203E12, 9.0], [1.731671989E12, 9.0], [1.731671776E12, 9.0], [1.731671899E12, 9.0], [1.731671858E12, 9.0], [1.73167194E12, 9.0], [1.731671809E12, 9.0], [1.731672022E12, 9.0], [1.731671981E12, 9.0], [1.731671768E12, 9.0], [1.731671891E12, 9.0], [1.73167185E12, 8.0], [1.731671932E12, 9.0], [1.731671801E12, 9.0], [1.731672014E12, 9.0], [1.731671973E12, 9.0], [1.73167176E12, 9.0], [1.731671883E12, 8.0], [1.731671842E12, 9.0], [1.731671924E12, 9.0], [1.731671793E12, 9.0], [1.731672006E12, 8.0], [1.731671965E12, 9.0], [1.731671752E12, 9.0], [1.731671875E12, 9.0], [1.731671834E12, 9.0], [1.731671916E12, 8.0], [1.731671785E12, 9.0], [1.731671998E12, 9.0], [1.731671957E12, 9.0], [1.731671744E12, 9.0], [1.731671867E12, 9.0], [1.731671826E12, 9.0], [1.731671908E12, 9.0], [1.731671777E12, 9.0], [1.73167199E12, 9.0], [1.731671949E12, 9.0], [1.731671859E12, 9.0], [1.731671818E12, 9.0], [1.731672031E12, 9.0], [1.7316719E12, 9.0], [1.731671769E12, 9.0], [1.731671982E12, 8.5], [1.731671941E12, 9.0], [1.731671851E12, 9.0], [1.73167181E12, 9.0], [1.731672023E12, 9.0], [1.731671806E12, 9.0], [1.731672019E12, 8.0], [1.731671765E12, 9.0], [1.731671978E12, 9.0], [1.731671847E12, 9.0], [1.731671929E12, 8.0], [1.731671888E12, 9.0], [1.731671798E12, 8.0], [1.731672011E12, 9.0], [1.731671757E12, 9.0], [1.73167197E12, 9.0], [1.731671839E12, 9.0], [1.731671921E12, 9.0], [1.73167188E12, 8.0], [1.73167179E12, 9.0], [1.731672003E12, 9.0], [1.731671749E12, 9.0], [1.731671962E12, 9.0], [1.731671831E12, 9.0], [1.731671913E12, 9.0], [1.731671872E12, 9.0], [1.731671782E12, 9.0], [1.731671995E12, 9.0], [1.731671741E12, 9.0], [1.731671954E12, 9.0], [1.731672036E12, 9.0], [1.731671823E12, 9.0], [1.731671905E12, 9.0], [1.731671864E12, 9.0], [1.731671774E12, 9.0], [1.731671987E12, 9.0], [1.731671946E12, 9.0], [1.731672028E12, 8.0], [1.731671815E12, 9.0], [1.731671897E12, 9.0], [1.731671856E12, 9.0], [1.731671766E12, 9.0], [1.731671979E12, 9.0], [1.731671938E12, 9.0], [1.73167202E12, 9.0], [1.731671807E12, 9.0], [1.731671889E12, 9.0], [1.731671848E12, 9.0], [1.731671758E12, 9.0], [1.731671971E12, 9.0], [1.73167193E12, 8.0], [1.731672012E12, 9.0], [1.731671799E12, 9.0], [1.731671881E12, 8.0], [1.73167184E12, 9.0], [1.73167175E12, 9.0], [1.731671963E12, 8.0], [1.731671922E12, 8.5], [1.731672004E12, 8.0], [1.731671791E12, 9.0], [1.731671873E12, 9.0], [1.731671832E12, 9.0], [1.731671742E12, 9.0], [1.731671955E12, 9.0], [1.731671914E12, 9.0], [1.731671996E12, 9.0], [1.731671783E12, 9.0], [1.731671865E12, 9.0], [1.731672037E12, 9.0], [1.731671824E12, 9.0], [1.731671947E12, 9.0], [1.731671906E12, 9.0], [1.731671988E12, 9.0], [1.731671775E12, 9.0], [1.731671857E12, 9.0], [1.731672029E12, 9.0], [1.731671816E12, 9.0], [1.731671939E12, 9.0], [1.731671898E12, 9.0], [1.73167198E12, 9.0], [1.731671767E12, 9.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.731672038E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 9.0, "minX": 15.0, "maxY": 12.0, "series": [{"data": [[21.0, 12.0], [51.0, 9.0], [50.0, 9.0], [52.0, 9.0], [53.0, 9.0], [55.0, 9.0], [54.0, 9.0], [56.0, 9.0], [57.0, 9.0], [58.0, 9.0], [15.0, 9.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 58.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 9.0, "minX": 15.0, "maxY": 12.0, "series": [{"data": [[21.0, 12.0], [51.0, 9.0], [50.0, 9.0], [52.0, 9.0], [53.0, 9.0], [55.0, 9.0], [54.0, 9.0], [56.0, 9.0], [57.0, 9.0], [58.0, 9.0], [15.0, 9.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 58.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 14.0, "minX": 1.731671737E12, "maxY": 58.0, "series": [{"data": [[1.731671763E12, 50.0], [1.731671935E12, 53.0], [1.731672017E12, 50.0], [1.731671804E12, 50.0], [1.731671976E12, 51.0], [1.731671886E12, 52.0], [1.731671845E12, 50.0], [1.731671755E12, 55.0], [1.731671927E12, 53.0], [1.731672009E12, 57.0], [1.731671796E12, 56.0], [1.731671968E12, 55.0], [1.731671878E12, 56.0], [1.731671837E12, 57.0], [1.731671747E12, 54.0], [1.731671919E12, 54.0], [1.731672001E12, 51.0], [1.731671788E12, 51.0], [1.73167196E12, 52.0], [1.73167187E12, 50.0], [1.731671829E12, 50.0], [1.731671739E12, 52.0], [1.731671911E12, 51.0], [1.731671993E12, 55.0], [1.73167178E12, 55.0], [1.731671952E12, 53.0], [1.731671862E12, 55.0], [1.731671821E12, 56.0], [1.731672034E12, 57.0], [1.731671903E12, 56.0], [1.731671985E12, 53.0], [1.731671772E12, 53.0], [1.731671944E12, 54.0], [1.731671854E12, 51.0], [1.731671813E12, 50.0], [1.731672026E12, 51.0], [1.731671895E12, 50.0], [1.731671977E12, 53.0], [1.731671764E12, 53.0], [1.731671936E12, 51.0], [1.731671846E12, 57.0], [1.731671805E12, 53.0], [1.731672018E12, 54.0], [1.731671887E12, 56.0], [1.731671969E12, 55.0], [1.731671756E12, 55.0], [1.731671928E12, 56.0], [1.731671838E12, 51.0], [1.731671797E12, 53.0], [1.73167201E12, 53.0], [1.731671879E12, 50.0], [1.731671961E12, 50.0], [1.731671748E12, 51.0], [1.73167192E12, 50.0], [1.73167183E12, 54.0], [1.731671789E12, 52.0], [1.731672002E12, 52.0], [1.731671871E12, 55.0], [1.731671953E12, 56.0], [1.73167174E12, 55.0], [1.731671912E12, 57.0], [1.731671822E12, 54.0], [1.731672035E12, 53.0], [1.731671781E12, 55.0], [1.731671994E12, 55.0], [1.731671863E12, 53.0], [1.731671945E12, 50.0], [1.731671904E12, 50.0], [1.731671814E12, 52.0], [1.731672027E12, 51.0], [1.731671773E12, 50.0], [1.731671986E12, 50.0], [1.731671855E12, 54.0], [1.731671937E12, 57.0], [1.731671896E12, 56.0], [1.731671892E12, 50.0], [1.731671761E12, 54.0], [1.731671974E12, 53.0], [1.731671933E12, 52.0], [1.731671843E12, 57.0], [1.731671802E12, 56.0], [1.731672015E12, 54.0], [1.731671884E12, 57.0], [1.731671753E12, 54.0], [1.731671966E12, 54.0], [1.731671925E12, 56.0], [1.731671835E12, 50.0], [1.731671794E12, 54.0], [1.731672007E12, 52.0], [1.731671876E12, 50.0], [1.731671745E12, 51.0], [1.731671958E12, 51.0], [1.731671917E12, 50.0], [1.731671827E12, 55.0], [1.731671786E12, 52.0], [1.731671999E12, 53.0], [1.731671868E12, 56.0], [1.731671737E12, 23.0], [1.73167195E12, 58.0], [1.731671909E12, 57.0], [1.731671819E12, 53.0], [1.731671778E12, 54.0], [1.731671991E12, 54.0], [1.73167186E12, 52.0], [1.731672032E12, 52.0], [1.731671942E12, 50.0], [1.731671901E12, 50.0], [1.731671811E12, 53.0], [1.73167177E12, 51.0], [1.731671983E12, 51.0], [1.731671852E12, 55.0], [1.731672024E12, 53.0], [1.731671934E12, 55.0], [1.731671893E12, 57.0], [1.731671803E12, 54.0], [1.731671762E12, 56.0], [1.731671975E12, 56.0], [1.731671844E12, 52.0], [1.731672016E12, 56.0], [1.731671926E12, 50.0], [1.731671885E12, 51.0], [1.731671795E12, 51.0], [1.731671754E12, 50.0], [1.731671967E12, 50.0], [1.731671836E12, 52.0], [1.731672008E12, 50.0], [1.731671918E12, 56.0], [1.731671877E12, 54.0], [1.731671787E12, 57.0], [1.731671746E12, 55.0], [1.731671959E12, 57.0], [1.731671828E12, 55.0], [1.731672E12, 56.0], [1.73167191E12, 51.0], [1.731671869E12, 54.0], [1.731671779E12, 50.0], [1.731671738E12, 57.0], [1.731671951E12, 50.0], [1.731672033E12, 50.0], [1.73167182E12, 50.0], [1.731671992E12, 50.0], [1.731671902E12, 54.0], [1.731671861E12, 52.0], [1.731671771E12, 56.0], [1.731671943E12, 56.0], [1.731672025E12, 56.0], [1.731671812E12, 57.0], [1.731671984E12, 56.0], [1.731671894E12, 53.0], [1.731671853E12, 54.0], [1.731671849E12, 56.0], [1.731672021E12, 53.0], [1.731671808E12, 53.0], [1.731671931E12, 55.0], [1.73167189E12, 57.0], [1.731671972E12, 55.0], [1.731671759E12, 56.0], [1.731671841E12, 54.0], [1.731672013E12, 54.0], [1.7316718E12, 53.0], [1.731671923E12, 50.0], [1.731671882E12, 50.0], [1.731671964E12, 50.0], [1.731671751E12, 50.0], [1.731671833E12, 53.0], [1.731672005E12, 51.0], [1.731671792E12, 51.0], [1.731671915E12, 57.0], [1.731671874E12, 55.0], [1.731671956E12, 57.0], [1.731671743E12, 55.0], [1.731671825E12, 54.0], [1.731672038E12, 14.0], [1.731671997E12, 57.0], [1.731671784E12, 56.0], [1.731671907E12, 52.0], [1.731671866E12, 52.0], [1.731671948E12, 50.0], [1.731671817E12, 51.0], [1.73167203E12, 51.0], [1.731671989E12, 50.0], [1.731671776E12, 50.0], [1.731671899E12, 55.0], [1.731671858E12, 53.0], [1.73167194E12, 56.0], [1.731671809E12, 57.0], [1.731672022E12, 57.0], [1.731671981E12, 55.0], [1.731671768E12, 57.0], [1.731671891E12, 52.0], [1.73167185E12, 54.0], [1.731671932E12, 52.0], [1.731671801E12, 50.0], [1.731672014E12, 50.0], [1.731671973E12, 51.0], [1.73167176E12, 50.0], [1.731671883E12, 52.0], [1.731671842E12, 51.0], [1.731671924E12, 54.0], [1.731671793E12, 55.0], [1.731672006E12, 57.0], [1.731671965E12, 56.0], [1.731671752E12, 56.0], [1.731671875E12, 55.0], [1.731671834E12, 57.0], [1.731671916E12, 53.0], [1.731671785E12, 50.0], [1.731671998E12, 50.0], [1.731671957E12, 51.0], [1.731671744E12, 53.0], [1.731671867E12, 50.0], [1.731671826E12, 50.0], [1.731671908E12, 52.0], [1.731671777E12, 56.0], [1.73167199E12, 56.0], [1.731671949E12, 52.0], [1.731671859E12, 55.0], [1.731671818E12, 56.0], [1.731672031E12, 57.0], [1.7316719E12, 55.0], [1.731671769E12, 51.0], [1.731671982E12, 53.0], [1.731671941E12, 54.0], [1.731671851E12, 50.0], [1.73167181E12, 50.0], [1.731672023E12, 50.0], [1.731671806E12, 57.0], [1.731672019E12, 52.0], [1.731671765E12, 55.0], [1.731671978E12, 56.0], [1.731671847E12, 53.0], [1.731671929E12, 51.0], [1.731671888E12, 52.0], [1.731671798E12, 50.0], [1.731672011E12, 50.0], [1.731671757E12, 50.0], [1.73167197E12, 50.0], [1.731671839E12, 51.0], [1.731671921E12, 55.0], [1.73167188E12, 54.0], [1.73167179E12, 56.0], [1.731672003E12, 57.0], [1.731671749E12, 54.0], [1.731671962E12, 57.0], [1.731671831E12, 56.0], [1.731671913E12, 52.0], [1.731671872E12, 55.0], [1.731671782E12, 50.0], [1.731671995E12, 50.0], [1.731671741E12, 53.0], [1.731671954E12, 51.0], [1.731672036E12, 50.0], [1.731671823E12, 50.0], [1.731671905E12, 53.0], [1.731671864E12, 51.0], [1.731671774E12, 57.0], [1.731671987E12, 56.0], [1.731671946E12, 55.0], [1.731672028E12, 57.0], [1.731671815E12, 56.0], [1.731671897E12, 54.0], [1.731671856E12, 55.0], [1.731671766E12, 52.0], [1.731671979E12, 51.0], [1.731671938E12, 52.0], [1.73167202E12, 54.0], [1.731671807E12, 50.0], [1.731671889E12, 51.0], [1.731671848E12, 50.0], [1.731671758E12, 54.0], [1.731671971E12, 54.0], [1.73167193E12, 53.0], [1.731672012E12, 56.0], [1.731671799E12, 57.0], [1.731671881E12, 56.0], [1.73167184E12, 55.0], [1.73167175E12, 55.0], [1.731671963E12, 53.0], [1.731671922E12, 55.0], [1.731672004E12, 51.0], [1.731671791E12, 52.0], [1.731671873E12, 50.0], [1.731671832E12, 50.0], [1.731671742E12, 52.0], [1.731671955E12, 52.0], [1.731671914E12, 50.0], [1.731671996E12, 53.0], [1.731671783E12, 54.0], [1.731671865E12, 57.0], [1.731672037E12, 56.0], [1.731671824E12, 56.0], [1.731671947E12, 55.0], [1.731671906E12, 55.0], [1.731671988E12, 54.0], [1.731671775E12, 53.0], [1.731671857E12, 51.0], [1.731672029E12, 52.0], [1.731671816E12, 52.0], [1.731671939E12, 50.0], [1.731671898E12, 50.0], [1.73167198E12, 52.0], [1.731671767E12, 52.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.731672038E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 15.0, "minX": 1.731671737E12, "maxY": 58.0, "series": [{"data": [[1.731671763E12, 51.0], [1.731671935E12, 54.0], [1.731672017E12, 50.0], [1.731671804E12, 50.0], [1.731671976E12, 52.0], [1.731671886E12, 51.0], [1.731671845E12, 50.0], [1.731671755E12, 54.0], [1.731671927E12, 52.0], [1.731672009E12, 56.0], [1.731671796E12, 56.0], [1.731671968E12, 54.0], [1.731671878E12, 57.0], [1.731671837E12, 57.0], [1.731671747E12, 55.0], [1.731671919E12, 55.0], [1.731672001E12, 52.0], [1.731671788E12, 52.0], [1.73167196E12, 53.0], [1.73167187E12, 50.0], [1.731671829E12, 50.0], [1.731671739E12, 52.0], [1.731671911E12, 50.0], [1.731671993E12, 54.0], [1.73167178E12, 54.0], [1.731671952E12, 52.0], [1.731671862E12, 55.0], [1.731671821E12, 55.0], [1.731672034E12, 56.0], [1.731671903E12, 56.0], [1.731671985E12, 54.0], [1.731671772E12, 54.0], [1.731671944E12, 55.0], [1.731671854E12, 52.0], [1.731671813E12, 51.0], [1.731672026E12, 51.0], [1.731671895E12, 50.0], [1.731671977E12, 52.0], [1.731671764E12, 52.0], [1.731671936E12, 50.0], [1.731671846E12, 56.0], [1.731671805E12, 52.0], [1.731672018E12, 53.0], [1.731671887E12, 56.0], [1.731671969E12, 55.0], [1.731671756E12, 56.0], [1.731671928E12, 56.0], [1.731671838E12, 52.0], [1.731671797E12, 54.0], [1.73167201E12, 54.0], [1.731671879E12, 50.0], [1.731671961E12, 50.0], [1.731671748E12, 50.0], [1.73167192E12, 50.0], [1.73167183E12, 53.0], [1.731671789E12, 51.0], [1.731672002E12, 51.0], [1.731671871E12, 54.0], [1.731671953E12, 56.0], [1.73167174E12, 55.0], [1.731671912E12, 57.0], [1.731671822E12, 55.0], [1.731672035E12, 54.0], [1.731671781E12, 55.0], [1.731671994E12, 56.0], [1.731671863E12, 54.0], [1.731671945E12, 50.0], [1.731671904E12, 51.0], [1.731671814E12, 51.0], [1.731672027E12, 50.0], [1.731671773E12, 50.0], [1.731671986E12, 50.0], [1.731671855E12, 53.0], [1.731671937E12, 57.0], [1.731671896E12, 55.0], [1.731671892E12, 50.0], [1.731671761E12, 53.0], [1.731671974E12, 52.0], [1.731671933E12, 51.0], [1.731671843E12, 57.0], [1.731671802E12, 55.0], [1.731672015E12, 53.0], [1.731671884E12, 57.0], [1.731671753E12, 54.0], [1.731671966E12, 55.0], [1.731671925E12, 57.0], [1.731671835E12, 51.0], [1.731671794E12, 55.0], [1.731672007E12, 53.0], [1.731671876E12, 50.0], [1.731671745E12, 50.0], [1.731671958E12, 50.0], [1.731671917E12, 50.0], [1.731671827E12, 54.0], [1.731671786E12, 51.0], [1.731671999E12, 52.0], [1.731671868E12, 55.0], [1.731671737E12, 21.0], [1.73167195E12, 58.0], [1.731671909E12, 57.0], [1.731671819E12, 54.0], [1.731671778E12, 55.0], [1.731671991E12, 55.0], [1.73167186E12, 53.0], [1.731672032E12, 53.0], [1.731671942E12, 50.0], [1.731671901E12, 50.0], [1.731671811E12, 52.0], [1.73167177E12, 50.0], [1.731671983E12, 50.0], [1.731671852E12, 54.0], [1.731672024E12, 52.0], [1.731671934E12, 55.0], [1.731671893E12, 56.0], [1.731671803E12, 55.0], [1.731671762E12, 56.0], [1.731671975E12, 56.0], [1.731671844E12, 53.0], [1.731672016E12, 57.0], [1.731671926E12, 50.0], [1.731671885E12, 52.0], [1.731671795E12, 50.0], [1.731671754E12, 51.0], [1.731671967E12, 50.0], [1.731671836E12, 51.0], [1.731672008E12, 50.0], [1.731671918E12, 55.0], [1.731671877E12, 53.0], [1.731671787E12, 57.0], [1.731671746E12, 55.0], [1.731671959E12, 57.0], [1.731671828E12, 56.0], [1.731672E12, 56.0], [1.73167191E12, 52.0], [1.731671869E12, 55.0], [1.731671779E12, 50.0], [1.731671738E12, 58.0], [1.731671951E12, 51.0], [1.731672033E12, 50.0], [1.73167182E12, 50.0], [1.731671992E12, 50.0], [1.731671902E12, 53.0], [1.731671861E12, 51.0], [1.731671771E12, 56.0], [1.731671943E12, 55.0], [1.731672025E12, 57.0], [1.731671812E12, 57.0], [1.731671984E12, 56.0], [1.731671894E12, 54.0], [1.731671853E12, 54.0], [1.731671849E12, 55.0], [1.731672021E12, 52.0], [1.731671808E12, 52.0], [1.731671931E12, 55.0], [1.73167189E12, 57.0], [1.731671972E12, 55.0], [1.731671759E12, 57.0], [1.731671841E12, 55.0], [1.731672013E12, 55.0], [1.7316718E12, 54.0], [1.731671923E12, 50.0], [1.731671882E12, 50.0], [1.731671964E12, 50.0], [1.731671751E12, 50.0], [1.731671833E12, 52.0], [1.731672005E12, 50.0], [1.731671792E12, 50.0], [1.731671915E12, 56.0], [1.731671874E12, 54.0], [1.731671956E12, 57.0], [1.731671743E12, 55.0], [1.731671825E12, 55.0], [1.731672038E12, 15.0], [1.731671997E12, 57.0], [1.731671784E12, 57.0], [1.731671907E12, 53.0], [1.731671866E12, 53.0], [1.731671948E12, 50.0], [1.731671817E12, 50.0], [1.73167203E12, 50.0], [1.731671989E12, 50.0], [1.731671776E12, 50.0], [1.731671899E12, 54.0], [1.731671858E12, 52.0], [1.73167194E12, 56.0], [1.731671809E12, 57.0], [1.731672022E12, 57.0], [1.731671981E12, 55.0], [1.731671768E12, 57.0], [1.731671891E12, 53.0], [1.73167185E12, 55.0], [1.731671932E12, 53.0], [1.731671801E12, 50.0], [1.731672014E12, 50.0], [1.731671973E12, 52.0], [1.73167176E12, 50.0], [1.731671883E12, 51.0], [1.731671842E12, 50.0], [1.731671924E12, 53.0], [1.731671793E12, 55.0], [1.731672006E12, 57.0], [1.731671965E12, 55.0], [1.731671752E12, 55.0], [1.731671875E12, 56.0], [1.731671834E12, 57.0], [1.731671916E12, 54.0], [1.731671785E12, 50.0], [1.731671998E12, 51.0], [1.731671957E12, 52.0], [1.731671744E12, 54.0], [1.731671867E12, 50.0], [1.731671826E12, 50.0], [1.731671908E12, 51.0], [1.731671777E12, 55.0], [1.73167199E12, 55.0], [1.731671949E12, 51.0], [1.731671859E12, 55.0], [1.731671818E12, 56.0], [1.731672031E12, 57.0], [1.7316719E12, 56.0], [1.731671769E12, 52.0], [1.731671982E12, 54.0], [1.731671941E12, 54.0], [1.731671851E12, 50.0], [1.73167181E12, 51.0], [1.731672023E12, 51.0], [1.731671806E12, 58.0], [1.731672019E12, 52.0], [1.731671765E12, 55.0], [1.731671978E12, 56.0], [1.731671847E12, 54.0], [1.731671929E12, 52.0], [1.731671888E12, 53.0], [1.731671798E12, 50.0], [1.731672011E12, 50.0], [1.731671757E12, 50.0], [1.73167197E12, 51.0], [1.731671839E12, 50.0], [1.731671921E12, 54.0], [1.73167188E12, 53.0], [1.73167179E12, 56.0], [1.731672003E12, 57.0], [1.731671749E12, 54.0], [1.731671962E12, 56.0], [1.731671831E12, 56.0], [1.731671913E12, 53.0], [1.731671872E12, 56.0], [1.731671782E12, 51.0], [1.731671995E12, 50.0], [1.731671741E12, 54.0], [1.731671954E12, 52.0], [1.731672036E12, 50.0], [1.731671823E12, 50.0], [1.731671905E12, 52.0], [1.731671864E12, 50.0], [1.731671774E12, 56.0], [1.731671987E12, 55.0], [1.731671946E12, 54.0], [1.731672028E12, 57.0], [1.731671815E12, 56.0], [1.731671897E12, 55.0], [1.731671856E12, 55.0], [1.731671766E12, 53.0], [1.731671979E12, 52.0], [1.731671938E12, 53.0], [1.73167202E12, 55.0], [1.731671807E12, 50.0], [1.731671889E12, 50.0], [1.731671848E12, 50.0], [1.731671758E12, 53.0], [1.731671971E12, 53.0], [1.73167193E12, 52.0], [1.731672012E12, 55.0], [1.731671799E12, 56.0], [1.731671881E12, 57.0], [1.73167184E12, 55.0], [1.73167175E12, 56.0], [1.731671963E12, 54.0], [1.731671922E12, 56.0], [1.731672004E12, 52.0], [1.731671791E12, 53.0], [1.731671873E12, 50.0], [1.731671832E12, 51.0], [1.731671742E12, 51.0], [1.731671955E12, 51.0], [1.731671914E12, 50.0], [1.731671996E12, 52.0], [1.731671783E12, 53.0], [1.731671865E12, 57.0], [1.731672037E12, 55.0], [1.731671824E12, 55.0], [1.731671947E12, 56.0], [1.731671906E12, 55.0], [1.731671988E12, 55.0], [1.731671775E12, 54.0], [1.731671857E12, 52.0], [1.731672029E12, 53.0], [1.731671816E12, 53.0], [1.731671939E12, 50.0], [1.731671898E12, 50.0], [1.73167198E12, 51.0], [1.731671767E12, 51.0]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.731672038E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 15.0, "minX": 1.731671737E12, "maxY": 58.0, "series": [{"data": [[1.731671763E12, 51.0], [1.731671935E12, 54.0], [1.731672017E12, 50.0], [1.731671804E12, 50.0], [1.731671976E12, 52.0], [1.731671886E12, 51.0], [1.731671845E12, 50.0], [1.731671755E12, 54.0], [1.731671927E12, 52.0], [1.731672009E12, 56.0], [1.731671796E12, 56.0], [1.731671968E12, 54.0], [1.731671878E12, 57.0], [1.731671837E12, 57.0], [1.731671747E12, 55.0], [1.731671919E12, 55.0], [1.731672001E12, 52.0], [1.731671788E12, 52.0], [1.73167196E12, 53.0], [1.73167187E12, 50.0], [1.731671829E12, 50.0], [1.731671739E12, 52.0], [1.731671911E12, 50.0], [1.731671993E12, 54.0], [1.73167178E12, 54.0], [1.731671952E12, 52.0], [1.731671862E12, 55.0], [1.731671821E12, 55.0], [1.731672034E12, 56.0], [1.731671903E12, 56.0], [1.731671985E12, 54.0], [1.731671772E12, 54.0], [1.731671944E12, 55.0], [1.731671854E12, 52.0], [1.731671813E12, 51.0], [1.731672026E12, 51.0], [1.731671895E12, 50.0], [1.731671977E12, 52.0], [1.731671764E12, 52.0], [1.731671936E12, 50.0], [1.731671846E12, 56.0], [1.731671805E12, 52.0], [1.731672018E12, 53.0], [1.731671887E12, 56.0], [1.731671969E12, 55.0], [1.731671756E12, 56.0], [1.731671928E12, 56.0], [1.731671838E12, 52.0], [1.731671797E12, 54.0], [1.73167201E12, 54.0], [1.731671879E12, 50.0], [1.731671961E12, 50.0], [1.731671748E12, 50.0], [1.73167192E12, 50.0], [1.73167183E12, 53.0], [1.731671789E12, 51.0], [1.731672002E12, 51.0], [1.731671871E12, 54.0], [1.731671953E12, 56.0], [1.73167174E12, 55.0], [1.731671912E12, 57.0], [1.731671822E12, 55.0], [1.731672035E12, 54.0], [1.731671781E12, 55.0], [1.731671994E12, 56.0], [1.731671863E12, 54.0], [1.731671945E12, 50.0], [1.731671904E12, 51.0], [1.731671814E12, 51.0], [1.731672027E12, 50.0], [1.731671773E12, 50.0], [1.731671986E12, 50.0], [1.731671855E12, 53.0], [1.731671937E12, 57.0], [1.731671896E12, 55.0], [1.731671892E12, 50.0], [1.731671761E12, 53.0], [1.731671974E12, 52.0], [1.731671933E12, 51.0], [1.731671843E12, 57.0], [1.731671802E12, 55.0], [1.731672015E12, 53.0], [1.731671884E12, 57.0], [1.731671753E12, 54.0], [1.731671966E12, 55.0], [1.731671925E12, 57.0], [1.731671835E12, 51.0], [1.731671794E12, 55.0], [1.731672007E12, 53.0], [1.731671876E12, 50.0], [1.731671745E12, 50.0], [1.731671958E12, 50.0], [1.731671917E12, 50.0], [1.731671827E12, 54.0], [1.731671786E12, 51.0], [1.731671999E12, 52.0], [1.731671868E12, 55.0], [1.731671737E12, 21.0], [1.73167195E12, 58.0], [1.731671909E12, 57.0], [1.731671819E12, 54.0], [1.731671778E12, 55.0], [1.731671991E12, 55.0], [1.73167186E12, 53.0], [1.731672032E12, 53.0], [1.731671942E12, 50.0], [1.731671901E12, 50.0], [1.731671811E12, 52.0], [1.73167177E12, 50.0], [1.731671983E12, 50.0], [1.731671852E12, 54.0], [1.731672024E12, 52.0], [1.731671934E12, 55.0], [1.731671893E12, 56.0], [1.731671803E12, 55.0], [1.731671762E12, 56.0], [1.731671975E12, 56.0], [1.731671844E12, 53.0], [1.731672016E12, 57.0], [1.731671926E12, 50.0], [1.731671885E12, 52.0], [1.731671795E12, 50.0], [1.731671754E12, 51.0], [1.731671967E12, 50.0], [1.731671836E12, 51.0], [1.731672008E12, 50.0], [1.731671918E12, 55.0], [1.731671877E12, 53.0], [1.731671787E12, 57.0], [1.731671746E12, 55.0], [1.731671959E12, 57.0], [1.731671828E12, 56.0], [1.731672E12, 56.0], [1.73167191E12, 52.0], [1.731671869E12, 55.0], [1.731671779E12, 50.0], [1.731671738E12, 58.0], [1.731671951E12, 51.0], [1.731672033E12, 50.0], [1.73167182E12, 50.0], [1.731671992E12, 50.0], [1.731671902E12, 53.0], [1.731671861E12, 51.0], [1.731671771E12, 56.0], [1.731671943E12, 55.0], [1.731672025E12, 57.0], [1.731671812E12, 57.0], [1.731671984E12, 56.0], [1.731671894E12, 54.0], [1.731671853E12, 54.0], [1.731671849E12, 55.0], [1.731672021E12, 52.0], [1.731671808E12, 52.0], [1.731671931E12, 55.0], [1.73167189E12, 57.0], [1.731671972E12, 55.0], [1.731671759E12, 57.0], [1.731671841E12, 55.0], [1.731672013E12, 55.0], [1.7316718E12, 54.0], [1.731671923E12, 50.0], [1.731671882E12, 50.0], [1.731671964E12, 50.0], [1.731671751E12, 50.0], [1.731671833E12, 52.0], [1.731672005E12, 50.0], [1.731671792E12, 50.0], [1.731671915E12, 56.0], [1.731671874E12, 54.0], [1.731671956E12, 57.0], [1.731671743E12, 55.0], [1.731671825E12, 55.0], [1.731672038E12, 15.0], [1.731671997E12, 57.0], [1.731671784E12, 57.0], [1.731671907E12, 53.0], [1.731671866E12, 53.0], [1.731671948E12, 50.0], [1.731671817E12, 50.0], [1.73167203E12, 50.0], [1.731671989E12, 50.0], [1.731671776E12, 50.0], [1.731671899E12, 54.0], [1.731671858E12, 52.0], [1.73167194E12, 56.0], [1.731671809E12, 57.0], [1.731672022E12, 57.0], [1.731671981E12, 55.0], [1.731671768E12, 57.0], [1.731671891E12, 53.0], [1.73167185E12, 55.0], [1.731671932E12, 53.0], [1.731671801E12, 50.0], [1.731672014E12, 50.0], [1.731671973E12, 52.0], [1.73167176E12, 50.0], [1.731671883E12, 51.0], [1.731671842E12, 50.0], [1.731671924E12, 53.0], [1.731671793E12, 55.0], [1.731672006E12, 57.0], [1.731671965E12, 55.0], [1.731671752E12, 55.0], [1.731671875E12, 56.0], [1.731671834E12, 57.0], [1.731671916E12, 54.0], [1.731671785E12, 50.0], [1.731671998E12, 51.0], [1.731671957E12, 52.0], [1.731671744E12, 54.0], [1.731671867E12, 50.0], [1.731671826E12, 50.0], [1.731671908E12, 51.0], [1.731671777E12, 55.0], [1.73167199E12, 55.0], [1.731671949E12, 51.0], [1.731671859E12, 55.0], [1.731671818E12, 56.0], [1.731672031E12, 57.0], [1.7316719E12, 56.0], [1.731671769E12, 52.0], [1.731671982E12, 54.0], [1.731671941E12, 54.0], [1.731671851E12, 50.0], [1.73167181E12, 51.0], [1.731672023E12, 51.0], [1.731671806E12, 58.0], [1.731672019E12, 52.0], [1.731671765E12, 55.0], [1.731671978E12, 56.0], [1.731671847E12, 54.0], [1.731671929E12, 52.0], [1.731671888E12, 53.0], [1.731671798E12, 50.0], [1.731672011E12, 50.0], [1.731671757E12, 50.0], [1.73167197E12, 51.0], [1.731671839E12, 50.0], [1.731671921E12, 54.0], [1.73167188E12, 53.0], [1.73167179E12, 56.0], [1.731672003E12, 57.0], [1.731671749E12, 54.0], [1.731671962E12, 56.0], [1.731671831E12, 56.0], [1.731671913E12, 53.0], [1.731671872E12, 56.0], [1.731671782E12, 51.0], [1.731671995E12, 50.0], [1.731671741E12, 54.0], [1.731671954E12, 52.0], [1.731672036E12, 50.0], [1.731671823E12, 50.0], [1.731671905E12, 52.0], [1.731671864E12, 50.0], [1.731671774E12, 56.0], [1.731671987E12, 55.0], [1.731671946E12, 54.0], [1.731672028E12, 57.0], [1.731671815E12, 56.0], [1.731671897E12, 55.0], [1.731671856E12, 55.0], [1.731671766E12, 53.0], [1.731671979E12, 52.0], [1.731671938E12, 53.0], [1.73167202E12, 55.0], [1.731671807E12, 50.0], [1.731671889E12, 50.0], [1.731671848E12, 50.0], [1.731671758E12, 53.0], [1.731671971E12, 53.0], [1.73167193E12, 52.0], [1.731672012E12, 55.0], [1.731671799E12, 56.0], [1.731671881E12, 57.0], [1.73167184E12, 55.0], [1.73167175E12, 56.0], [1.731671963E12, 54.0], [1.731671922E12, 56.0], [1.731672004E12, 52.0], [1.731671791E12, 53.0], [1.731671873E12, 50.0], [1.731671832E12, 51.0], [1.731671742E12, 51.0], [1.731671955E12, 51.0], [1.731671914E12, 50.0], [1.731671996E12, 52.0], [1.731671783E12, 53.0], [1.731671865E12, 57.0], [1.731672037E12, 55.0], [1.731671824E12, 55.0], [1.731671947E12, 56.0], [1.731671906E12, 55.0], [1.731671988E12, 55.0], [1.731671775E12, 54.0], [1.731671857E12, 52.0], [1.731672029E12, 53.0], [1.731671816E12, 53.0], [1.731671939E12, 50.0], [1.731671898E12, 50.0], [1.73167198E12, 51.0], [1.731671767E12, 51.0]], "isOverall": false, "label": "Products-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.731672038E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 15.0, "minX": 1.731671737E12, "maxY": 58.0, "series": [{"data": [[1.731671763E12, 51.0], [1.731671935E12, 54.0], [1.731672017E12, 50.0], [1.731671804E12, 50.0], [1.731671976E12, 52.0], [1.731671886E12, 51.0], [1.731671845E12, 50.0], [1.731671755E12, 54.0], [1.731671927E12, 52.0], [1.731672009E12, 56.0], [1.731671796E12, 56.0], [1.731671968E12, 54.0], [1.731671878E12, 57.0], [1.731671837E12, 57.0], [1.731671747E12, 55.0], [1.731671919E12, 55.0], [1.731672001E12, 52.0], [1.731671788E12, 52.0], [1.73167196E12, 53.0], [1.73167187E12, 50.0], [1.731671829E12, 50.0], [1.731671739E12, 52.0], [1.731671911E12, 50.0], [1.731671993E12, 54.0], [1.73167178E12, 54.0], [1.731671952E12, 52.0], [1.731671862E12, 55.0], [1.731671821E12, 55.0], [1.731672034E12, 56.0], [1.731671903E12, 56.0], [1.731671985E12, 54.0], [1.731671772E12, 54.0], [1.731671944E12, 55.0], [1.731671854E12, 52.0], [1.731671813E12, 51.0], [1.731672026E12, 51.0], [1.731671895E12, 50.0], [1.731671977E12, 52.0], [1.731671764E12, 52.0], [1.731671936E12, 50.0], [1.731671846E12, 56.0], [1.731671805E12, 52.0], [1.731672018E12, 53.0], [1.731671887E12, 56.0], [1.731671969E12, 55.0], [1.731671756E12, 56.0], [1.731671928E12, 56.0], [1.731671838E12, 52.0], [1.731671797E12, 54.0], [1.73167201E12, 54.0], [1.731671879E12, 50.0], [1.731671961E12, 50.0], [1.731671748E12, 50.0], [1.73167192E12, 50.0], [1.73167183E12, 53.0], [1.731671789E12, 51.0], [1.731672002E12, 51.0], [1.731671871E12, 54.0], [1.731671953E12, 56.0], [1.73167174E12, 55.0], [1.731671912E12, 57.0], [1.731671822E12, 55.0], [1.731672035E12, 54.0], [1.731671781E12, 55.0], [1.731671994E12, 56.0], [1.731671863E12, 54.0], [1.731671945E12, 50.0], [1.731671904E12, 51.0], [1.731671814E12, 51.0], [1.731672027E12, 50.0], [1.731671773E12, 50.0], [1.731671986E12, 50.0], [1.731671855E12, 53.0], [1.731671937E12, 57.0], [1.731671896E12, 55.0], [1.731671892E12, 50.0], [1.731671761E12, 53.0], [1.731671974E12, 52.0], [1.731671933E12, 51.0], [1.731671843E12, 57.0], [1.731671802E12, 55.0], [1.731672015E12, 53.0], [1.731671884E12, 57.0], [1.731671753E12, 54.0], [1.731671966E12, 55.0], [1.731671925E12, 57.0], [1.731671835E12, 51.0], [1.731671794E12, 55.0], [1.731672007E12, 53.0], [1.731671876E12, 50.0], [1.731671745E12, 50.0], [1.731671958E12, 50.0], [1.731671917E12, 50.0], [1.731671827E12, 54.0], [1.731671786E12, 51.0], [1.731671999E12, 52.0], [1.731671868E12, 55.0], [1.731671737E12, 21.0], [1.73167195E12, 58.0], [1.731671909E12, 57.0], [1.731671819E12, 54.0], [1.731671778E12, 55.0], [1.731671991E12, 55.0], [1.73167186E12, 53.0], [1.731672032E12, 53.0], [1.731671942E12, 50.0], [1.731671901E12, 50.0], [1.731671811E12, 52.0], [1.73167177E12, 50.0], [1.731671983E12, 50.0], [1.731671852E12, 54.0], [1.731672024E12, 52.0], [1.731671934E12, 55.0], [1.731671893E12, 56.0], [1.731671803E12, 55.0], [1.731671762E12, 56.0], [1.731671975E12, 56.0], [1.731671844E12, 53.0], [1.731672016E12, 57.0], [1.731671926E12, 50.0], [1.731671885E12, 52.0], [1.731671795E12, 50.0], [1.731671754E12, 51.0], [1.731671967E12, 50.0], [1.731671836E12, 51.0], [1.731672008E12, 50.0], [1.731671918E12, 55.0], [1.731671877E12, 53.0], [1.731671787E12, 57.0], [1.731671746E12, 55.0], [1.731671959E12, 57.0], [1.731671828E12, 56.0], [1.731672E12, 56.0], [1.73167191E12, 52.0], [1.731671869E12, 55.0], [1.731671779E12, 50.0], [1.731671738E12, 58.0], [1.731671951E12, 51.0], [1.731672033E12, 50.0], [1.73167182E12, 50.0], [1.731671992E12, 50.0], [1.731671902E12, 53.0], [1.731671861E12, 51.0], [1.731671771E12, 56.0], [1.731671943E12, 55.0], [1.731672025E12, 57.0], [1.731671812E12, 57.0], [1.731671984E12, 56.0], [1.731671894E12, 54.0], [1.731671853E12, 54.0], [1.731671849E12, 55.0], [1.731672021E12, 52.0], [1.731671808E12, 52.0], [1.731671931E12, 55.0], [1.73167189E12, 57.0], [1.731671972E12, 55.0], [1.731671759E12, 57.0], [1.731671841E12, 55.0], [1.731672013E12, 55.0], [1.7316718E12, 54.0], [1.731671923E12, 50.0], [1.731671882E12, 50.0], [1.731671964E12, 50.0], [1.731671751E12, 50.0], [1.731671833E12, 52.0], [1.731672005E12, 50.0], [1.731671792E12, 50.0], [1.731671915E12, 56.0], [1.731671874E12, 54.0], [1.731671956E12, 57.0], [1.731671743E12, 55.0], [1.731671825E12, 55.0], [1.731672038E12, 15.0], [1.731671997E12, 57.0], [1.731671784E12, 57.0], [1.731671907E12, 53.0], [1.731671866E12, 53.0], [1.731671948E12, 50.0], [1.731671817E12, 50.0], [1.73167203E12, 50.0], [1.731671989E12, 50.0], [1.731671776E12, 50.0], [1.731671899E12, 54.0], [1.731671858E12, 52.0], [1.73167194E12, 56.0], [1.731671809E12, 57.0], [1.731672022E12, 57.0], [1.731671981E12, 55.0], [1.731671768E12, 57.0], [1.731671891E12, 53.0], [1.73167185E12, 55.0], [1.731671932E12, 53.0], [1.731671801E12, 50.0], [1.731672014E12, 50.0], [1.731671973E12, 52.0], [1.73167176E12, 50.0], [1.731671883E12, 51.0], [1.731671842E12, 50.0], [1.731671924E12, 53.0], [1.731671793E12, 55.0], [1.731672006E12, 57.0], [1.731671965E12, 55.0], [1.731671752E12, 55.0], [1.731671875E12, 56.0], [1.731671834E12, 57.0], [1.731671916E12, 54.0], [1.731671785E12, 50.0], [1.731671998E12, 51.0], [1.731671957E12, 52.0], [1.731671744E12, 54.0], [1.731671867E12, 50.0], [1.731671826E12, 50.0], [1.731671908E12, 51.0], [1.731671777E12, 55.0], [1.73167199E12, 55.0], [1.731671949E12, 51.0], [1.731671859E12, 55.0], [1.731671818E12, 56.0], [1.731672031E12, 57.0], [1.7316719E12, 56.0], [1.731671769E12, 52.0], [1.731671982E12, 54.0], [1.731671941E12, 54.0], [1.731671851E12, 50.0], [1.73167181E12, 51.0], [1.731672023E12, 51.0], [1.731671806E12, 58.0], [1.731672019E12, 52.0], [1.731671765E12, 55.0], [1.731671978E12, 56.0], [1.731671847E12, 54.0], [1.731671929E12, 52.0], [1.731671888E12, 53.0], [1.731671798E12, 50.0], [1.731672011E12, 50.0], [1.731671757E12, 50.0], [1.73167197E12, 51.0], [1.731671839E12, 50.0], [1.731671921E12, 54.0], [1.73167188E12, 53.0], [1.73167179E12, 56.0], [1.731672003E12, 57.0], [1.731671749E12, 54.0], [1.731671962E12, 56.0], [1.731671831E12, 56.0], [1.731671913E12, 53.0], [1.731671872E12, 56.0], [1.731671782E12, 51.0], [1.731671995E12, 50.0], [1.731671741E12, 54.0], [1.731671954E12, 52.0], [1.731672036E12, 50.0], [1.731671823E12, 50.0], [1.731671905E12, 52.0], [1.731671864E12, 50.0], [1.731671774E12, 56.0], [1.731671987E12, 55.0], [1.731671946E12, 54.0], [1.731672028E12, 57.0], [1.731671815E12, 56.0], [1.731671897E12, 55.0], [1.731671856E12, 55.0], [1.731671766E12, 53.0], [1.731671979E12, 52.0], [1.731671938E12, 53.0], [1.73167202E12, 55.0], [1.731671807E12, 50.0], [1.731671889E12, 50.0], [1.731671848E12, 50.0], [1.731671758E12, 53.0], [1.731671971E12, 53.0], [1.73167193E12, 52.0], [1.731672012E12, 55.0], [1.731671799E12, 56.0], [1.731671881E12, 57.0], [1.73167184E12, 55.0], [1.73167175E12, 56.0], [1.731671963E12, 54.0], [1.731671922E12, 56.0], [1.731672004E12, 52.0], [1.731671791E12, 53.0], [1.731671873E12, 50.0], [1.731671832E12, 51.0], [1.731671742E12, 51.0], [1.731671955E12, 51.0], [1.731671914E12, 50.0], [1.731671996E12, 52.0], [1.731671783E12, 53.0], [1.731671865E12, 57.0], [1.731672037E12, 55.0], [1.731671824E12, 55.0], [1.731671947E12, 56.0], [1.731671906E12, 55.0], [1.731671988E12, 55.0], [1.731671775E12, 54.0], [1.731671857E12, 52.0], [1.731672029E12, 53.0], [1.731671816E12, 53.0], [1.731671939E12, 50.0], [1.731671898E12, 50.0], [1.73167198E12, 51.0], [1.731671767E12, 51.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.731672038E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

