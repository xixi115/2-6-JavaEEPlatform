/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 4.0, "minX": 0.0, "maxY": 185.0, "series": [{"data": [[0.0, 4.0], [0.1, 4.0], [0.2, 9.0], [0.3, 9.0], [0.4, 9.0], [0.5, 9.0], [0.6, 9.0], [0.7, 9.0], [0.8, 9.0], [0.9, 9.0], [1.0, 9.0], [1.1, 9.0], [1.2, 9.0], [1.3, 9.0], [1.4, 9.0], [1.5, 9.0], [1.6, 9.0], [1.7, 9.0], [1.8, 9.0], [1.9, 9.0], [2.0, 9.0], [2.1, 9.0], [2.2, 9.0], [2.3, 9.0], [2.4, 9.0], [2.5, 9.0], [2.6, 9.0], [2.7, 9.0], [2.8, 9.0], [2.9, 9.0], [3.0, 9.0], [3.1, 9.0], [3.2, 9.0], [3.3, 9.0], [3.4, 9.0], [3.5, 9.0], [3.6, 9.0], [3.7, 9.0], [3.8, 9.0], [3.9, 9.0], [4.0, 9.0], [4.1, 9.0], [4.2, 9.0], [4.3, 9.0], [4.4, 9.0], [4.5, 9.0], [4.6, 10.0], [4.7, 10.0], [4.8, 10.0], [4.9, 10.0], [5.0, 10.0], [5.1, 10.0], [5.2, 10.0], [5.3, 10.0], [5.4, 10.0], [5.5, 10.0], [5.6, 10.0], [5.7, 10.0], [5.8, 10.0], [5.9, 10.0], [6.0, 10.0], [6.1, 10.0], [6.2, 10.0], [6.3, 10.0], [6.4, 10.0], [6.5, 10.0], [6.6, 10.0], [6.7, 10.0], [6.8, 10.0], [6.9, 10.0], [7.0, 10.0], [7.1, 10.0], [7.2, 10.0], [7.3, 10.0], [7.4, 10.0], [7.5, 10.0], [7.6, 10.0], [7.7, 10.0], [7.8, 10.0], [7.9, 10.0], [8.0, 10.0], [8.1, 10.0], [8.2, 10.0], [8.3, 10.0], [8.4, 10.0], [8.5, 10.0], [8.6, 10.0], [8.7, 10.0], [8.8, 10.0], [8.9, 10.0], [9.0, 10.0], [9.1, 10.0], [9.2, 10.0], [9.3, 10.0], [9.4, 10.0], [9.5, 10.0], [9.6, 10.0], [9.7, 10.0], [9.8, 10.0], [9.9, 10.0], [10.0, 10.0], [10.1, 10.0], [10.2, 10.0], [10.3, 10.0], [10.4, 10.0], [10.5, 10.0], [10.6, 10.0], [10.7, 10.0], [10.8, 10.0], [10.9, 10.0], [11.0, 10.0], [11.1, 10.0], [11.2, 10.0], [11.3, 10.0], [11.4, 10.0], [11.5, 10.0], [11.6, 10.0], [11.7, 10.0], [11.8, 10.0], [11.9, 10.0], [12.0, 10.0], [12.1, 10.0], [12.2, 10.0], [12.3, 10.0], [12.4, 10.0], [12.5, 10.0], [12.6, 10.0], [12.7, 10.0], [12.8, 10.0], [12.9, 10.0], [13.0, 10.0], [13.1, 10.0], [13.2, 10.0], [13.3, 10.0], [13.4, 10.0], [13.5, 10.0], [13.6, 10.0], [13.7, 10.0], [13.8, 10.0], [13.9, 10.0], [14.0, 10.0], [14.1, 10.0], [14.2, 10.0], [14.3, 10.0], [14.4, 10.0], [14.5, 10.0], [14.6, 10.0], [14.7, 10.0], [14.8, 10.0], [14.9, 10.0], [15.0, 10.0], [15.1, 10.0], [15.2, 10.0], [15.3, 10.0], [15.4, 10.0], [15.5, 10.0], [15.6, 10.0], [15.7, 10.0], [15.8, 10.0], [15.9, 10.0], [16.0, 10.0], [16.1, 10.0], [16.2, 10.0], [16.3, 10.0], [16.4, 10.0], [16.5, 10.0], [16.6, 10.0], [16.7, 10.0], [16.8, 10.0], [16.9, 10.0], [17.0, 10.0], [17.1, 10.0], [17.2, 10.0], [17.3, 10.0], [17.4, 10.0], [17.5, 10.0], [17.6, 10.0], [17.7, 10.0], [17.8, 10.0], [17.9, 10.0], [18.0, 10.0], [18.1, 10.0], [18.2, 10.0], [18.3, 10.0], [18.4, 10.0], [18.5, 10.0], [18.6, 10.0], [18.7, 10.0], [18.8, 10.0], [18.9, 10.0], [19.0, 10.0], [19.1, 10.0], [19.2, 10.0], [19.3, 10.0], [19.4, 10.0], [19.5, 10.0], [19.6, 10.0], [19.7, 10.0], [19.8, 10.0], [19.9, 10.0], [20.0, 10.0], [20.1, 10.0], [20.2, 10.0], [20.3, 10.0], [20.4, 10.0], [20.5, 10.0], [20.6, 10.0], [20.7, 10.0], [20.8, 10.0], [20.9, 10.0], [21.0, 10.0], [21.1, 10.0], [21.2, 10.0], [21.3, 10.0], [21.4, 10.0], [21.5, 10.0], [21.6, 10.0], [21.7, 10.0], [21.8, 10.0], [21.9, 10.0], [22.0, 10.0], [22.1, 10.0], [22.2, 10.0], [22.3, 10.0], [22.4, 10.0], [22.5, 10.0], [22.6, 10.0], [22.7, 10.0], [22.8, 10.0], [22.9, 10.0], [23.0, 10.0], [23.1, 10.0], [23.2, 10.0], [23.3, 10.0], [23.4, 10.0], [23.5, 10.0], [23.6, 10.0], [23.7, 10.0], [23.8, 10.0], [23.9, 10.0], [24.0, 10.0], [24.1, 10.0], [24.2, 10.0], [24.3, 10.0], [24.4, 10.0], [24.5, 10.0], [24.6, 10.0], [24.7, 10.0], [24.8, 10.0], [24.9, 10.0], [25.0, 10.0], [25.1, 10.0], [25.2, 10.0], [25.3, 10.0], [25.4, 10.0], [25.5, 10.0], [25.6, 10.0], [25.7, 10.0], [25.8, 10.0], [25.9, 10.0], [26.0, 10.0], [26.1, 10.0], [26.2, 10.0], [26.3, 10.0], [26.4, 10.0], [26.5, 10.0], [26.6, 10.0], [26.7, 10.0], [26.8, 10.0], [26.9, 10.0], [27.0, 10.0], [27.1, 10.0], [27.2, 10.0], [27.3, 10.0], [27.4, 10.0], [27.5, 10.0], [27.6, 10.0], [27.7, 10.0], [27.8, 10.0], [27.9, 10.0], [28.0, 10.0], [28.1, 10.0], [28.2, 10.0], [28.3, 10.0], [28.4, 10.0], [28.5, 10.0], [28.6, 10.0], [28.7, 10.0], [28.8, 10.0], [28.9, 10.0], [29.0, 10.0], [29.1, 10.0], [29.2, 10.0], [29.3, 10.0], [29.4, 10.0], [29.5, 10.0], [29.6, 10.0], [29.7, 10.0], [29.8, 10.0], [29.9, 10.0], [30.0, 10.0], [30.1, 10.0], [30.2, 10.0], [30.3, 10.0], [30.4, 10.0], [30.5, 10.0], [30.6, 10.0], [30.7, 10.0], [30.8, 10.0], [30.9, 10.0], [31.0, 10.0], [31.1, 10.0], [31.2, 10.0], [31.3, 10.0], [31.4, 10.0], [31.5, 10.0], [31.6, 10.0], [31.7, 10.0], [31.8, 10.0], [31.9, 10.0], [32.0, 10.0], [32.1, 10.0], [32.2, 10.0], [32.3, 10.0], [32.4, 10.0], [32.5, 10.0], [32.6, 10.0], [32.7, 10.0], [32.8, 10.0], [32.9, 10.0], [33.0, 10.0], [33.1, 10.0], [33.2, 10.0], [33.3, 10.0], [33.4, 10.0], [33.5, 10.0], [33.6, 10.0], [33.7, 10.0], [33.8, 10.0], [33.9, 10.0], [34.0, 10.0], [34.1, 10.0], [34.2, 10.0], [34.3, 10.0], [34.4, 10.0], [34.5, 10.0], [34.6, 10.0], [34.7, 10.0], [34.8, 10.0], [34.9, 10.0], [35.0, 10.0], [35.1, 10.0], [35.2, 10.0], [35.3, 10.0], [35.4, 10.0], [35.5, 10.0], [35.6, 10.0], [35.7, 10.0], [35.8, 10.0], [35.9, 10.0], [36.0, 10.0], [36.1, 10.0], [36.2, 10.0], [36.3, 10.0], [36.4, 10.0], [36.5, 10.0], [36.6, 10.0], [36.7, 10.0], [36.8, 10.0], [36.9, 10.0], [37.0, 10.0], [37.1, 10.0], [37.2, 10.0], [37.3, 10.0], [37.4, 10.0], [37.5, 10.0], [37.6, 10.0], [37.7, 10.0], [37.8, 10.0], [37.9, 10.0], [38.0, 10.0], [38.1, 10.0], [38.2, 10.0], [38.3, 10.0], [38.4, 10.0], [38.5, 10.0], [38.6, 10.0], [38.7, 10.0], [38.8, 10.0], [38.9, 10.0], [39.0, 10.0], [39.1, 10.0], [39.2, 10.0], [39.3, 10.0], [39.4, 10.0], [39.5, 10.0], [39.6, 10.0], [39.7, 10.0], [39.8, 10.0], [39.9, 10.0], [40.0, 10.0], [40.1, 10.0], [40.2, 10.0], [40.3, 10.0], [40.4, 10.0], [40.5, 10.0], [40.6, 10.0], [40.7, 10.0], [40.8, 10.0], [40.9, 10.0], [41.0, 10.0], [41.1, 10.0], [41.2, 10.0], [41.3, 10.0], [41.4, 10.0], [41.5, 10.0], [41.6, 10.0], [41.7, 10.0], [41.8, 10.0], [41.9, 10.0], [42.0, 10.0], [42.1, 10.0], [42.2, 10.0], [42.3, 10.0], [42.4, 10.0], [42.5, 10.0], [42.6, 10.0], [42.7, 10.0], [42.8, 10.0], [42.9, 10.0], [43.0, 10.0], [43.1, 10.0], [43.2, 10.0], [43.3, 10.0], [43.4, 10.0], [43.5, 10.0], [43.6, 10.0], [43.7, 10.0], [43.8, 10.0], [43.9, 10.0], [44.0, 10.0], [44.1, 10.0], [44.2, 10.0], [44.3, 10.0], [44.4, 10.0], [44.5, 10.0], [44.6, 10.0], [44.7, 10.0], [44.8, 10.0], [44.9, 10.0], [45.0, 10.0], [45.1, 10.0], [45.2, 10.0], [45.3, 10.0], [45.4, 10.0], [45.5, 10.0], [45.6, 10.0], [45.7, 10.0], [45.8, 10.0], [45.9, 10.0], [46.0, 10.0], [46.1, 10.0], [46.2, 10.0], [46.3, 10.0], [46.4, 10.0], [46.5, 10.0], [46.6, 10.0], [46.7, 10.0], [46.8, 10.0], [46.9, 10.0], [47.0, 10.0], [47.1, 10.0], [47.2, 10.0], [47.3, 10.0], [47.4, 10.0], [47.5, 10.0], [47.6, 10.0], [47.7, 10.0], [47.8, 10.0], [47.9, 10.0], [48.0, 10.0], [48.1, 10.0], [48.2, 10.0], [48.3, 10.0], [48.4, 10.0], [48.5, 10.0], [48.6, 10.0], [48.7, 10.0], [48.8, 10.0], [48.9, 10.0], [49.0, 10.0], [49.1, 10.0], [49.2, 10.0], [49.3, 10.0], [49.4, 10.0], [49.5, 10.0], [49.6, 10.0], [49.7, 10.0], [49.8, 10.0], [49.9, 10.0], [50.0, 10.0], [50.1, 10.0], [50.2, 10.0], [50.3, 10.0], [50.4, 10.0], [50.5, 10.0], [50.6, 10.0], [50.7, 10.0], [50.8, 10.0], [50.9, 10.0], [51.0, 10.0], [51.1, 10.0], [51.2, 10.0], [51.3, 10.0], [51.4, 10.0], [51.5, 10.0], [51.6, 10.0], [51.7, 10.0], [51.8, 10.0], [51.9, 10.0], [52.0, 10.0], [52.1, 10.0], [52.2, 10.0], [52.3, 10.0], [52.4, 10.0], [52.5, 10.0], [52.6, 10.0], [52.7, 10.0], [52.8, 10.0], [52.9, 10.0], [53.0, 10.0], [53.1, 10.0], [53.2, 10.0], [53.3, 10.0], [53.4, 10.0], [53.5, 10.0], [53.6, 10.0], [53.7, 10.0], [53.8, 10.0], [53.9, 10.0], [54.0, 10.0], [54.1, 10.0], [54.2, 10.0], [54.3, 10.0], [54.4, 10.0], [54.5, 10.0], [54.6, 10.0], [54.7, 10.0], [54.8, 10.0], [54.9, 10.0], [55.0, 10.0], [55.1, 10.0], [55.2, 10.0], [55.3, 10.0], [55.4, 10.0], [55.5, 10.0], [55.6, 10.0], [55.7, 10.0], [55.8, 10.0], [55.9, 10.0], [56.0, 10.0], [56.1, 10.0], [56.2, 10.0], [56.3, 10.0], [56.4, 10.0], [56.5, 10.0], [56.6, 10.0], [56.7, 10.0], [56.8, 10.0], [56.9, 10.0], [57.0, 10.0], [57.1, 10.0], [57.2, 10.0], [57.3, 10.0], [57.4, 10.0], [57.5, 10.0], [57.6, 10.0], [57.7, 10.0], [57.8, 10.0], [57.9, 10.0], [58.0, 10.0], [58.1, 10.0], [58.2, 10.0], [58.3, 10.0], [58.4, 10.0], [58.5, 10.0], [58.6, 10.0], [58.7, 10.0], [58.8, 10.0], [58.9, 10.0], [59.0, 10.0], [59.1, 10.0], [59.2, 10.0], [59.3, 10.0], [59.4, 10.0], [59.5, 10.0], [59.6, 10.0], [59.7, 10.0], [59.8, 10.0], [59.9, 10.0], [60.0, 10.0], [60.1, 10.0], [60.2, 10.0], [60.3, 10.0], [60.4, 10.0], [60.5, 10.0], [60.6, 10.0], [60.7, 10.0], [60.8, 10.0], [60.9, 10.0], [61.0, 10.0], [61.1, 10.0], [61.2, 10.0], [61.3, 10.0], [61.4, 10.0], [61.5, 10.0], [61.6, 10.0], [61.7, 10.0], [61.8, 10.0], [61.9, 10.0], [62.0, 10.0], [62.1, 10.0], [62.2, 10.0], [62.3, 10.0], [62.4, 10.0], [62.5, 10.0], [62.6, 10.0], [62.7, 10.0], [62.8, 10.0], [62.9, 10.0], [63.0, 10.0], [63.1, 10.0], [63.2, 10.0], [63.3, 10.0], [63.4, 10.0], [63.5, 10.0], [63.6, 10.0], [63.7, 10.0], [63.8, 10.0], [63.9, 10.0], [64.0, 10.0], [64.1, 10.0], [64.2, 10.0], [64.3, 10.0], [64.4, 10.0], [64.5, 10.0], [64.6, 10.0], [64.7, 10.0], [64.8, 10.0], [64.9, 10.0], [65.0, 10.0], [65.1, 10.0], [65.2, 10.0], [65.3, 10.0], [65.4, 10.0], [65.5, 10.0], [65.6, 10.0], [65.7, 10.0], [65.8, 10.0], [65.9, 10.0], [66.0, 10.0], [66.1, 10.0], [66.2, 10.0], [66.3, 10.0], [66.4, 10.0], [66.5, 10.0], [66.6, 10.0], [66.7, 10.0], [66.8, 10.0], [66.9, 10.0], [67.0, 10.0], [67.1, 10.0], [67.2, 10.0], [67.3, 10.0], [67.4, 10.0], [67.5, 10.0], [67.6, 10.0], [67.7, 11.0], [67.8, 11.0], [67.9, 11.0], [68.0, 11.0], [68.1, 11.0], [68.2, 11.0], [68.3, 11.0], [68.4, 11.0], [68.5, 11.0], [68.6, 11.0], [68.7, 11.0], [68.8, 11.0], [68.9, 11.0], [69.0, 11.0], [69.1, 11.0], [69.2, 11.0], [69.3, 11.0], [69.4, 11.0], [69.5, 11.0], [69.6, 11.0], [69.7, 11.0], [69.8, 11.0], [69.9, 11.0], [70.0, 11.0], [70.1, 11.0], [70.2, 11.0], [70.3, 11.0], [70.4, 11.0], [70.5, 11.0], [70.6, 11.0], [70.7, 11.0], [70.8, 11.0], [70.9, 11.0], [71.0, 11.0], [71.1, 11.0], [71.2, 11.0], [71.3, 11.0], [71.4, 11.0], [71.5, 11.0], [71.6, 11.0], [71.7, 11.0], [71.8, 11.0], [71.9, 11.0], [72.0, 11.0], [72.1, 11.0], [72.2, 11.0], [72.3, 11.0], [72.4, 11.0], [72.5, 11.0], [72.6, 11.0], [72.7, 11.0], [72.8, 11.0], [72.9, 11.0], [73.0, 11.0], [73.1, 11.0], [73.2, 11.0], [73.3, 11.0], [73.4, 11.0], [73.5, 11.0], [73.6, 11.0], [73.7, 11.0], [73.8, 11.0], [73.9, 11.0], [74.0, 11.0], [74.1, 11.0], [74.2, 11.0], [74.3, 11.0], [74.4, 11.0], [74.5, 11.0], [74.6, 11.0], [74.7, 11.0], [74.8, 11.0], [74.9, 11.0], [75.0, 11.0], [75.1, 11.0], [75.2, 11.0], [75.3, 11.0], [75.4, 11.0], [75.5, 11.0], [75.6, 11.0], [75.7, 11.0], [75.8, 11.0], [75.9, 11.0], [76.0, 11.0], [76.1, 11.0], [76.2, 11.0], [76.3, 11.0], [76.4, 11.0], [76.5, 11.0], [76.6, 11.0], [76.7, 11.0], [76.8, 11.0], [76.9, 11.0], [77.0, 11.0], [77.1, 11.0], [77.2, 11.0], [77.3, 11.0], [77.4, 11.0], [77.5, 11.0], [77.6, 11.0], [77.7, 11.0], [77.8, 11.0], [77.9, 11.0], [78.0, 11.0], [78.1, 11.0], [78.2, 11.0], [78.3, 11.0], [78.4, 11.0], [78.5, 11.0], [78.6, 11.0], [78.7, 11.0], [78.8, 11.0], [78.9, 11.0], [79.0, 11.0], [79.1, 11.0], [79.2, 11.0], [79.3, 11.0], [79.4, 11.0], [79.5, 11.0], [79.6, 11.0], [79.7, 11.0], [79.8, 11.0], [79.9, 11.0], [80.0, 11.0], [80.1, 11.0], [80.2, 11.0], [80.3, 11.0], [80.4, 11.0], [80.5, 11.0], [80.6, 11.0], [80.7, 11.0], [80.8, 11.0], [80.9, 11.0], [81.0, 11.0], [81.1, 11.0], [81.2, 11.0], [81.3, 11.0], [81.4, 11.0], [81.5, 11.0], [81.6, 11.0], [81.7, 11.0], [81.8, 11.0], [81.9, 11.0], [82.0, 11.0], [82.1, 11.0], [82.2, 11.0], [82.3, 11.0], [82.4, 11.0], [82.5, 11.0], [82.6, 11.0], [82.7, 11.0], [82.8, 11.0], [82.9, 11.0], [83.0, 11.0], [83.1, 11.0], [83.2, 11.0], [83.3, 11.0], [83.4, 11.0], [83.5, 11.0], [83.6, 11.0], [83.7, 11.0], [83.8, 11.0], [83.9, 11.0], [84.0, 11.0], [84.1, 11.0], [84.2, 11.0], [84.3, 11.0], [84.4, 11.0], [84.5, 11.0], [84.6, 11.0], [84.7, 11.0], [84.8, 11.0], [84.9, 11.0], [85.0, 11.0], [85.1, 11.0], [85.2, 11.0], [85.3, 11.0], [85.4, 11.0], [85.5, 11.0], [85.6, 11.0], [85.7, 11.0], [85.8, 11.0], [85.9, 11.0], [86.0, 11.0], [86.1, 11.0], [86.2, 11.0], [86.3, 11.0], [86.4, 11.0], [86.5, 11.0], [86.6, 11.0], [86.7, 11.0], [86.8, 11.0], [86.9, 11.0], [87.0, 11.0], [87.1, 11.0], [87.2, 11.0], [87.3, 11.0], [87.4, 11.0], [87.5, 11.0], [87.6, 11.0], [87.7, 11.0], [87.8, 11.0], [87.9, 11.0], [88.0, 11.0], [88.1, 11.0], [88.2, 11.0], [88.3, 11.0], [88.4, 11.0], [88.5, 11.0], [88.6, 11.0], [88.7, 11.0], [88.8, 11.0], [88.9, 11.0], [89.0, 11.0], [89.1, 11.0], [89.2, 11.0], [89.3, 11.0], [89.4, 11.0], [89.5, 11.0], [89.6, 12.0], [89.7, 12.0], [89.8, 12.0], [89.9, 12.0], [90.0, 12.0], [90.1, 12.0], [90.2, 12.0], [90.3, 12.0], [90.4, 12.0], [90.5, 12.0], [90.6, 12.0], [90.7, 12.0], [90.8, 12.0], [90.9, 12.0], [91.0, 12.0], [91.1, 12.0], [91.2, 12.0], [91.3, 12.0], [91.4, 12.0], [91.5, 12.0], [91.6, 12.0], [91.7, 12.0], [91.8, 12.0], [91.9, 12.0], [92.0, 12.0], [92.1, 12.0], [92.2, 12.0], [92.3, 12.0], [92.4, 12.0], [92.5, 12.0], [92.6, 12.0], [92.7, 12.0], [92.8, 12.0], [92.9, 12.0], [93.0, 12.0], [93.1, 12.0], [93.2, 12.0], [93.3, 12.0], [93.4, 12.0], [93.5, 12.0], [93.6, 12.0], [93.7, 12.0], [93.8, 12.0], [93.9, 12.0], [94.0, 12.0], [94.1, 12.0], [94.2, 12.0], [94.3, 12.0], [94.4, 12.0], [94.5, 12.0], [94.6, 12.0], [94.7, 12.0], [94.8, 12.0], [94.9, 12.0], [95.0, 12.0], [95.1, 12.0], [95.2, 12.0], [95.3, 12.0], [95.4, 12.0], [95.5, 12.0], [95.6, 12.0], [95.7, 12.0], [95.8, 12.0], [95.9, 12.0], [96.0, 12.0], [96.1, 12.0], [96.2, 12.0], [96.3, 12.0], [96.4, 12.0], [96.5, 12.0], [96.6, 12.0], [96.7, 12.0], [96.8, 12.0], [96.9, 12.0], [97.0, 12.0], [97.1, 12.0], [97.2, 12.0], [97.3, 13.0], [97.4, 13.0], [97.5, 13.0], [97.6, 13.0], [97.7, 13.0], [97.8, 13.0], [97.9, 13.0], [98.0, 13.0], [98.1, 13.0], [98.2, 13.0], [98.3, 13.0], [98.4, 13.0], [98.5, 13.0], [98.6, 13.0], [98.7, 13.0], [98.8, 13.0], [98.9, 13.0], [99.0, 13.0], [99.1, 13.0], [99.2, 13.0], [99.3, 13.0], [99.4, 14.0], [99.5, 14.0], [99.6, 14.0], [99.7, 15.0], [99.8, 16.0], [99.9, 18.0]], "isOverall": false, "label": "Products", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 2.0, "minX": 0.0, "maxY": 15998.0, "series": [{"data": [[0.0, 15998.0], [100.0, 2.0]], "isOverall": false, "label": "Products", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 16000.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 16000.0, "series": [{"data": [[0.0, 16000.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 4.9E-324, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.73167138E12, "maxY": 2.583333333333333, "series": [{"data": [[1.73167155E12, 1.0], [1.731671509E12, 1.0], [1.731671419E12, 1.0], [1.731671591E12, 1.0], [1.73167146E12, 1.0], [1.731671673E12, 1.0], [1.731671632E12, 1.0], [1.731671542E12, 1.0], [1.731671501E12, 1.0], [1.731671411E12, 1.0], [1.731671583E12, 1.0], [1.731671452E12, 1.0], [1.731671665E12, 1.0], [1.731671624E12, 1.0], [1.731671534E12, 1.0], [1.731671493E12, 1.0], [1.731671403E12, 1.0], [1.731671575E12, 1.0], [1.731671444E12, 1.0], [1.731671657E12, 1.0], [1.731671616E12, 1.0], [1.731671526E12, 1.0], [1.731671485E12, 1.0], [1.731671395E12, 1.0], [1.731671567E12, 1.0], [1.731671436E12, 1.0], [1.731671649E12, 1.0], [1.731671608E12, 1.0], [1.731671518E12, 1.0], [1.731671477E12, 1.0], [1.731671387E12, 1.0], [1.731671559E12, 1.0], [1.731671428E12, 1.0], [1.731671641E12, 1.0], [1.7316716E12, 1.0], [1.73167151E12, 1.0], [1.731671469E12, 1.0], [1.731671551E12, 1.0], [1.73167142E12, 1.0], [1.731671633E12, 1.0], [1.731671592E12, 1.0], [1.731671502E12, 1.0], [1.731671674E12, 1.0], [1.731671461E12, 1.0], [1.731671543E12, 1.0], [1.731671412E12, 1.0], [1.731671625E12, 1.0], [1.731671584E12, 1.0], [1.731671494E12, 1.0], [1.731671666E12, 1.0], [1.731671453E12, 1.0], [1.731671535E12, 1.0], [1.731671404E12, 1.0], [1.731671617E12, 1.0], [1.731671576E12, 1.0], [1.731671486E12, 1.0], [1.731671658E12, 1.0], [1.731671445E12, 1.0], [1.731671527E12, 1.0], [1.731671396E12, 1.0], [1.731671609E12, 1.0], [1.731671568E12, 1.0], [1.731671478E12, 1.0], [1.73167165E12, 1.0], [1.731671437E12, 1.0], [1.731671519E12, 1.0], [1.731671388E12, 1.0], [1.731671601E12, 1.0], [1.73167156E12, 1.0], [1.73167147E12, 1.0], [1.731671642E12, 1.0], [1.731671429E12, 1.0], [1.731671511E12, 1.0], [1.731671507E12, 1.0], [1.731671466E12, 1.0], [1.731671679E12, 1.0], [1.731671548E12, 1.0], [1.73167163E12, 1.0], [1.731671417E12, 1.0], [1.731671589E12, 1.0], [1.731671499E12, 1.0], [1.731671458E12, 1.0], [1.731671671E12, 1.0], [1.73167154E12, 1.0], [1.731671622E12, 1.0], [1.731671409E12, 1.0], [1.731671581E12, 1.0], [1.731671491E12, 1.0], [1.73167145E12, 1.0], [1.731671663E12, 1.0], [1.731671532E12, 1.0], [1.731671614E12, 1.0], [1.731671401E12, 1.0], [1.731671573E12, 1.0], [1.731671483E12, 1.0], [1.731671442E12, 1.0], [1.731671655E12, 1.0], [1.731671524E12, 1.0], [1.731671606E12, 1.0], [1.731671393E12, 1.0], [1.731671565E12, 1.0], [1.731671475E12, 1.0], [1.731671434E12, 1.0], [1.731671647E12, 1.0], [1.731671516E12, 1.0], [1.731671598E12, 1.0], [1.731671385E12, 1.0], [1.731671557E12, 1.0], [1.731671467E12, 1.0], [1.731671426E12, 1.0], [1.731671639E12, 1.0], [1.731671508E12, 1.0], [1.73167168E12, 1.0], [1.73167159E12, 1.0], [1.731671549E12, 1.0], [1.731671459E12, 1.0], [1.731671418E12, 1.0], [1.731671631E12, 1.0], [1.7316715E12, 1.0], [1.731671672E12, 1.0], [1.731671582E12, 1.0], [1.731671541E12, 1.0], [1.731671451E12, 1.0], [1.73167141E12, 1.0], [1.731671623E12, 1.0], [1.731671492E12, 1.0], [1.731671664E12, 1.0], [1.731671574E12, 1.0], [1.731671533E12, 1.0], [1.731671443E12, 1.0], [1.731671402E12, 1.0], [1.731671615E12, 1.0], [1.731671484E12, 1.0], [1.731671656E12, 1.0], [1.731671566E12, 1.0], [1.731671525E12, 1.0], [1.731671435E12, 1.0], [1.731671394E12, 1.0], [1.731671607E12, 1.0], [1.731671476E12, 1.0], [1.731671648E12, 1.0], [1.731671558E12, 1.0], [1.731671517E12, 1.0], [1.731671427E12, 1.0], [1.731671386E12, 1.0], [1.731671599E12, 1.0], [1.731671468E12, 1.0], [1.73167164E12, 1.0], [1.731671636E12, 1.0], [1.731671423E12, 1.0], [1.731671505E12, 1.0], [1.731671464E12, 1.0], [1.731671677E12, 1.0], [1.731671587E12, 1.0], [1.731671546E12, 1.0], [1.731671628E12, 1.0], [1.731671415E12, 1.0], [1.731671497E12, 1.0], [1.731671456E12, 1.0], [1.731671669E12, 1.0], [1.731671579E12, 1.0], [1.731671538E12, 1.0], [1.73167162E12, 1.0], [1.731671407E12, 1.0], [1.731671489E12, 1.0], [1.731671448E12, 1.0], [1.731671661E12, 1.0], [1.731671571E12, 1.0], [1.73167153E12, 1.0], [1.731671612E12, 1.0], [1.731671399E12, 1.0], [1.731671481E12, 1.0], [1.73167144E12, 1.0], [1.731671653E12, 1.0], [1.731671563E12, 1.0], [1.731671522E12, 1.0], [1.731671604E12, 1.0], [1.731671391E12, 1.0], [1.731671473E12, 1.0], [1.731671432E12, 1.0], [1.731671645E12, 1.0], [1.731671555E12, 1.0], [1.731671514E12, 1.0], [1.731671596E12, 1.0], [1.731671383E12, 1.0], [1.731671678E12, 1.0], [1.731671465E12, 1.0], [1.731671424E12, 1.0], [1.731671637E12, 1.0], [1.731671547E12, 1.0], [1.731671506E12, 1.0], [1.731671588E12, 1.0], [1.73167167E12, 1.0], [1.731671457E12, 1.0], [1.731671416E12, 1.0], [1.731671629E12, 1.0], [1.731671539E12, 1.0], [1.731671498E12, 1.0], [1.73167158E12, 1.0], [1.731671662E12, 1.0], [1.731671449E12, 1.0], [1.731671408E12, 1.0], [1.731671621E12, 1.0], [1.731671531E12, 1.0], [1.73167149E12, 1.0], [1.731671572E12, 1.0], [1.731671654E12, 1.0], [1.731671441E12, 1.0], [1.7316714E12, 1.0], [1.731671613E12, 1.0], [1.731671523E12, 1.0], [1.731671482E12, 1.0], [1.731671564E12, 1.0], [1.731671646E12, 1.0], [1.731671433E12, 1.0], [1.731671392E12, 1.0], [1.731671605E12, 1.0], [1.731671515E12, 1.0], [1.731671474E12, 1.0], [1.731671556E12, 1.0], [1.731671638E12, 1.0], [1.731671425E12, 1.0], [1.731671384E12, 1.0], [1.731671597E12, 1.0], [1.73167138E12, 2.583333333333333], [1.731671593E12, 1.0], [1.731671552E12, 1.0], [1.731671462E12, 1.0], [1.731671675E12, 1.0], [1.731671634E12, 1.0], [1.731671421E12, 1.0], [1.731671503E12, 1.0], [1.731671585E12, 1.0], [1.731671544E12, 1.0], [1.731671454E12, 1.0], [1.731671667E12, 1.0], [1.731671626E12, 1.0], [1.731671413E12, 1.0], [1.731671495E12, 1.0], [1.731671577E12, 1.0], [1.731671536E12, 1.0], [1.731671446E12, 1.0], [1.731671659E12, 1.0], [1.731671618E12, 1.0], [1.731671405E12, 1.0], [1.731671487E12, 1.0], [1.731671569E12, 1.0], [1.731671528E12, 1.0], [1.731671438E12, 1.0], [1.731671651E12, 1.0], [1.73167161E12, 1.0], [1.731671397E12, 1.0], [1.731671479E12, 1.0], [1.731671561E12, 1.0], [1.73167152E12, 1.0], [1.73167143E12, 1.0], [1.731671643E12, 1.0], [1.731671602E12, 1.0], [1.731671389E12, 1.0], [1.731671471E12, 1.0], [1.731671553E12, 1.0], [1.731671512E12, 1.0], [1.731671422E12, 1.0], [1.731671635E12, 1.0], [1.731671594E12, 1.0], [1.731671381E12, 1.0], [1.731671676E12, 1.0], [1.731671463E12, 1.0], [1.731671545E12, 1.0], [1.731671504E12, 1.0], [1.731671414E12, 1.0], [1.731671627E12, 1.0], [1.731671586E12, 1.0], [1.731671668E12, 1.0], [1.731671455E12, 1.0], [1.731671537E12, 1.0], [1.731671496E12, 1.0], [1.731671406E12, 1.0], [1.731671619E12, 1.0], [1.731671578E12, 1.0], [1.73167166E12, 1.0], [1.731671447E12, 1.0], [1.731671529E12, 1.0], [1.731671488E12, 1.0], [1.731671398E12, 1.0], [1.731671611E12, 1.0], [1.73167157E12, 1.0], [1.731671652E12, 1.0], [1.731671439E12, 1.0], [1.731671521E12, 1.0], [1.73167148E12, 1.0], [1.73167139E12, 1.0], [1.731671603E12, 1.0], [1.731671562E12, 1.0], [1.731671644E12, 1.0], [1.731671431E12, 1.0], [1.731671513E12, 1.0], [1.731671472E12, 1.0], [1.731671382E12, 1.0], [1.731671595E12, 1.0], [1.731671554E12, 1.0]], "isOverall": false, "label": "线程组", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.73167168E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 10.411709455228605, "minX": 1.0, "maxY": 124.33333333333334, "series": [{"data": [[2.0, 124.33333333333334], [1.0, 10.411709455228605], [3.0, 14.185185185185185]], "isOverall": false, "label": "Products", "isController": false}, {"data": [[1.0035625000000028, 10.439437500000047]], "isOverall": false, "label": "Products-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 8937.0, "minX": 1.73167138E12, "maxY": 129124.0, "series": [{"data": [[1.73167155E12, 103456.0], [1.731671509E12, 113992.0], [1.731671419E12, 128554.0], [1.731671591E12, 101855.0], [1.73167146E12, 101048.0], [1.731671673E12, 121872.0], [1.731671632E12, 114038.0], [1.731671542E12, 87945.0], [1.731671501E12, 90010.0], [1.731671411E12, 92278.0], [1.731671583E12, 93508.0], [1.731671452E12, 101843.0], [1.731671665E12, 90816.0], [1.731671624E12, 91137.0], [1.731671534E12, 103942.0], [1.731671493E12, 101632.0], [1.731671403E12, 100926.0], [1.731671575E12, 112437.0], [1.731671444E12, 100546.0], [1.731671657E12, 104484.0], [1.731671616E12, 104461.0], [1.731671526E12, 97937.0], [1.731671485E12, 117330.0], [1.731671395E12, 91470.0], [1.731671567E12, 83956.0], [1.731671436E12, 101273.0], [1.731671649E12, 94027.0], [1.731671608E12, 86290.0], [1.731671518E12, 103827.0], [1.731671477E12, 95325.0], [1.731671387E12, 103970.0], [1.731671559E12, 102099.0], [1.731671428E12, 123434.0], [1.731671641E12, 110674.0], [1.7316716E12, 105803.0], [1.73167151E12, 98357.0], [1.731671469E12, 100616.0], [1.731671551E12, 114711.0], [1.73167142E12, 85822.0], [1.731671633E12, 79912.0], [1.731671592E12, 95844.0], [1.731671502E12, 103354.0], [1.731671674E12, 87145.0], [1.731671461E12, 92696.0], [1.731671543E12, 98850.0], [1.731671412E12, 105511.0], [1.731671625E12, 103612.0], [1.731671584E12, 107149.0], [1.731671494E12, 122893.0], [1.731671666E12, 103023.0], [1.731671453E12, 110738.0], [1.731671535E12, 95858.0], [1.731671404E12, 95929.0], [1.731671617E12, 112265.0], [1.731671576E12, 96595.0], [1.731671486E12, 86960.0], [1.731671658E12, 92239.0], [1.731671445E12, 90802.0], [1.731671527E12, 95654.0], [1.731671396E12, 109324.0], [1.731671609E12, 101544.0], [1.731671568E12, 104677.0], [1.731671478E12, 103281.0], [1.73167165E12, 114884.0], [1.731671437E12, 104339.0], [1.731671519E12, 113532.0], [1.731671388E12, 92209.0], [1.731671601E12, 93821.0], [1.73167156E12, 123436.0], [1.73167147E12, 93981.0], [1.731671642E12, 93372.0], [1.731671429E12, 89800.0], [1.731671511E12, 92849.0], [1.731671507E12, 102550.0], [1.731671466E12, 127055.0], [1.731671679E12, 110996.0], [1.731671548E12, 90634.0], [1.73167163E12, 91038.0], [1.731671417E12, 98420.0], [1.731671589E12, 86740.0], [1.731671499E12, 101116.0], [1.731671458E12, 90171.0], [1.731671671E12, 90031.0], [1.73167154E12, 101791.0], [1.731671622E12, 115424.0], [1.731671409E12, 126902.0], [1.731671581E12, 105812.0], [1.731671491E12, 99866.0], [1.73167145E12, 103594.0], [1.731671663E12, 104992.0], [1.731671532E12, 124577.0], [1.731671614E12, 88030.0], [1.731671401E12, 83040.0], [1.731671573E12, 100780.0], [1.731671483E12, 99649.0], [1.731671442E12, 89311.0], [1.731671655E12, 86415.0], [1.731671524E12, 91769.0], [1.731671606E12, 102702.0], [1.731671393E12, 103513.0], [1.731671565E12, 102845.0], [1.731671475E12, 125815.0], [1.731671434E12, 111732.0], [1.731671647E12, 107128.0], [1.731671516E12, 100926.0], [1.731671598E12, 118538.0], [1.731671385E12, 95648.0], [1.731671557E12, 96767.0], [1.731671467E12, 83020.0], [1.731671426E12, 91052.0], [1.731671639E12, 94008.0], [1.731671508E12, 89135.0], [1.73167168E12, 83647.0], [1.73167159E12, 99393.0], [1.731671549E12, 103658.0], [1.731671459E12, 106675.0], [1.731671418E12, 95879.0], [1.731671631E12, 106375.0], [1.7316715E12, 107300.0], [1.731671672E12, 103276.0], [1.731671582E12, 98688.0], [1.731671541E12, 123864.0], [1.731671451E12, 92925.0], [1.73167141E12, 90793.0], [1.731671623E12, 95495.0], [1.731671492E12, 90228.0], [1.731671664E12, 113155.0], [1.731671574E12, 92782.0], [1.731671533E12, 86810.0], [1.731671443E12, 112555.0], [1.731671402E12, 100657.0], [1.731671615E12, 104891.0], [1.731671484E12, 106393.0], [1.731671656E12, 100039.0], [1.731671566E12, 112750.0], [1.731671525E12, 107890.0], [1.731671435E12, 90890.0], [1.731671394E12, 106759.0], [1.731671607E12, 123692.0], [1.731671476E12, 90808.0], [1.731671648E12, 95009.0], [1.731671558E12, 90681.0], [1.731671517E12, 93251.0], [1.731671427E12, 99272.0], [1.731671386E12, 104911.0], [1.731671599E12, 85479.0], [1.731671468E12, 102803.0], [1.73167164E12, 98176.0], [1.731671636E12, 87095.0], [1.731671423E12, 95643.0], [1.731671505E12, 88342.0], [1.731671464E12, 96366.0], [1.731671677E12, 91989.0], [1.731671587E12, 101837.0], [1.731671546E12, 98373.0], [1.731671628E12, 106539.0], [1.731671415E12, 108533.0], [1.731671497E12, 103600.0], [1.731671456E12, 123767.0], [1.731671669E12, 115272.0], [1.731671579E12, 124029.0], [1.731671538E12, 106316.0], [1.73167162E12, 98975.0], [1.731671407E12, 84558.0], [1.731671489E12, 95213.0], [1.731671448E12, 87606.0], [1.731671661E12, 88461.0], [1.731671571E12, 90459.0], [1.73167153E12, 97861.0], [1.731671612E12, 102225.0], [1.731671399E12, 96198.0], [1.731671481E12, 112423.0], [1.73167144E12, 104289.0], [1.731671653E12, 106326.0], [1.731671563E12, 103308.0], [1.731671522E12, 128754.0], [1.731671604E12, 100035.0], [1.731671391E12, 118844.0], [1.731671473E12, 85304.0], [1.731671432E12, 98845.0], [1.731671645E12, 122525.0], [1.731671555E12, 89408.0], [1.731671514E12, 81008.0], [1.731671596E12, 101161.0], [1.731671383E12, 101651.0], [1.731671678E12, 104080.0], [1.731671465E12, 96610.0], [1.731671424E12, 111466.0], [1.731671637E12, 95819.0], [1.731671547E12, 110661.0], [1.731671506E12, 107112.0], [1.731671588E12, 129058.0], [1.73167167E12, 95501.0], [1.731671457E12, 92412.0], [1.731671416E12, 97161.0], [1.731671629E12, 99515.0], [1.731671539E12, 87129.0], [1.731671498E12, 94162.0], [1.73167158E12, 81808.0], [1.731671662E12, 104171.0], [1.731671449E12, 100428.0], [1.731671408E12, 100221.0], [1.731671621E12, 91278.0], [1.731671531E12, 98971.0], [1.73167149E12, 111791.0], [1.731671572E12, 106956.0], [1.731671654E12, 122593.0], [1.731671441E12, 103828.0], [1.7316714E12, 129124.0], [1.731671613E12, 107167.0], [1.731671523E12, 87059.0], [1.731671482E12, 90689.0], [1.731671564E12, 91946.0], [1.731671646E12, 84439.0], [1.731671433E12, 96296.0], [1.731671392E12, 90698.0], [1.731671605E12, 89113.0], [1.731671515E12, 104545.0], [1.731671474E12, 100717.0], [1.731671556E12, 115867.0], [1.731671638E12, 107890.0], [1.731671425E12, 101772.0], [1.731671384E12, 101005.0], [1.731671597E12, 104084.0], [1.73167138E12, 63940.0], [1.731671593E12, 95687.0], [1.731671552E12, 87561.0], [1.731671462E12, 109887.0], [1.731671675E12, 102849.0], [1.731671634E12, 106119.0], [1.731671421E12, 102652.0], [1.731671503E12, 109140.0], [1.731671585E12, 112057.0], [1.731671544E12, 105250.0], [1.731671454E12, 87875.0], [1.731671667E12, 97422.0], [1.731671626E12, 125478.0], [1.731671413E12, 99795.0], [1.731671495E12, 88802.0], [1.731671577E12, 95646.0], [1.731671536E12, 95829.0], [1.731671446E12, 100397.0], [1.731671659E12, 99323.0], [1.731671618E12, 90711.0], [1.731671405E12, 102253.0], [1.731671487E12, 103187.0], [1.731671569E12, 125320.0], [1.731671528E12, 110247.0], [1.731671438E12, 115403.0], [1.731671651E12, 103785.0], [1.73167161E12, 103317.0], [1.731671397E12, 98194.0], [1.731671479E12, 97564.0], [1.731671561E12, 86389.0], [1.73167152E12, 81262.0], [1.73167143E12, 96021.0], [1.731671643E12, 98221.0], [1.731671602E12, 97114.0], [1.731671389E12, 108888.0], [1.731671471E12, 104737.0], [1.731671553E12, 103023.0], [1.731671512E12, 101358.0], [1.731671422E12, 97325.0], [1.731671635E12, 124668.0], [1.731671594E12, 113763.0], [1.731671381E12, 119937.0], [1.731671676E12, 102514.0], [1.731671463E12, 99621.0], [1.731671545E12, 92825.0], [1.731671504E12, 107650.0], [1.731671414E12, 93646.0], [1.731671627E12, 82012.0], [1.731671586E12, 82354.0], [1.731671668E12, 95390.0], [1.731671455E12, 102311.0], [1.731671537E12, 109902.0], [1.731671496E12, 99631.0], [1.731671406E12, 113850.0], [1.731671619E12, 107112.0], [1.731671578E12, 100356.0], [1.73167166E12, 111100.0], [1.731671447E12, 123423.0], [1.731671529E12, 94628.0], [1.731671488E12, 98834.0], [1.731671398E12, 96296.0], [1.731671611E12, 93173.0], [1.73167157E12, 89475.0], [1.731671652E12, 85125.0], [1.731671439E12, 88320.0], [1.731671521E12, 103087.0], [1.73167148E12, 95295.0], [1.73167139E12, 101494.0], [1.731671603E12, 114286.0], [1.731671562E12, 102081.0], [1.731671644E12, 99753.0], [1.731671431E12, 102872.0], [1.731671513E12, 127268.0], [1.731671472E12, 112252.0], [1.731671382E12, 89071.0], [1.731671595E12, 89284.0], [1.731671554E12, 104526.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.73167155E12, 13621.0], [1.731671509E12, 13447.0], [1.731671419E12, 13885.0], [1.731671591E12, 13637.0], [1.73167146E12, 13420.0], [1.731671673E12, 13363.0], [1.731671632E12, 13664.0], [1.731671542E12, 12352.0], [1.731671501E12, 12893.0], [1.731671411E12, 12412.0], [1.731671583E12, 12315.0], [1.731671452E12, 12763.0], [1.731671665E12, 12492.0], [1.731671624E12, 12457.0], [1.731671534E12, 13555.0], [1.731671493E12, 13343.0], [1.731671403E12, 13902.0], [1.731671575E12, 13735.0], [1.731671444E12, 13757.0], [1.731671657E12, 13815.0], [1.731671616E12, 13540.0], [1.731671526E12, 13096.0], [1.731671485E12, 13477.0], [1.731671395E12, 12240.0], [1.731671567E12, 12724.0], [1.731671436E12, 12396.0], [1.731671649E12, 12288.0], [1.731671608E12, 11994.0], [1.731671518E12, 13071.0], [1.731671477E12, 12620.0], [1.731671387E12, 12943.0], [1.731671559E12, 13483.0], [1.731671428E12, 13688.0], [1.731671641E12, 13762.0], [1.7316716E12, 13799.0], [1.73167151E12, 13547.0], [1.731671469E12, 14085.0], [1.731671551E12, 13210.0], [1.73167142E12, 11954.0], [1.731671633E12, 12475.0], [1.731671592E12, 12867.0], [1.731671502E12, 12722.0], [1.731671674E12, 11944.0], [1.731671461E12, 12343.0], [1.731671543E12, 13215.0], [1.731671412E12, 13809.0], [1.731671625E12, 13728.0], [1.731671584E12, 13246.0], [1.731671494E12, 13554.0], [1.731671666E12, 13583.0], [1.731671453E12, 13430.0], [1.731671535E12, 13886.0], [1.731671404E12, 12827.0], [1.731671617E12, 12953.0], [1.731671576E12, 13046.0], [1.731671486E12, 11959.0], [1.731671658E12, 12437.0], [1.731671445E12, 12475.0], [1.731671527E12, 12659.0], [1.731671396E12, 13261.0], [1.731671609E12, 13510.0], [1.731671568E12, 12990.0], [1.731671478E12, 13881.0], [1.73167165E12, 13680.0], [1.731671437E12, 13625.0], [1.731671519E12, 13682.0], [1.731671388E12, 13188.0], [1.731671601E12, 13642.0], [1.73167156E12, 13628.0], [1.73167147E12, 12288.0], [1.731671642E12, 12795.0], [1.731671429E12, 12542.0], [1.731671511E12, 12448.0], [1.731671507E12, 13577.0], [1.731671466E12, 13987.0], [1.731671679E12, 13656.0], [1.731671548E12, 12926.0], [1.73167163E12, 12313.0], [1.731671417E12, 12306.0], [1.731671589E12, 12279.0], [1.731671499E12, 12835.0], [1.731671458E12, 12261.0], [1.731671671E12, 12415.0], [1.73167154E12, 13115.0], [1.731671622E12, 13682.0], [1.731671409E12, 13519.0], [1.731671581E12, 13528.0], [1.731671491E12, 13636.0], [1.73167145E12, 13857.0], [1.731671663E12, 13648.0], [1.731671532E12, 13409.0], [1.731671614E12, 12637.0], [1.731671401E12, 12166.0], [1.731671573E12, 13254.0], [1.731671483E12, 12333.0], [1.731671442E12, 12266.0], [1.731671655E12, 12117.0], [1.731671524E12, 12629.0], [1.731671606E12, 13581.0], [1.731671393E12, 13372.0], [1.731671565E12, 13025.0], [1.731671475E12, 13531.0], [1.731671434E12, 13684.0], [1.731671647E12, 13790.0], [1.731671516E12, 13902.0], [1.731671598E12, 13224.0], [1.731671385E12, 12916.0], [1.731671557E12, 13287.0], [1.731671467E12, 11897.0], [1.731671426E12, 12932.0], [1.731671639E12, 12599.0], [1.731671508E12, 12280.0], [1.73167168E12, 12453.0], [1.73167159E12, 13099.0], [1.731671549E12, 12622.0], [1.731671459E12, 13831.0], [1.731671418E12, 13331.0], [1.731671631E12, 13302.0], [1.7316715E12, 13665.0], [1.731671672E12, 13796.0], [1.731671582E12, 13751.0], [1.731671541E12, 13657.0], [1.731671451E12, 12593.0], [1.73167141E12, 13014.0], [1.731671623E12, 13038.0], [1.731671492E12, 12655.0], [1.731671664E12, 12993.0], [1.731671574E12, 12521.0], [1.731671533E12, 11933.0], [1.731671443E12, 13216.0], [1.731671402E12, 12862.0], [1.731671615E12, 12942.0], [1.731671484E12, 13702.0], [1.731671656E12, 13454.0], [1.731671566E12, 13656.0], [1.731671525E12, 13796.0], [1.731671435E12, 13170.0], [1.731671394E12, 14051.0], [1.731671607E12, 13518.0], [1.731671476E12, 12758.0], [1.731671648E12, 13579.0], [1.731671558E12, 12484.0], [1.731671517E12, 12318.0], [1.731671427E12, 12876.0], [1.731671386E12, 13503.0], [1.731671599E12, 11955.0], [1.731671468E12, 13266.0], [1.73167164E12, 12874.0], [1.731671636E12, 12521.0], [1.731671423E12, 12189.0], [1.731671505E12, 12114.0], [1.731671464E12, 12387.0], [1.731671677E12, 12358.0], [1.731671587E12, 13124.0], [1.731671546E12, 12775.0], [1.731671628E12, 13702.0], [1.731671415E12, 13483.0], [1.731671497E12, 13857.0], [1.731671456E12, 13287.0], [1.731671669E12, 13763.0], [1.731671579E12, 13472.0], [1.731671538E12, 13844.0], [1.73167162E12, 13103.0], [1.731671407E12, 12986.0], [1.731671489E12, 12198.0], [1.731671448E12, 12152.0], [1.731671661E12, 12700.0], [1.731671571E12, 12426.0], [1.73167153E12, 12324.0], [1.731671612E12, 13075.0], [1.731671399E12, 12989.0], [1.731671481E12, 13660.0], [1.73167144E12, 13578.0], [1.731671653E12, 13612.0], [1.731671563E12, 13848.0], [1.731671522E12, 13746.0], [1.731671604E12, 13654.0], [1.731671391E12, 14126.0], [1.731671473E12, 12724.0], [1.731671432E12, 13377.0], [1.731671645E12, 13174.0], [1.731671555E12, 12225.0], [1.731671514E12, 11877.0], [1.731671596E12, 12577.0], [1.731671383E12, 13703.0], [1.731671678E12, 13287.0], [1.731671465E12, 13295.0], [1.731671424E12, 12930.0], [1.731671637E12, 13104.0], [1.731671547E12, 13698.0], [1.731671506E12, 13824.0], [1.731671588E12, 13766.0], [1.73167167E12, 13061.0], [1.731671457E12, 13310.0], [1.731671416E12, 13594.0], [1.731671629E12, 13658.0], [1.731671539E12, 12453.0], [1.731671498E12, 12596.0], [1.73167158E12, 11942.0], [1.731671662E12, 12848.0], [1.731671449E12, 13250.0], [1.731671408E12, 12663.0], [1.731671621E12, 12519.0], [1.731671531E12, 13837.0], [1.73167149E12, 13147.0], [1.731671572E12, 13855.0], [1.731671654E12, 13404.0], [1.731671441E12, 13810.0], [1.7316714E12, 13999.0], [1.731671613E12, 13696.0], [1.731671523E12, 12535.0], [1.731671482E12, 13179.0], [1.731671564E12, 12358.0], [1.731671646E12, 11897.0], [1.731671433E12, 12554.0], [1.731671392E12, 12331.0], [1.731671605E12, 12390.0], [1.731671515E12, 13395.0], [1.731671474E12, 12871.0], [1.731671556E12, 13736.0], [1.731671638E12, 13796.0], [1.731671425E12, 13600.0], [1.731671384E12, 13322.0], [1.731671597E12, 13756.0], [1.73167138E12, 8937.0], [1.731671593E12, 12844.0], [1.731671552E12, 12040.0], [1.731671462E12, 13491.0], [1.731671675E12, 13726.0], [1.731671634E12, 13489.0], [1.731671421E12, 13302.0], [1.731671503E12, 13531.0], [1.731671585E12, 13808.0], [1.731671544E12, 13810.0], [1.731671454E12, 13230.0], [1.731671667E12, 13362.0], [1.731671626E12, 13458.0], [1.731671413E12, 13345.0], [1.731671495E12, 12175.0], [1.731671577E12, 12450.0], [1.731671536E12, 12243.0], [1.731671446E12, 13284.0], [1.731671659E12, 12997.0], [1.731671618E12, 12573.0], [1.731671405E12, 12797.0], [1.731671487E12, 13596.0], [1.731671569E12, 13513.0], [1.731671528E12, 13729.0], [1.731671438E12, 13423.0], [1.731671651E12, 13338.0], [1.73167161E12, 13830.0], [1.731671397E12, 13545.0], [1.731671479E12, 13167.0], [1.731671561E12, 11938.0], [1.73167152E12, 12728.0], [1.73167143E12, 12754.0], [1.731671643E12, 12631.0], [1.731671602E12, 12207.0], [1.731671389E12, 13656.0], [1.731671471E12, 12975.0], [1.731671553E12, 13583.0], [1.731671512E12, 13477.0], [1.731671422E12, 14175.0], [1.731671635E12, 13285.0], [1.731671594E12, 13660.0], [1.731671381E12, 13106.0], [1.731671676E12, 13595.0], [1.731671463E12, 13554.0], [1.731671545E12, 12663.0], [1.731671504E12, 13168.0], [1.731671414E12, 12381.0], [1.731671627E12, 11881.0], [1.731671586E12, 12462.0], [1.731671668E12, 12424.0], [1.731671455E12, 12710.0], [1.731671537E12, 13165.0], [1.731671496E12, 13284.0], [1.731671406E12, 13718.0], [1.731671619E12, 13824.0], [1.731671578E12, 13740.0], [1.73167166E12, 13684.0], [1.731671447E12, 13622.0], [1.731671529E12, 13070.0], [1.731671488E12, 13877.0], [1.731671398E12, 12690.0], [1.731671611E12, 12361.0], [1.73167157E12, 12865.0], [1.731671652E12, 12462.0], [1.731671439E12, 12076.0], [1.731671521E12, 12965.0], [1.73167148E12, 12544.0], [1.73167139E12, 13061.0], [1.731671603E12, 13418.0], [1.731671562E12, 13476.0], [1.731671644E12, 13837.0], [1.731671431E12, 13566.0], [1.731671513E12, 13755.0], [1.731671472E12, 13790.0], [1.731671382E12, 12415.0], [1.731671595E12, 12908.0], [1.731671554E12, 13832.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.73167168E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 9.939999999999996, "minX": 1.73167138E12, "maxY": 23.000000000000004, "series": [{"data": [[1.73167155E12, 10.57142857142857], [1.731671509E12, 10.56363636363636], [1.731671419E12, 10.249999999999998], [1.731671591E12, 10.58181818181818], [1.73167146E12, 10.444444444444445], [1.731671673E12, 10.48148148148148], [1.731671632E12, 10.25], [1.731671542E12, 10.274509803921571], [1.731671501E12, 10.38461538461538], [1.731671411E12, 10.279999999999998], [1.731671583E12, 9.939999999999996], [1.731671452E12, 10.557692307692307], [1.731671665E12, 10.75], [1.731671624E12, 10.180000000000001], [1.731671534E12, 10.54545454545455], [1.731671493E12, 10.370370370370372], [1.731671403E12, 10.857142857142858], [1.731671575E12, 10.624999999999998], [1.731671444E12, 10.053571428571425], [1.731671657E12, 9.946428571428571], [1.731671616E12, 10.660714285714285], [1.731671526E12, 10.320754716981131], [1.731671485E12, 10.425925925925926], [1.731671395E12, 10.619999999999997], [1.731671567E12, 10.15686274509804], [1.731671436E12, 10.3], [1.731671649E12, 10.440000000000001], [1.731671608E12, 10.38], [1.731671518E12, 10.39622641509434], [1.731671477E12, 10.372549019607847], [1.731671387E12, 10.981132075471697], [1.731671559E12, 10.363636363636363], [1.731671428E12, 10.428571428571427], [1.731671641E12, 10.285714285714283], [1.7316716E12, 10.624999999999996], [1.73167151E12, 10.454545454545451], [1.731671469E12, 10.499999999999998], [1.731671551E12, 10.39622641509434], [1.73167142E12, 10.54], [1.731671633E12, 10.279999999999998], [1.731671592E12, 10.365384615384619], [1.731671502E12, 10.33333333333333], [1.731671674E12, 10.46], [1.731671461E12, 10.919999999999998], [1.731671543E12, 10.528301886792452], [1.731671412E12, 10.303571428571427], [1.731671625E12, 10.17857142857143], [1.731671584E12, 10.35185185185185], [1.731671494E12, 10.636363636363633], [1.731671666E12, 10.763636363636362], [1.731671453E12, 10.563636363636364], [1.731671535E12, 10.436363636363637], [1.731671404E12, 10.21153846153846], [1.731671617E12, 10.115384615384615], [1.731671576E12, 10.094339622641508], [1.731671486E12, 10.080000000000002], [1.731671658E12, 10.379999999999999], [1.731671445E12, 10.180000000000001], [1.731671527E12, 11.254901960784313], [1.731671396E12, 10.88888888888889], [1.731671609E12, 10.351851851851851], [1.731671568E12, 10.307692307692305], [1.731671478E12, 10.124999999999998], [1.73167165E12, 10.267857142857142], [1.731671437E12, 10.321428571428571], [1.731671519E12, 10.464285714285715], [1.731671388E12, 11.132075471698116], [1.731671601E12, 10.42592592592593], [1.73167156E12, 10.4], [1.73167147E12, 10.4], [1.731671642E12, 10.076923076923078], [1.731671429E12, 10.269230769230768], [1.731671511E12, 10.180000000000001], [1.731671507E12, 10.481481481481481], [1.731671466E12, 10.821428571428573], [1.731671679E12, 10.232142857142856], [1.731671548E12, 10.846153846153854], [1.73167163E12, 10.139999999999999], [1.731671417E12, 10.08], [1.731671589E12, 10.36], [1.731671499E12, 10.403846153846153], [1.731671458E12, 10.559999999999999], [1.731671671E12, 10.539999999999997], [1.73167154E12, 10.830188679245284], [1.731671622E12, 10.64285714285714], [1.731671409E12, 10.660714285714285], [1.731671581E12, 10.181818181818178], [1.731671491E12, 10.781818181818183], [1.73167145E12, 10.178571428571423], [1.731671663E12, 10.249999999999998], [1.731671532E12, 10.462962962962964], [1.731671614E12, 10.058823529411764], [1.731671401E12, 10.490196078431369], [1.731671573E12, 10.113207547169807], [1.731671483E12, 10.100000000000001], [1.731671442E12, 10.479999999999997], [1.731671655E12, 9.999999999999998], [1.731671524E12, 10.176470588235297], [1.731671606E12, 10.07272727272727], [1.731671393E12, 11.185185185185183], [1.731671565E12, 10.245283018867925], [1.731671475E12, 10.642857142857142], [1.731671434E12, 10.124999999999996], [1.731671647E12, 10.410714285714286], [1.731671516E12, 10.160714285714281], [1.731671598E12, 10.867924528301888], [1.731671385E12, 11.057692307692307], [1.731671557E12, 10.40740740740741], [1.731671467E12, 10.519999999999998], [1.731671426E12, 10.423076923076923], [1.731671639E12, 10.411764705882351], [1.731671508E12, 10.519999999999998], [1.73167168E12, 10.299999999999999], [1.73167159E12, 10.471698113207546], [1.731671549E12, 10.352941176470587], [1.731671459E12, 10.41071428571429], [1.731671418E12, 10.851851851851851], [1.731671631E12, 10.203703703703702], [1.7316715E12, 10.696428571428571], [1.731671672E12, 10.69642857142857], [1.731671582E12, 10.23636363636364], [1.731671541E12, 10.910714285714288], [1.731671451E12, 10.235294117647058], [1.73167141E12, 10.471698113207546], [1.731671623E12, 10.415094339622641], [1.731671492E12, 10.470588235294121], [1.731671664E12, 10.557692307692308], [1.731671574E12, 10.411764705882359], [1.731671533E12, 10.560000000000002], [1.731671443E12, 10.38888888888889], [1.731671402E12, 10.846153846153845], [1.731671615E12, 9.980769230769232], [1.731671484E12, 10.214285714285717], [1.731671656E12, 10.166666666666666], [1.731671566E12, 10.125], [1.731671525E12, 10.214285714285717], [1.731671435E12, 10.18867924528302], [1.731671394E12, 10.499999999999998], [1.731671607E12, 10.29090909090909], [1.731671476E12, 10.403846153846153], [1.731671648E12, 10.203703703703702], [1.731671558E12, 10.479999999999997], [1.731671517E12, 10.519999999999994], [1.731671427E12, 10.192307692307692], [1.731671386E12, 11.109090909090911], [1.731671599E12, 10.78], [1.731671468E12, 10.444444444444441], [1.73167164E12, 10.423076923076923], [1.731671636E12, 10.392156862745098], [1.731671423E12, 10.459999999999997], [1.731671505E12, 10.340000000000003], [1.731671464E12, 10.24], [1.731671677E12, 10.219999999999997], [1.731671587E12, 10.433962264150946], [1.731671546E12, 10.499999999999996], [1.731671628E12, 10.218181818181817], [1.731671415E12, 10.290909090909091], [1.731671497E12, 10.142857142857146], [1.731671456E12, 10.545454545454545], [1.731671669E12, 10.64285714285714], [1.731671579E12, 10.203703703703702], [1.731671538E12, 10.357142857142858], [1.73167162E12, 10.096153846153847], [1.731671407E12, 10.615384615384611], [1.731671489E12, 10.340000000000002], [1.731671448E12, 10.137254901960782], [1.731671661E12, 10.431372549019612], [1.731671571E12, 10.509803921568626], [1.73167153E12, 10.379999999999997], [1.731671612E12, 10.245283018867925], [1.731671399E12, 10.433962264150944], [1.731671481E12, 10.303571428571427], [1.73167144E12, 10.32727272727273], [1.731671653E12, 10.14545454545455], [1.731671563E12, 10.44642857142857], [1.731671522E12, 10.070175438596491], [1.731671604E12, 10.236363636363636], [1.731671391E12, 10.736842105263158], [1.731671473E12, 10.607843137254903], [1.731671432E12, 10.629629629629626], [1.731671645E12, 10.28301886792453], [1.731671555E12, 10.280000000000001], [1.731671514E12, 10.480000000000002], [1.731671596E12, 10.196078431372548], [1.731671383E12, 11.072727272727269], [1.731671678E12, 10.314814814814818], [1.731671465E12, 10.5], [1.731671424E12, 10.283018867924527], [1.731671637E12, 10.603773584905658], [1.731671547E12, 10.25], [1.731671506E12, 10.553571428571429], [1.731671588E12, 10.192982456140353], [1.73167167E12, 10.679245283018869], [1.731671457E12, 10.277777777777777], [1.731671416E12, 10.254545454545456], [1.731671629E12, 10.290909090909091], [1.731671539E12, 10.539999999999997], [1.731671498E12, 10.254901960784311], [1.73167158E12, 10.1], [1.731671662E12, 10.307692307692308], [1.731671449E12, 10.245283018867925], [1.731671408E12, 10.52941176470588], [1.731671621E12, 10.254901960784313], [1.731671531E12, 10.464285714285712], [1.73167149E12, 10.574074074074074], [1.731671572E12, 10.214285714285717], [1.731671654E12, 10.145454545454546], [1.731671441E12, 10.254545454545454], [1.7316714E12, 10.553571428571427], [1.731671613E12, 10.51785714285714], [1.731671523E12, 10.43137254901961], [1.731671482E12, 10.018867924528303], [1.731671564E12, 10.180000000000001], [1.731671646E12, 10.219999999999999], [1.731671433E12, 10.803921568627453], [1.731671392E12, 11.058823529411763], [1.731671605E12, 10.120000000000001], [1.731671515E12, 10.444444444444445], [1.731671474E12, 10.461538461538465], [1.731671556E12, 10.357142857142858], [1.731671638E12, 10.553571428571427], [1.731671425E12, 10.872727272727275], [1.731671384E12, 10.833333333333332], [1.731671597E12, 10.19642857142857], [1.73167138E12, 23.000000000000004], [1.731671593E12, 10.461538461538455], [1.731671552E12, 10.299999999999999], [1.731671462E12, 10.52727272727273], [1.731671675E12, 10.4], [1.731671634E12, 10.185185185185182], [1.731671421E12, 10.481481481481483], [1.731671503E12, 10.26785714285714], [1.731671585E12, 10.303571428571429], [1.731671544E12, 10.607142857142858], [1.731671454E12, 10.622641509433961], [1.731671667E12, 10.716981132075473], [1.731671626E12, 10.444444444444445], [1.731671413E12, 10.88888888888889], [1.731671495E12, 10.509803921568627], [1.731671577E12, 10.020000000000001], [1.731671536E12, 10.46], [1.731671446E12, 10.24074074074074], [1.731671659E12, 10.037735849056606], [1.731671618E12, 10.096153846153845], [1.731671405E12, 10.384615384615385], [1.731671487E12, 10.054545454545453], [1.731671569E12, 10.678571428571429], [1.731671528E12, 10.214285714285714], [1.731671438E12, 10.444444444444445], [1.731671651E12, 10.314814814814815], [1.73167161E12, 10.26785714285714], [1.731671397E12, 10.963636363636365], [1.731671479E12, 10.150943396226415], [1.731671561E12, 10.080000000000004], [1.73167152E12, 10.215686274509805], [1.73167143E12, 10.509803921568626], [1.731671643E12, 10.411764705882355], [1.731671602E12, 10.280000000000001], [1.731671389E12, 10.727272727272725], [1.731671471E12, 10.264150943396226], [1.731671553E12, 10.545454545454547], [1.731671512E12, 10.309090909090909], [1.731671422E12, 10.357142857142861], [1.731671635E12, 10.200000000000001], [1.731671594E12, 10.357142857142856], [1.731671381E12, 11.537037037037035], [1.731671676E12, 10.327272727272728], [1.731671463E12, 10.327272727272728], [1.731671545E12, 10.431372549019608], [1.731671504E12, 10.358490566037734], [1.731671414E12, 10.4], [1.731671627E12, 10.259999999999996], [1.731671586E12, 10.340000000000002], [1.731671668E12, 10.62745098039216], [1.731671455E12, 10.411764705882355], [1.731671537E12, 10.629629629629628], [1.731671496E12, 10.132075471698114], [1.731671406E12, 10.44642857142857], [1.731671619E12, 10.339285714285715], [1.731671578E12, 10.196428571428573], [1.73167166E12, 10.089285714285715], [1.731671447E12, 10.363636363636363], [1.731671529E12, 10.32075471698113], [1.731671488E12, 10.127272727272725], [1.731671398E12, 10.70588235294118], [1.731671611E12, 10.219999999999997], [1.73167157E12, 10.269230769230768], [1.731671652E12, 10.540000000000001], [1.731671439E12, 10.319999999999999], [1.731671521E12, 10.21153846153846], [1.73167148E12, 10.274509803921571], [1.73167139E12, 10.907407407407408], [1.731671603E12, 10.218181818181815], [1.731671562E12, 10.074074074074073], [1.731671644E12, 10.48214285714286], [1.731671431E12, 10.472727272727273], [1.731671513E12, 10.70909090909091], [1.731671472E12, 10.392857142857142], [1.731671382E12, 10.803921568627452], [1.731671595E12, 10.096153846153847], [1.731671554E12, 10.49090909090909]], "isOverall": false, "label": "Products", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.73167168E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 9.939999999999996, "minX": 1.73167138E12, "maxY": 22.86111111111111, "series": [{"data": [[1.73167155E12, 10.553571428571427], [1.731671509E12, 10.56363636363636], [1.731671419E12, 10.232142857142858], [1.731671591E12, 10.563636363636364], [1.73167146E12, 10.444444444444445], [1.731671673E12, 10.462962962962964], [1.731671632E12, 10.25], [1.731671542E12, 10.254901960784315], [1.731671501E12, 10.38461538461538], [1.731671411E12, 10.24], [1.731671583E12, 9.939999999999996], [1.731671452E12, 10.519230769230766], [1.731671665E12, 10.75], [1.731671624E12, 10.180000000000001], [1.731671534E12, 10.54545454545455], [1.731671493E12, 10.314814814814813], [1.731671403E12, 10.857142857142858], [1.731671575E12, 10.624999999999998], [1.731671444E12, 10.035714285714283], [1.731671657E12, 9.946428571428571], [1.731671616E12, 10.660714285714285], [1.731671526E12, 10.283018867924529], [1.731671485E12, 10.425925925925926], [1.731671395E12, 10.540000000000003], [1.731671567E12, 10.137254901960786], [1.731671436E12, 10.26], [1.731671649E12, 10.420000000000003], [1.731671608E12, 10.38], [1.731671518E12, 10.39622641509434], [1.731671477E12, 10.372549019607847], [1.731671387E12, 10.867924528301888], [1.731671559E12, 10.345454545454546], [1.731671428E12, 10.39285714285714], [1.731671641E12, 10.285714285714283], [1.7316716E12, 10.624999999999996], [1.73167151E12, 10.454545454545451], [1.731671469E12, 10.464285714285714], [1.731671551E12, 10.39622641509434], [1.73167142E12, 10.500000000000004], [1.731671633E12, 10.26], [1.731671592E12, 10.365384615384619], [1.731671502E12, 10.33333333333333], [1.731671674E12, 10.439999999999998], [1.731671461E12, 10.879999999999997], [1.731671543E12, 10.528301886792452], [1.731671412E12, 10.285714285714283], [1.731671625E12, 10.160714285714286], [1.731671584E12, 10.35185185185185], [1.731671494E12, 10.61818181818182], [1.731671666E12, 10.763636363636362], [1.731671453E12, 10.563636363636364], [1.731671535E12, 10.436363636363637], [1.731671404E12, 10.19230769230769], [1.731671617E12, 10.076923076923077], [1.731671576E12, 10.075471698113205], [1.731671486E12, 10.080000000000002], [1.731671658E12, 10.379999999999999], [1.731671445E12, 10.180000000000001], [1.731671527E12, 11.254901960784313], [1.731671396E12, 10.796296296296298], [1.731671609E12, 10.351851851851851], [1.731671568E12, 10.307692307692305], [1.731671478E12, 10.124999999999998], [1.73167165E12, 10.267857142857142], [1.731671437E12, 10.321428571428571], [1.731671519E12, 10.267857142857144], [1.731671388E12, 11.09433962264151], [1.731671601E12, 10.42592592592593], [1.73167156E12, 10.381818181818184], [1.73167147E12, 10.360000000000003], [1.731671642E12, 10.076923076923078], [1.731671429E12, 10.269230769230768], [1.731671511E12, 10.180000000000001], [1.731671507E12, 10.481481481481481], [1.731671466E12, 10.803571428571429], [1.731671679E12, 10.214285714285712], [1.731671548E12, 10.826923076923075], [1.73167163E12, 10.12], [1.731671417E12, 9.999999999999995], [1.731671589E12, 10.36], [1.731671499E12, 10.384615384615385], [1.731671458E12, 10.540000000000001], [1.731671671E12, 10.539999999999997], [1.73167154E12, 10.81132075471698], [1.731671622E12, 10.624999999999998], [1.731671409E12, 10.660714285714285], [1.731671581E12, 10.163636363636364], [1.731671491E12, 10.781818181818183], [1.73167145E12, 10.178571428571423], [1.731671663E12, 10.249999999999998], [1.731671532E12, 10.462962962962964], [1.731671614E12, 10.058823529411764], [1.731671401E12, 10.470588235294118], [1.731671573E12, 10.113207547169807], [1.731671483E12, 10.100000000000001], [1.731671442E12, 10.440000000000001], [1.731671655E12, 9.98], [1.731671524E12, 10.176470588235297], [1.731671606E12, 10.054545454545455], [1.731671393E12, 11.185185185185183], [1.731671565E12, 10.245283018867925], [1.731671475E12, 10.625], [1.731671434E12, 10.124999999999996], [1.731671647E12, 10.410714285714286], [1.731671516E12, 10.142857142857144], [1.731671598E12, 10.867924528301888], [1.731671385E12, 10.999999999999998], [1.731671557E12, 10.40740740740741], [1.731671467E12, 10.519999999999998], [1.731671426E12, 10.423076923076923], [1.731671639E12, 10.411764705882351], [1.731671508E12, 10.519999999999998], [1.73167168E12, 10.299999999999999], [1.73167159E12, 10.433962264150946], [1.731671549E12, 10.352941176470587], [1.731671459E12, 10.375000000000004], [1.731671418E12, 10.851851851851851], [1.731671631E12, 10.203703703703702], [1.7316715E12, 10.678571428571427], [1.731671672E12, 10.660714285714286], [1.731671582E12, 10.23636363636364], [1.731671541E12, 10.910714285714288], [1.731671451E12, 10.215686274509801], [1.73167141E12, 10.452830188679243], [1.731671623E12, 10.415094339622641], [1.731671492E12, 10.45098039215686], [1.731671664E12, 10.557692307692308], [1.731671574E12, 10.411764705882359], [1.731671533E12, 10.540000000000003], [1.731671443E12, 10.38888888888889], [1.731671402E12, 10.846153846153845], [1.731671615E12, 9.980769230769232], [1.731671484E12, 10.196428571428568], [1.731671656E12, 10.166666666666666], [1.731671566E12, 10.089285714285712], [1.731671525E12, 10.214285714285717], [1.731671435E12, 10.18867924528302], [1.731671394E12, 10.446428571428573], [1.731671607E12, 10.272727272727273], [1.731671476E12, 10.384615384615385], [1.731671648E12, 10.203703703703702], [1.731671558E12, 10.479999999999997], [1.731671517E12, 10.519999999999994], [1.731671427E12, 10.192307692307692], [1.731671386E12, 11.109090909090911], [1.731671599E12, 10.78], [1.731671468E12, 10.444444444444441], [1.73167164E12, 10.403846153846157], [1.731671636E12, 10.392156862745098], [1.731671423E12, 10.459999999999997], [1.731671505E12, 10.340000000000003], [1.731671464E12, 10.2], [1.731671677E12, 10.2], [1.731671587E12, 10.39622641509434], [1.731671546E12, 10.480769230769232], [1.731671628E12, 10.218181818181817], [1.731671415E12, 10.272727272727272], [1.731671497E12, 10.142857142857146], [1.731671456E12, 10.545454545454545], [1.731671669E12, 10.64285714285714], [1.731671579E12, 10.185185185185185], [1.731671538E12, 10.339285714285715], [1.73167162E12, 10.096153846153847], [1.731671407E12, 10.615384615384611], [1.731671489E12, 10.340000000000002], [1.731671448E12, 10.137254901960782], [1.731671661E12, 10.411764705882353], [1.731671571E12, 10.509803921568626], [1.73167153E12, 10.36], [1.731671612E12, 10.245283018867925], [1.731671399E12, 10.358490566037736], [1.731671481E12, 10.303571428571427], [1.73167144E12, 10.309090909090912], [1.731671653E12, 10.127272727272727], [1.731671563E12, 10.428571428571429], [1.731671522E12, 10.070175438596491], [1.731671604E12, 10.236363636363636], [1.731671391E12, 10.719298245614034], [1.731671473E12, 10.588235294117647], [1.731671432E12, 10.592592592592592], [1.731671645E12, 10.28301886792453], [1.731671555E12, 10.280000000000001], [1.731671514E12, 10.44], [1.731671596E12, 10.196078431372548], [1.731671383E12, 11.054545454545456], [1.731671678E12, 10.314814814814818], [1.731671465E12, 10.5], [1.731671424E12, 10.283018867924527], [1.731671637E12, 10.584905660377357], [1.731671547E12, 10.23214285714286], [1.731671506E12, 10.553571428571429], [1.731671588E12, 10.192982456140353], [1.73167167E12, 10.660377358490567], [1.731671457E12, 10.277777777777777], [1.731671416E12, 10.236363636363635], [1.731671629E12, 10.290909090909091], [1.731671539E12, 10.539999999999997], [1.731671498E12, 10.254901960784311], [1.73167158E12, 10.1], [1.731671662E12, 10.307692307692308], [1.731671449E12, 10.226415094339625], [1.731671408E12, 10.509803921568627], [1.731671621E12, 10.254901960784313], [1.731671531E12, 10.446428571428573], [1.73167149E12, 10.574074074074074], [1.731671572E12, 10.196428571428571], [1.731671654E12, 10.145454545454546], [1.731671441E12, 10.254545454545454], [1.7316714E12, 10.48214285714286], [1.731671613E12, 10.51785714285714], [1.731671523E12, 10.43137254901961], [1.731671482E12, 10.000000000000002], [1.731671564E12, 10.159999999999997], [1.731671646E12, 10.219999999999999], [1.731671433E12, 10.784313725490193], [1.731671392E12, 11.03921568627451], [1.731671605E12, 10.120000000000001], [1.731671515E12, 10.425925925925927], [1.731671474E12, 10.442307692307692], [1.731671556E12, 10.339285714285715], [1.731671638E12, 10.535714285714286], [1.731671425E12, 10.854545454545452], [1.731671384E12, 10.77777777777778], [1.731671597E12, 10.178571428571432], [1.73167138E12, 22.86111111111111], [1.731671593E12, 10.44230769230769], [1.731671552E12, 10.28], [1.731671462E12, 10.52727272727273], [1.731671675E12, 10.381818181818183], [1.731671634E12, 10.185185185185182], [1.731671421E12, 10.481481481481483], [1.731671503E12, 10.26785714285714], [1.731671585E12, 10.303571428571429], [1.731671544E12, 10.589285714285717], [1.731671454E12, 10.622641509433961], [1.731671667E12, 10.716981132075473], [1.731671626E12, 10.444444444444445], [1.731671413E12, 10.851851851851851], [1.731671495E12, 10.509803921568627], [1.731671577E12, 10.0], [1.731671536E12, 10.46], [1.731671446E12, 10.22222222222222], [1.731671659E12, 10.018867924528301], [1.731671618E12, 10.096153846153845], [1.731671405E12, 10.365384615384617], [1.731671487E12, 10.054545454545453], [1.731671569E12, 10.660714285714286], [1.731671528E12, 10.214285714285714], [1.731671438E12, 10.425925925925924], [1.731671651E12, 10.314814814814815], [1.73167161E12, 10.26785714285714], [1.731671397E12, 10.87272727272727], [1.731671479E12, 10.132075471698112], [1.731671561E12, 10.080000000000004], [1.73167152E12, 10.215686274509805], [1.73167143E12, 10.490196078431374], [1.731671643E12, 10.411764705882355], [1.731671602E12, 10.280000000000001], [1.731671389E12, 10.67272727272727], [1.731671471E12, 10.264150943396226], [1.731671553E12, 10.527272727272726], [1.731671512E12, 10.309090909090909], [1.731671422E12, 10.357142857142861], [1.731671635E12, 10.200000000000001], [1.731671594E12, 10.357142857142856], [1.731671381E12, 11.03703703703704], [1.731671676E12, 10.327272727272728], [1.731671463E12, 10.327272727272728], [1.731671545E12, 10.431372549019608], [1.731671504E12, 10.339622641509436], [1.731671414E12, 10.38], [1.731671627E12, 10.219999999999999], [1.731671586E12, 10.340000000000002], [1.731671668E12, 10.62745098039216], [1.731671455E12, 10.411764705882355], [1.731671537E12, 10.61111111111111], [1.731671496E12, 10.132075471698114], [1.731671406E12, 10.428571428571429], [1.731671619E12, 10.321428571428575], [1.731671578E12, 10.160714285714286], [1.73167166E12, 10.071428571428573], [1.731671447E12, 10.363636363636363], [1.731671529E12, 10.301886792452828], [1.731671488E12, 10.127272727272725], [1.731671398E12, 10.607843137254903], [1.731671611E12, 10.159999999999995], [1.73167157E12, 10.269230769230768], [1.731671652E12, 10.540000000000001], [1.731671439E12, 10.299999999999999], [1.731671521E12, 10.21153846153846], [1.73167148E12, 10.254901960784315], [1.73167139E12, 10.907407407407408], [1.731671603E12, 10.218181818181815], [1.731671562E12, 10.055555555555555], [1.731671644E12, 10.48214285714286], [1.731671431E12, 10.418181818181822], [1.731671513E12, 10.690909090909091], [1.731671472E12, 10.392857142857142], [1.731671382E12, 10.745098039215687], [1.731671595E12, 10.096153846153847], [1.731671554E12, 10.49090909090909]], "isOverall": false, "label": "Products", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.73167168E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.73167138E12, "maxY": 1.972222222222222, "series": [{"data": [[1.73167155E12, 0.0892857142857143], [1.731671509E12, 0.09090909090909093], [1.731671419E12, 0.05357142857142858], [1.731671591E12, 0.054545454545454536], [1.73167146E12, 0.09259259259259262], [1.731671673E12, 0.037037037037037035], [1.731671632E12, 0.03571428571428572], [1.731671542E12, 0.09803921568627454], [1.731671501E12, 0.09615384615384617], [1.731671411E12, 0.08000000000000002], [1.731671583E12, 0.10000000000000003], [1.731671452E12, 0.1153846153846154], [1.731671665E12, 0.0576923076923077], [1.731671624E12, 0.08000000000000002], [1.731671534E12, 0.03636363636363637], [1.731671493E12, 0.09259259259259262], [1.731671403E12, 0.0892857142857143], [1.731671575E12, 0.05357142857142858], [1.731671444E12, 0.03571428571428571], [1.731671657E12, 0.0892857142857143], [1.731671616E12, 0.0], [1.731671526E12, 0.09433962264150945], [1.731671485E12, 0.07407407407407408], [1.731671395E12, 0.10000000000000003], [1.731671567E12, 0.0784313725490196], [1.731671436E12, 0.10000000000000003], [1.731671649E12, 0.10000000000000003], [1.731671608E12, 0.10000000000000003], [1.731671518E12, 0.13207547169811323], [1.731671477E12, 0.11764705882352944], [1.731671387E12, 0.11320754716981134], [1.731671559E12, 0.05454545454545456], [1.731671428E12, 0.05357142857142858], [1.731671641E12, 0.0892857142857143], [1.7316716E12, 0.10714285714285716], [1.73167151E12, 0.05454545454545456], [1.731671469E12, 0.07142857142857144], [1.731671551E12, 0.03773584905660377], [1.73167142E12, 0.10000000000000003], [1.731671633E12, 0.10000000000000003], [1.731671592E12, 0.057692307692307716], [1.731671502E12, 0.11764705882352944], [1.731671674E12, 0.10000000000000003], [1.731671461E12, 0.08000000000000002], [1.731671543E12, 0.11320754716981134], [1.731671412E12, 0.0892857142857143], [1.731671625E12, 0.0], [1.731671584E12, 0.11111111111111113], [1.731671494E12, 0.09090909090909093], [1.731671666E12, 0.09090909090909093], [1.731671453E12, 0.07272727272727274], [1.731671535E12, 0.09090909090909094], [1.731671404E12, 0.09615384615384617], [1.731671617E12, 0.0], [1.731671576E12, 0.09433962264150945], [1.731671486E12, 0.06000000000000001], [1.731671658E12, 0.10000000000000003], [1.731671445E12, 0.10000000000000003], [1.731671527E12, 0.11764705882352944], [1.731671396E12, 0.09259259259259262], [1.731671609E12, 0.11111111111111113], [1.731671568E12, 0.09615384615384617], [1.731671478E12, 0.07142857142857144], [1.73167165E12, 0.053571428571428596], [1.731671437E12, 0.10714285714285715], [1.731671519E12, 0.03571428571428571], [1.731671388E12, 0.11320754716981134], [1.731671601E12, 0.09259259259259262], [1.73167156E12, 0.09090909090909094], [1.73167147E12, 0.08000000000000002], [1.731671642E12, 0.09615384615384617], [1.731671429E12, 0.07692307692307694], [1.731671511E12, 0.08000000000000002], [1.731671507E12, 0.09259259259259262], [1.731671466E12, 0.05357142857142858], [1.731671679E12, 0.05357142857142858], [1.731671548E12, 0.0576923076923077], [1.73167163E12, 0.06000000000000001], [1.731671417E12, 0.10000000000000003], [1.731671589E12, 0.10000000000000003], [1.731671499E12, 0.1153846153846154], [1.731671458E12, 0.08000000000000002], [1.731671671E12, 0.10000000000000003], [1.73167154E12, 0.11320754716981134], [1.731671622E12, 0.0892857142857143], [1.731671409E12, 0.0892857142857143], [1.731671581E12, 0.09090909090909093], [1.731671491E12, 0.09090909090909093], [1.73167145E12, 0.07142857142857142], [1.731671663E12, 0.0892857142857143], [1.731671532E12, 0.09259259259259262], [1.731671614E12, 0.0], [1.731671401E12, 0.09803921568627454], [1.731671573E12, 0.0], [1.731671483E12, 0.10000000000000003], [1.731671442E12, 0.06000000000000001], [1.731671655E12, 0.08000000000000002], [1.731671524E12, 0.11764705882352944], [1.731671606E12, 0.09090909090909093], [1.731671393E12, 0.11111111111111113], [1.731671565E12, 0.11320754716981134], [1.731671475E12, 0.03571428571428571], [1.731671434E12, 0.05357142857142857], [1.731671647E12, 0.10714285714285716], [1.731671516E12, 0.0892857142857143], [1.731671598E12, 0.03773584905660377], [1.731671385E12, 0.1153846153846154], [1.731671557E12, 0.09259259259259262], [1.731671467E12, 0.0], [1.731671426E12, 0.07692307692307694], [1.731671639E12, 0.0784313725490196], [1.731671508E12, 0.10000000000000003], [1.73167168E12, 0.10000000000000003], [1.73167159E12, 0.11320754716981134], [1.731671549E12, 0.0392156862745098], [1.731671459E12, 0.0892857142857143], [1.731671418E12, 0.07407407407407408], [1.731671631E12, 0.018518518518518528], [1.7316715E12, 0.05357142857142858], [1.731671672E12, 0.0892857142857143], [1.731671582E12, 0.09090909090909094], [1.731671541E12, 0.0892857142857143], [1.731671451E12, 0.09803921568627454], [1.73167141E12, 0.07547169811320754], [1.731671623E12, 0.09433962264150945], [1.731671492E12, 0.09803921568627454], [1.731671664E12, 0.07692307692307693], [1.731671574E12, 0.07843137254901962], [1.731671533E12, 0.04000000000000001], [1.731671443E12, 0.11111111111111113], [1.731671402E12, 0.1153846153846154], [1.731671615E12, 0.0], [1.731671484E12, 0.10714285714285716], [1.731671656E12, 0.11111111111111113], [1.731671566E12, 0.0892857142857143], [1.731671525E12, 0.0892857142857143], [1.731671435E12, 0.03773584905660377], [1.731671394E12, 0.0892857142857143], [1.731671607E12, 0.09090909090909094], [1.731671476E12, 0.07692307692307693], [1.731671648E12, 0.09259259259259262], [1.731671558E12, 0.08000000000000002], [1.731671517E12, 0.10000000000000003], [1.731671427E12, 0.1153846153846154], [1.731671386E12, 0.10909090909090911], [1.731671599E12, 0.06000000000000001], [1.731671468E12, 0.07407407407407408], [1.73167164E12, 0.09615384615384617], [1.731671636E12, 0.09803921568627454], [1.731671423E12, 0.10000000000000003], [1.731671505E12, 0.08000000000000002], [1.731671464E12, 0.10000000000000003], [1.731671677E12, 0.10000000000000003], [1.731671587E12, 0.11320754716981134], [1.731671546E12, 0.1153846153846154], [1.731671628E12, 0.10909090909090911], [1.731671415E12, 0.09090909090909093], [1.731671497E12, 0.03571428571428571], [1.731671456E12, 0.09090909090909093], [1.731671669E12, 0.0892857142857143], [1.731671579E12, 0.018518518518518517], [1.731671538E12, 0.0892857142857143], [1.73167162E12, 0.0576923076923077], [1.731671407E12, 0.09615384615384617], [1.731671489E12, 0.10000000000000003], [1.731671448E12, 0.0784313725490196], [1.731671661E12, 0.09803921568627454], [1.731671571E12, 0.07843137254901962], [1.73167153E12, 0.10000000000000003], [1.731671612E12, 0.11320754716981134], [1.731671399E12, 0.11320754716981134], [1.731671481E12, 0.07142857142857144], [1.73167144E12, 0.09090909090909093], [1.731671653E12, 0.07272727272727274], [1.731671563E12, 0.03571428571428571], [1.731671522E12, 0.08771929824561404], [1.731671604E12, 0.01818181818181818], [1.731671391E12, 0.08771929824561404], [1.731671473E12, 0.0784313725490196], [1.731671432E12, 0.055555555555555566], [1.731671645E12, 0.09433962264150945], [1.731671555E12, 0.10000000000000003], [1.731671514E12, 0.06000000000000001], [1.731671596E12, 0.0196078431372549], [1.731671383E12, 0.1272727272727273], [1.731671678E12, 0.07407407407407408], [1.731671465E12, 0.07407407407407408], [1.731671424E12, 0.11320754716981134], [1.731671637E12, 0.07547169811320756], [1.731671547E12, 0.03571428571428571], [1.731671506E12, 0.03571428571428572], [1.731671588E12, 0.08771929824561404], [1.73167167E12, 0.09433962264150945], [1.731671457E12, 0.07407407407407408], [1.731671416E12, 0.09090909090909094], [1.731671629E12, 0.09090909090909094], [1.731671539E12, 0.10000000000000003], [1.731671498E12, 0.09803921568627454], [1.73167158E12, 0.06000000000000001], [1.731671662E12, 0.1153846153846154], [1.731671449E12, 0.07547169811320756], [1.731671408E12, 0.11764705882352944], [1.731671621E12, 0.11764705882352944], [1.731671531E12, 0.10714285714285716], [1.73167149E12, 0.11111111111111113], [1.731671572E12, 0.01785714285714286], [1.731671654E12, 0.07272727272727274], [1.731671441E12, 0.09090909090909094], [1.7316714E12, 0.0892857142857143], [1.731671613E12, 0.0892857142857143], [1.731671523E12, 0.0784313725490196], [1.731671482E12, 0.09433962264150945], [1.731671564E12, 0.06000000000000001], [1.731671646E12, 0.10000000000000003], [1.731671433E12, 0.11764705882352944], [1.731671392E12, 0.09803921568627454], [1.731671605E12, 0.06000000000000001], [1.731671515E12, 0.11111111111111113], [1.731671474E12, 0.07692307692307694], [1.731671556E12, 0.10714285714285716], [1.731671638E12, 0.017857142857142856], [1.731671425E12, 0.09090909090909093], [1.731671384E12, 0.11111111111111113], [1.731671597E12, 0.0892857142857143], [1.73167138E12, 1.972222222222222], [1.731671593E12, 0.0576923076923077], [1.731671552E12, 0.02], [1.731671462E12, 0.10909090909090911], [1.731671675E12, 0.10909090909090911], [1.731671634E12, 0.11111111111111113], [1.731671421E12, 0.11111111111111113], [1.731671503E12, 0.05357142857142857], [1.731671585E12, 0.0892857142857143], [1.731671544E12, 0.0892857142857143], [1.731671454E12, 0.07547169811320756], [1.731671667E12, 0.09433962264150945], [1.731671626E12, 0.018518518518518517], [1.731671413E12, 0.09259259259259262], [1.731671495E12, 0.05882352941176472], [1.731671577E12, 0.10000000000000003], [1.731671536E12, 0.10000000000000003], [1.731671446E12, 0.09259259259259262], [1.731671659E12, 0.11320754716981134], [1.731671618E12, 0.01923076923076923], [1.731671405E12, 0.09615384615384617], [1.731671487E12, 0.01818181818181819], [1.731671569E12, 0.0892857142857143], [1.731671528E12, 0.05357142857142858], [1.731671438E12, 0.09259259259259262], [1.731671651E12, 0.018518518518518517], [1.73167161E12, 0.0892857142857143], [1.731671397E12, 0.10909090909090911], [1.731671479E12, 0.018867924528301886], [1.731671561E12, 0.08000000000000002], [1.73167152E12, 0.09803921568627454], [1.73167143E12, 0.11764705882352944], [1.731671643E12, 0.09803921568627454], [1.731671602E12, 0.04000000000000001], [1.731671389E12, 0.09090909090909093], [1.731671471E12, 0.11320754716981134], [1.731671553E12, 0.05454545454545455], [1.731671512E12, 0.0], [1.731671422E12, 0.0892857142857143], [1.731671635E12, 0.09090909090909093], [1.731671594E12, 0.0], [1.731671381E12, 0.11111111111111113], [1.731671676E12, 0.09090909090909094], [1.731671463E12, 0.07272727272727272], [1.731671545E12, 0.09803921568627454], [1.731671504E12, 0.07547169811320754], [1.731671414E12, 0.08000000000000002], [1.731671627E12, 0.08000000000000002], [1.731671586E12, 0.10000000000000003], [1.731671668E12, 0.07843137254901962], [1.731671455E12, 0.11764705882352944], [1.731671537E12, 0.0740740740740741], [1.731671496E12, 0.09433962264150945], [1.731671406E12, 0.0892857142857143], [1.731671619E12, 0.0892857142857143], [1.731671578E12, 0.05357142857142858], [1.73167166E12, 0.0892857142857143], [1.731671447E12, 0.09090909090909093], [1.731671529E12, 0.05660377358490568], [1.731671488E12, 0.054545454545454536], [1.731671398E12, 0.0784313725490196], [1.731671611E12, 0.10000000000000003], [1.73167157E12, 0.09615384615384617], [1.731671652E12, 0.0], [1.731671439E12, 0.08000000000000002], [1.731671521E12, 0.1153846153846154], [1.73167148E12, 0.09803921568627452], [1.73167139E12, 0.11111111111111113], [1.731671603E12, 0.01818181818181819], [1.731671562E12, 0.07407407407407408], [1.731671644E12, 0.07142857142857144], [1.731671431E12, 0.07272727272727274], [1.731671513E12, 0.054545454545454536], [1.731671472E12, 0.07142857142857142], [1.731671382E12, 0.13725490196078433], [1.731671595E12, 0.0], [1.731671554E12, 0.09090909090909094]], "isOverall": false, "label": "Products", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.73167168E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 4.0, "minX": 1.73167138E12, "maxY": 185.0, "series": [{"data": [[1.73167155E12, 13.0], [1.731671509E12, 13.0], [1.731671419E12, 15.0], [1.731671591E12, 13.0], [1.73167146E12, 13.0], [1.731671673E12, 12.0], [1.731671632E12, 12.0], [1.731671542E12, 13.0], [1.731671501E12, 13.0], [1.731671411E12, 13.0], [1.731671583E12, 12.0], [1.731671452E12, 13.0], [1.731671665E12, 13.0], [1.731671624E12, 12.0], [1.731671534E12, 14.0], [1.731671493E12, 14.0], [1.731671403E12, 19.0], [1.731671575E12, 13.0], [1.731671444E12, 12.0], [1.731671657E12, 12.0], [1.731671616E12, 16.0], [1.731671526E12, 13.0], [1.731671485E12, 13.0], [1.731671395E12, 14.0], [1.731671567E12, 12.0], [1.731671436E12, 13.0], [1.731671649E12, 13.0], [1.731671608E12, 12.0], [1.731671518E12, 13.0], [1.731671477E12, 12.0], [1.731671387E12, 13.0], [1.731671559E12, 13.0], [1.731671428E12, 15.0], [1.731671641E12, 12.0], [1.7316716E12, 13.0], [1.73167151E12, 12.0], [1.731671469E12, 16.0], [1.731671551E12, 12.0], [1.73167142E12, 13.0], [1.731671633E12, 12.0], [1.731671592E12, 12.0], [1.731671502E12, 14.0], [1.731671674E12, 12.0], [1.731671461E12, 13.0], [1.731671543E12, 13.0], [1.731671412E12, 13.0], [1.731671625E12, 13.0], [1.731671584E12, 16.0], [1.731671494E12, 13.0], [1.731671666E12, 13.0], [1.731671453E12, 13.0], [1.731671535E12, 14.0], [1.731671404E12, 12.0], [1.731671617E12, 12.0], [1.731671576E12, 13.0], [1.731671486E12, 13.0], [1.731671658E12, 17.0], [1.731671445E12, 14.0], [1.731671527E12, 13.0], [1.731671396E12, 13.0], [1.731671609E12, 14.0], [1.731671568E12, 13.0], [1.731671478E12, 12.0], [1.73167165E12, 12.0], [1.731671437E12, 13.0], [1.731671519E12, 20.0], [1.731671388E12, 25.0], [1.731671601E12, 13.0], [1.73167156E12, 12.0], [1.73167147E12, 13.0], [1.731671642E12, 12.0], [1.731671429E12, 12.0], [1.731671511E12, 13.0], [1.731671507E12, 13.0], [1.731671466E12, 13.0], [1.731671679E12, 12.0], [1.731671548E12, 17.0], [1.73167163E12, 12.0], [1.731671417E12, 12.0], [1.731671589E12, 13.0], [1.731671499E12, 13.0], [1.731671458E12, 14.0], [1.731671671E12, 13.0], [1.73167154E12, 13.0], [1.731671622E12, 13.0], [1.731671409E12, 13.0], [1.731671581E12, 12.0], [1.731671491E12, 13.0], [1.73167145E12, 12.0], [1.731671663E12, 12.0], [1.731671532E12, 14.0], [1.731671614E12, 12.0], [1.731671401E12, 14.0], [1.731671573E12, 12.0], [1.731671483E12, 14.0], [1.731671442E12, 13.0], [1.731671655E12, 13.0], [1.731671524E12, 13.0], [1.731671606E12, 12.0], [1.731671393E12, 18.0], [1.731671565E12, 12.0], [1.731671475E12, 15.0], [1.731671434E12, 12.0], [1.731671647E12, 13.0], [1.731671516E12, 12.0], [1.731671598E12, 15.0], [1.731671385E12, 13.0], [1.731671557E12, 13.0], [1.731671467E12, 13.0], [1.731671426E12, 13.0], [1.731671639E12, 13.0], [1.731671508E12, 13.0], [1.73167168E12, 13.0], [1.73167159E12, 12.0], [1.731671549E12, 13.0], [1.731671459E12, 12.0], [1.731671418E12, 14.0], [1.731671631E12, 12.0], [1.7316715E12, 17.0], [1.731671672E12, 15.0], [1.731671582E12, 12.0], [1.731671541E12, 13.0], [1.731671451E12, 13.0], [1.73167141E12, 14.0], [1.731671623E12, 13.0], [1.731671492E12, 14.0], [1.731671664E12, 13.0], [1.731671574E12, 13.0], [1.731671533E12, 13.0], [1.731671443E12, 13.0], [1.731671402E12, 13.0], [1.731671615E12, 11.0], [1.731671484E12, 12.0], [1.731671656E12, 12.0], [1.731671566E12, 12.0], [1.731671525E12, 12.0], [1.731671435E12, 12.0], [1.731671394E12, 13.0], [1.731671607E12, 12.0], [1.731671476E12, 13.0], [1.731671648E12, 12.0], [1.731671558E12, 19.0], [1.731671517E12, 13.0], [1.731671427E12, 12.0], [1.731671386E12, 13.0], [1.731671599E12, 13.0], [1.731671468E12, 13.0], [1.73167164E12, 12.0], [1.731671636E12, 13.0], [1.731671423E12, 13.0], [1.731671505E12, 13.0], [1.731671464E12, 13.0], [1.731671677E12, 13.0], [1.731671587E12, 23.0], [1.731671546E12, 15.0], [1.731671628E12, 12.0], [1.731671415E12, 12.0], [1.731671497E12, 13.0], [1.731671456E12, 12.0], [1.731671669E12, 14.0], [1.731671579E12, 13.0], [1.731671538E12, 15.0], [1.73167162E12, 13.0], [1.731671407E12, 13.0], [1.731671489E12, 12.0], [1.731671448E12, 14.0], [1.731671661E12, 12.0], [1.731671571E12, 13.0], [1.73167153E12, 12.0], [1.731671612E12, 13.0], [1.731671399E12, 13.0], [1.731671481E12, 12.0], [1.73167144E12, 13.0], [1.731671653E12, 12.0], [1.731671563E12, 15.0], [1.731671522E12, 12.0], [1.731671604E12, 12.0], [1.731671391E12, 13.0], [1.731671473E12, 16.0], [1.731671432E12, 13.0], [1.731671645E12, 12.0], [1.731671555E12, 12.0], [1.731671514E12, 13.0], [1.731671596E12, 14.0], [1.731671383E12, 14.0], [1.731671678E12, 13.0], [1.731671465E12, 13.0], [1.731671424E12, 13.0], [1.731671637E12, 13.0], [1.731671547E12, 13.0], [1.731671506E12, 12.0], [1.731671588E12, 12.0], [1.73167167E12, 17.0], [1.731671457E12, 12.0], [1.731671416E12, 12.0], [1.731671629E12, 13.0], [1.731671539E12, 13.0], [1.731671498E12, 12.0], [1.73167158E12, 12.0], [1.731671662E12, 14.0], [1.731671449E12, 12.0], [1.731671408E12, 16.0], [1.731671621E12, 12.0], [1.731671531E12, 13.0], [1.73167149E12, 14.0], [1.731671572E12, 12.0], [1.731671654E12, 12.0], [1.731671441E12, 13.0], [1.7316714E12, 13.0], [1.731671613E12, 18.0], [1.731671523E12, 13.0], [1.731671482E12, 12.0], [1.731671564E12, 12.0], [1.731671646E12, 13.0], [1.731671433E12, 14.0], [1.731671392E12, 13.0], [1.731671605E12, 12.0], [1.731671515E12, 12.0], [1.731671474E12, 12.0], [1.731671556E12, 13.0], [1.731671638E12, 13.0], [1.731671425E12, 14.0], [1.731671384E12, 17.0], [1.731671597E12, 12.0], [1.73167138E12, 185.0], [1.731671593E12, 13.0], [1.731671552E12, 12.0], [1.731671462E12, 14.0], [1.731671675E12, 13.0], [1.731671634E12, 12.0], [1.731671421E12, 13.0], [1.731671503E12, 13.0], [1.731671585E12, 12.0], [1.731671544E12, 13.0], [1.731671454E12, 17.0], [1.731671667E12, 13.0], [1.731671626E12, 13.0], [1.731671413E12, 13.0], [1.731671495E12, 13.0], [1.731671577E12, 12.0], [1.731671536E12, 13.0], [1.731671446E12, 12.0], [1.731671659E12, 12.0], [1.731671618E12, 12.0], [1.731671405E12, 12.0], [1.731671487E12, 12.0], [1.731671569E12, 14.0], [1.731671528E12, 12.0], [1.731671438E12, 17.0], [1.731671651E12, 13.0], [1.73167161E12, 13.0], [1.731671397E12, 15.0], [1.731671479E12, 12.0], [1.731671561E12, 12.0], [1.73167152E12, 13.0], [1.73167143E12, 13.0], [1.731671643E12, 13.0], [1.731671602E12, 13.0], [1.731671389E12, 13.0], [1.731671471E12, 12.0], [1.731671553E12, 20.0], [1.731671512E12, 13.0], [1.731671422E12, 13.0], [1.731671635E12, 13.0], [1.731671594E12, 13.0], [1.731671381E12, 33.0], [1.731671676E12, 13.0], [1.731671463E12, 13.0], [1.731671545E12, 12.0], [1.731671504E12, 13.0], [1.731671414E12, 13.0], [1.731671627E12, 14.0], [1.731671586E12, 12.0], [1.731671668E12, 18.0], [1.731671455E12, 13.0], [1.731671537E12, 13.0], [1.731671496E12, 12.0], [1.731671406E12, 14.0], [1.731671619E12, 13.0], [1.731671578E12, 13.0], [1.73167166E12, 12.0], [1.731671447E12, 13.0], [1.731671529E12, 14.0], [1.731671488E12, 13.0], [1.731671398E12, 13.0], [1.731671611E12, 12.0], [1.73167157E12, 12.0], [1.731671652E12, 14.0], [1.731671439E12, 13.0], [1.731671521E12, 13.0], [1.73167148E12, 12.0], [1.73167139E12, 13.0], [1.731671603E12, 12.0], [1.731671562E12, 12.0], [1.731671644E12, 13.0], [1.731671431E12, 12.0], [1.731671513E12, 17.0], [1.731671472E12, 13.0], [1.731671382E12, 14.0], [1.731671595E12, 12.0], [1.731671554E12, 12.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.73167155E12, 11.300000000000004], [1.731671509E12, 12.0], [1.731671419E12, 11.0], [1.731671591E12, 11.399999999999999], [1.73167146E12, 11.5], [1.731671673E12, 12.0], [1.731671632E12, 11.0], [1.731671542E12, 11.800000000000004], [1.731671501E12, 12.0], [1.731671411E12, 11.899999999999999], [1.731671583E12, 11.0], [1.731671452E12, 12.0], [1.731671665E12, 12.0], [1.731671624E12, 11.899999999999999], [1.731671534E12, 12.0], [1.731671493E12, 12.0], [1.731671403E12, 12.0], [1.731671575E12, 12.0], [1.731671444E12, 11.0], [1.731671657E12, 10.300000000000004], [1.731671616E12, 12.600000000000009], [1.731671526E12, 11.600000000000001], [1.731671485E12, 11.5], [1.731671395E12, 12.0], [1.731671567E12, 11.0], [1.731671436E12, 12.0], [1.731671649E12, 12.0], [1.731671608E12, 12.0], [1.731671518E12, 12.0], [1.731671477E12, 12.0], [1.731671387E12, 12.0], [1.731671559E12, 12.0], [1.731671428E12, 12.0], [1.731671641E12, 11.300000000000004], [1.7316716E12, 12.0], [1.73167151E12, 11.399999999999999], [1.731671469E12, 12.0], [1.731671551E12, 11.0], [1.73167142E12, 12.0], [1.731671633E12, 11.0], [1.731671592E12, 11.700000000000003], [1.731671502E12, 12.0], [1.731671674E12, 12.0], [1.731671461E12, 11.899999999999999], [1.731671543E12, 12.0], [1.731671412E12, 12.0], [1.731671625E12, 11.0], [1.731671584E12, 11.5], [1.731671494E12, 12.399999999999999], [1.731671666E12, 12.0], [1.731671453E12, 12.0], [1.731671535E12, 12.0], [1.731671404E12, 11.700000000000003], [1.731671617E12, 11.0], [1.731671576E12, 11.0], [1.731671486E12, 11.899999999999999], [1.731671658E12, 12.0], [1.731671445E12, 11.0], [1.731671527E12, 13.0], [1.731671396E12, 12.0], [1.731671609E12, 12.0], [1.731671568E12, 11.0], [1.731671478E12, 11.0], [1.73167165E12, 11.0], [1.731671437E12, 11.300000000000004], [1.731671519E12, 11.0], [1.731671388E12, 12.0], [1.731671601E12, 11.5], [1.73167156E12, 12.0], [1.73167147E12, 11.899999999999999], [1.731671642E12, 11.700000000000003], [1.731671429E12, 11.0], [1.731671511E12, 11.899999999999999], [1.731671507E12, 12.0], [1.731671466E12, 12.0], [1.731671679E12, 11.0], [1.731671548E12, 13.700000000000003], [1.73167163E12, 11.0], [1.731671417E12, 11.899999999999999], [1.731671589E12, 11.899999999999999], [1.731671499E12, 12.0], [1.731671458E12, 11.0], [1.731671671E12, 12.0], [1.73167154E12, 12.600000000000001], [1.731671622E12, 12.0], [1.731671409E12, 12.0], [1.731671581E12, 11.0], [1.731671491E12, 12.0], [1.73167145E12, 11.300000000000004], [1.731671663E12, 11.300000000000004], [1.731671532E12, 11.5], [1.731671614E12, 11.0], [1.731671401E12, 12.0], [1.731671573E12, 11.0], [1.731671483E12, 11.899999999999999], [1.731671442E12, 11.0], [1.731671655E12, 10.899999999999999], [1.731671524E12, 12.0], [1.731671606E12, 11.0], [1.731671393E12, 13.0], [1.731671565E12, 11.0], [1.731671475E12, 11.300000000000004], [1.731671434E12, 11.0], [1.731671647E12, 12.0], [1.731671516E12, 12.0], [1.731671598E12, 12.0], [1.731671385E12, 12.0], [1.731671557E12, 11.5], [1.731671467E12, 12.0], [1.731671426E12, 12.0], [1.731671639E12, 11.800000000000004], [1.731671508E12, 11.899999999999999], [1.73167168E12, 12.0], [1.73167159E12, 12.0], [1.731671549E12, 11.800000000000004], [1.731671459E12, 12.0], [1.731671418E12, 12.0], [1.731671631E12, 11.0], [1.7316715E12, 12.300000000000004], [1.731671672E12, 12.300000000000004], [1.731671582E12, 11.0], [1.731671541E12, 12.0], [1.731671451E12, 11.800000000000004], [1.73167141E12, 11.600000000000001], [1.731671623E12, 11.600000000000001], [1.731671492E12, 12.0], [1.731671664E12, 11.0], [1.731671574E12, 12.0], [1.731671533E12, 12.0], [1.731671443E12, 11.5], [1.731671402E12, 12.0], [1.731671615E12, 11.0], [1.731671484E12, 12.0], [1.731671656E12, 11.0], [1.731671566E12, 11.300000000000004], [1.731671525E12, 12.0], [1.731671435E12, 11.0], [1.731671394E12, 11.300000000000004], [1.731671607E12, 11.399999999999999], [1.731671476E12, 11.700000000000003], [1.731671648E12, 11.5], [1.731671558E12, 11.899999999999999], [1.731671517E12, 11.899999999999999], [1.731671427E12, 11.700000000000003], [1.731671386E12, 12.0], [1.731671599E12, 12.0], [1.731671468E12, 11.5], [1.73167164E12, 12.0], [1.731671636E12, 11.800000000000004], [1.731671423E12, 12.0], [1.731671505E12, 11.899999999999999], [1.731671464E12, 11.899999999999999], [1.731671677E12, 11.899999999999999], [1.731671587E12, 12.0], [1.731671546E12, 12.0], [1.731671628E12, 12.0], [1.731671415E12, 11.399999999999999], [1.731671497E12, 11.0], [1.731671456E12, 12.0], [1.731671669E12, 12.0], [1.731671579E12, 11.0], [1.731671538E12, 12.0], [1.73167162E12, 10.700000000000003], [1.731671407E12, 11.700000000000003], [1.731671489E12, 11.899999999999999], [1.731671448E12, 11.0], [1.731671661E12, 12.0], [1.731671571E12, 11.800000000000004], [1.73167153E12, 12.0], [1.731671612E12, 12.0], [1.731671399E12, 12.0], [1.731671481E12, 11.300000000000004], [1.73167144E12, 12.0], [1.731671653E12, 11.399999999999999], [1.731671563E12, 12.0], [1.731671522E12, 11.0], [1.731671604E12, 11.399999999999999], [1.731671391E12, 12.0], [1.731671473E12, 12.0], [1.731671432E12, 12.0], [1.731671645E12, 11.0], [1.731671555E12, 11.899999999999999], [1.731671514E12, 11.899999999999999], [1.731671596E12, 12.0], [1.731671383E12, 12.399999999999999], [1.731671678E12, 11.0], [1.731671465E12, 11.5], [1.731671424E12, 12.0], [1.731671637E12, 11.600000000000001], [1.731671547E12, 11.0], [1.731671506E12, 12.0], [1.731671588E12, 11.0], [1.73167167E12, 12.0], [1.731671457E12, 11.0], [1.731671416E12, 11.0], [1.731671629E12, 12.0], [1.731671539E12, 12.0], [1.731671498E12, 12.0], [1.73167158E12, 11.0], [1.731671662E12, 11.700000000000003], [1.731671449E12, 11.0], [1.731671408E12, 12.0], [1.731671621E12, 12.0], [1.731671531E12, 12.0], [1.73167149E12, 12.0], [1.731671572E12, 11.0], [1.731671654E12, 11.0], [1.731671441E12, 11.399999999999999], [1.7316714E12, 11.300000000000004], [1.731671613E12, 12.0], [1.731671523E12, 11.800000000000004], [1.731671482E12, 11.0], [1.731671564E12, 11.0], [1.731671646E12, 12.0], [1.731671433E12, 12.0], [1.731671392E12, 13.0], [1.731671605E12, 11.0], [1.731671515E12, 12.0], [1.731671474E12, 11.700000000000003], [1.731671556E12, 12.0], [1.731671638E12, 12.0], [1.731671425E12, 12.0], [1.731671384E12, 12.0], [1.731671597E12, 11.0], [1.73167138E12, 21.0], [1.731671593E12, 11.700000000000003], [1.731671552E12, 11.0], [1.731671462E12, 12.0], [1.731671675E12, 12.0], [1.731671634E12, 12.0], [1.731671421E12, 12.0], [1.731671503E12, 11.0], [1.731671585E12, 11.300000000000004], [1.731671544E12, 11.300000000000004], [1.731671454E12, 12.0], [1.731671667E12, 12.200000000000003], [1.731671626E12, 11.0], [1.731671413E12, 12.5], [1.731671495E12, 11.800000000000004], [1.731671577E12, 11.0], [1.731671536E12, 11.899999999999999], [1.731671446E12, 11.5], [1.731671659E12, 12.0], [1.731671618E12, 11.0], [1.731671405E12, 11.700000000000003], [1.731671487E12, 11.0], [1.731671569E12, 12.0], [1.731671528E12, 11.0], [1.731671438E12, 11.5], [1.731671651E12, 12.0], [1.73167161E12, 11.300000000000004], [1.731671397E12, 13.0], [1.731671479E12, 11.0], [1.731671561E12, 11.0], [1.73167152E12, 12.0], [1.73167143E12, 12.0], [1.731671643E12, 11.800000000000004], [1.731671602E12, 11.0], [1.731671389E12, 12.399999999999999], [1.731671471E12, 12.0], [1.731671553E12, 12.0], [1.731671512E12, 11.0], [1.731671422E12, 12.0], [1.731671635E12, 12.0], [1.731671594E12, 11.0], [1.731671381E12, 12.0], [1.731671676E12, 12.0], [1.731671463E12, 12.0], [1.731671545E12, 11.800000000000004], [1.731671504E12, 12.0], [1.731671414E12, 11.899999999999999], [1.731671627E12, 11.0], [1.731671586E12, 11.899999999999999], [1.731671668E12, 12.0], [1.731671455E12, 12.0], [1.731671537E12, 12.0], [1.731671496E12, 12.0], [1.731671406E12, 12.0], [1.731671619E12, 11.300000000000004], [1.731671578E12, 11.0], [1.73167166E12, 11.0], [1.731671447E12, 11.399999999999999], [1.731671529E12, 11.600000000000001], [1.731671488E12, 11.399999999999999], [1.731671398E12, 12.0], [1.731671611E12, 11.899999999999999], [1.73167157E12, 11.700000000000003], [1.731671652E12, 12.0], [1.731671439E12, 11.899999999999999], [1.731671521E12, 12.0], [1.73167148E12, 12.0], [1.73167139E12, 12.0], [1.731671603E12, 11.399999999999999], [1.731671562E12, 11.5], [1.731671644E12, 12.0], [1.731671431E12, 12.0], [1.731671513E12, 12.0], [1.731671472E12, 12.0], [1.731671382E12, 12.0], [1.731671595E12, 11.0], [1.731671554E12, 11.399999999999999]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.73167155E12, 13.0], [1.731671509E12, 13.0], [1.731671419E12, 15.0], [1.731671591E12, 13.0], [1.73167146E12, 13.0], [1.731671673E12, 12.0], [1.731671632E12, 12.0], [1.731671542E12, 13.0], [1.731671501E12, 13.0], [1.731671411E12, 13.0], [1.731671583E12, 12.0], [1.731671452E12, 13.0], [1.731671665E12, 13.0], [1.731671624E12, 12.0], [1.731671534E12, 14.0], [1.731671493E12, 14.0], [1.731671403E12, 19.0], [1.731671575E12, 13.0], [1.731671444E12, 12.0], [1.731671657E12, 12.0], [1.731671616E12, 16.0], [1.731671526E12, 13.0], [1.731671485E12, 13.0], [1.731671395E12, 14.0], [1.731671567E12, 12.0], [1.731671436E12, 13.0], [1.731671649E12, 13.0], [1.731671608E12, 12.0], [1.731671518E12, 13.0], [1.731671477E12, 12.0], [1.731671387E12, 13.0], [1.731671559E12, 13.0], [1.731671428E12, 15.0], [1.731671641E12, 12.0], [1.7316716E12, 13.0], [1.73167151E12, 12.0], [1.731671469E12, 16.0], [1.731671551E12, 12.0], [1.73167142E12, 13.0], [1.731671633E12, 12.0], [1.731671592E12, 12.0], [1.731671502E12, 14.0], [1.731671674E12, 12.0], [1.731671461E12, 13.0], [1.731671543E12, 13.0], [1.731671412E12, 13.0], [1.731671625E12, 13.0], [1.731671584E12, 16.0], [1.731671494E12, 13.0], [1.731671666E12, 13.0], [1.731671453E12, 13.0], [1.731671535E12, 14.0], [1.731671404E12, 12.0], [1.731671617E12, 12.0], [1.731671576E12, 13.0], [1.731671486E12, 13.0], [1.731671658E12, 17.0], [1.731671445E12, 14.0], [1.731671527E12, 13.0], [1.731671396E12, 13.0], [1.731671609E12, 14.0], [1.731671568E12, 13.0], [1.731671478E12, 12.0], [1.73167165E12, 12.0], [1.731671437E12, 13.0], [1.731671519E12, 20.0], [1.731671388E12, 25.0], [1.731671601E12, 13.0], [1.73167156E12, 12.0], [1.73167147E12, 13.0], [1.731671642E12, 12.0], [1.731671429E12, 12.0], [1.731671511E12, 13.0], [1.731671507E12, 13.0], [1.731671466E12, 13.0], [1.731671679E12, 12.0], [1.731671548E12, 17.0], [1.73167163E12, 12.0], [1.731671417E12, 12.0], [1.731671589E12, 13.0], [1.731671499E12, 13.0], [1.731671458E12, 14.0], [1.731671671E12, 13.0], [1.73167154E12, 13.0], [1.731671622E12, 13.0], [1.731671409E12, 13.0], [1.731671581E12, 12.0], [1.731671491E12, 13.0], [1.73167145E12, 12.0], [1.731671663E12, 12.0], [1.731671532E12, 14.0], [1.731671614E12, 12.0], [1.731671401E12, 14.0], [1.731671573E12, 12.0], [1.731671483E12, 14.0], [1.731671442E12, 13.0], [1.731671655E12, 13.0], [1.731671524E12, 13.0], [1.731671606E12, 12.0], [1.731671393E12, 18.0], [1.731671565E12, 12.0], [1.731671475E12, 15.0], [1.731671434E12, 12.0], [1.731671647E12, 13.0], [1.731671516E12, 12.0], [1.731671598E12, 15.0], [1.731671385E12, 13.0], [1.731671557E12, 13.0], [1.731671467E12, 13.0], [1.731671426E12, 13.0], [1.731671639E12, 13.0], [1.731671508E12, 13.0], [1.73167168E12, 13.0], [1.73167159E12, 12.0], [1.731671549E12, 13.0], [1.731671459E12, 12.0], [1.731671418E12, 14.0], [1.731671631E12, 12.0], [1.7316715E12, 17.0], [1.731671672E12, 15.0], [1.731671582E12, 12.0], [1.731671541E12, 13.0], [1.731671451E12, 13.0], [1.73167141E12, 14.0], [1.731671623E12, 13.0], [1.731671492E12, 14.0], [1.731671664E12, 13.0], [1.731671574E12, 13.0], [1.731671533E12, 13.0], [1.731671443E12, 13.0], [1.731671402E12, 13.0], [1.731671615E12, 11.0], [1.731671484E12, 12.0], [1.731671656E12, 12.0], [1.731671566E12, 12.0], [1.731671525E12, 12.0], [1.731671435E12, 12.0], [1.731671394E12, 13.0], [1.731671607E12, 12.0], [1.731671476E12, 13.0], [1.731671648E12, 12.0], [1.731671558E12, 19.0], [1.731671517E12, 13.0], [1.731671427E12, 12.0], [1.731671386E12, 13.0], [1.731671599E12, 13.0], [1.731671468E12, 13.0], [1.73167164E12, 12.0], [1.731671636E12, 13.0], [1.731671423E12, 13.0], [1.731671505E12, 13.0], [1.731671464E12, 13.0], [1.731671677E12, 13.0], [1.731671587E12, 23.0], [1.731671546E12, 15.0], [1.731671628E12, 12.0], [1.731671415E12, 12.0], [1.731671497E12, 13.0], [1.731671456E12, 12.0], [1.731671669E12, 14.0], [1.731671579E12, 13.0], [1.731671538E12, 15.0], [1.73167162E12, 13.0], [1.731671407E12, 13.0], [1.731671489E12, 12.0], [1.731671448E12, 14.0], [1.731671661E12, 12.0], [1.731671571E12, 13.0], [1.73167153E12, 12.0], [1.731671612E12, 13.0], [1.731671399E12, 13.0], [1.731671481E12, 12.0], [1.73167144E12, 13.0], [1.731671653E12, 12.0], [1.731671563E12, 15.0], [1.731671522E12, 12.0], [1.731671604E12, 12.0], [1.731671391E12, 13.0], [1.731671473E12, 16.0], [1.731671432E12, 13.0], [1.731671645E12, 12.0], [1.731671555E12, 12.0], [1.731671514E12, 13.0], [1.731671596E12, 14.0], [1.731671383E12, 14.0], [1.731671678E12, 13.0], [1.731671465E12, 13.0], [1.731671424E12, 13.0], [1.731671637E12, 13.0], [1.731671547E12, 13.0], [1.731671506E12, 12.0], [1.731671588E12, 12.0], [1.73167167E12, 17.0], [1.731671457E12, 12.0], [1.731671416E12, 12.0], [1.731671629E12, 13.0], [1.731671539E12, 13.0], [1.731671498E12, 12.0], [1.73167158E12, 12.0], [1.731671662E12, 14.0], [1.731671449E12, 12.0], [1.731671408E12, 16.0], [1.731671621E12, 12.0], [1.731671531E12, 13.0], [1.73167149E12, 14.0], [1.731671572E12, 12.0], [1.731671654E12, 12.0], [1.731671441E12, 13.0], [1.7316714E12, 13.0], [1.731671613E12, 18.0], [1.731671523E12, 13.0], [1.731671482E12, 12.0], [1.731671564E12, 12.0], [1.731671646E12, 13.0], [1.731671433E12, 14.0], [1.731671392E12, 13.0], [1.731671605E12, 12.0], [1.731671515E12, 12.0], [1.731671474E12, 12.0], [1.731671556E12, 13.0], [1.731671638E12, 13.0], [1.731671425E12, 14.0], [1.731671384E12, 17.0], [1.731671597E12, 12.0], [1.73167138E12, 185.0], [1.731671593E12, 13.0], [1.731671552E12, 12.0], [1.731671462E12, 14.0], [1.731671675E12, 13.0], [1.731671634E12, 12.0], [1.731671421E12, 13.0], [1.731671503E12, 13.0], [1.731671585E12, 12.0], [1.731671544E12, 13.0], [1.731671454E12, 17.0], [1.731671667E12, 13.0], [1.731671626E12, 13.0], [1.731671413E12, 13.0], [1.731671495E12, 13.0], [1.731671577E12, 12.0], [1.731671536E12, 13.0], [1.731671446E12, 12.0], [1.731671659E12, 12.0], [1.731671618E12, 12.0], [1.731671405E12, 12.0], [1.731671487E12, 12.0], [1.731671569E12, 14.0], [1.731671528E12, 12.0], [1.731671438E12, 17.0], [1.731671651E12, 13.0], [1.73167161E12, 13.0], [1.731671397E12, 15.0], [1.731671479E12, 12.0], [1.731671561E12, 12.0], [1.73167152E12, 13.0], [1.73167143E12, 13.0], [1.731671643E12, 13.0], [1.731671602E12, 13.0], [1.731671389E12, 13.0], [1.731671471E12, 12.0], [1.731671553E12, 20.0], [1.731671512E12, 13.0], [1.731671422E12, 13.0], [1.731671635E12, 13.0], [1.731671594E12, 13.0], [1.731671381E12, 33.0], [1.731671676E12, 13.0], [1.731671463E12, 13.0], [1.731671545E12, 12.0], [1.731671504E12, 13.0], [1.731671414E12, 13.0], [1.731671627E12, 14.0], [1.731671586E12, 12.0], [1.731671668E12, 18.0], [1.731671455E12, 13.0], [1.731671537E12, 13.0], [1.731671496E12, 12.0], [1.731671406E12, 14.0], [1.731671619E12, 13.0], [1.731671578E12, 13.0], [1.73167166E12, 12.0], [1.731671447E12, 13.0], [1.731671529E12, 14.0], [1.731671488E12, 13.0], [1.731671398E12, 13.0], [1.731671611E12, 12.0], [1.73167157E12, 12.0], [1.731671652E12, 14.0], [1.731671439E12, 13.0], [1.731671521E12, 13.0], [1.73167148E12, 12.0], [1.73167139E12, 13.0], [1.731671603E12, 12.0], [1.731671562E12, 12.0], [1.731671644E12, 13.0], [1.731671431E12, 12.0], [1.731671513E12, 17.0], [1.731671472E12, 13.0], [1.731671382E12, 14.0], [1.731671595E12, 12.0], [1.731671554E12, 12.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.73167155E12, 12.149999999999999], [1.731671509E12, 12.199999999999996], [1.731671419E12, 12.0], [1.731671591E12, 12.0], [1.73167146E12, 12.0], [1.731671673E12, 12.0], [1.731671632E12, 12.0], [1.731671542E12, 12.0], [1.731671501E12, 12.0], [1.731671411E12, 12.449999999999996], [1.731671583E12, 12.0], [1.731671452E12, 12.349999999999994], [1.731671665E12, 12.349999999999994], [1.731671624E12, 12.0], [1.731671534E12, 12.0], [1.731671493E12, 13.0], [1.731671403E12, 14.0], [1.731671575E12, 12.0], [1.731671444E12, 11.149999999999999], [1.731671657E12, 12.0], [1.731671616E12, 14.149999999999999], [1.731671526E12, 12.299999999999997], [1.731671485E12, 12.25], [1.731671395E12, 13.0], [1.731671567E12, 12.0], [1.731671436E12, 12.0], [1.731671649E12, 12.0], [1.731671608E12, 12.0], [1.731671518E12, 13.0], [1.731671477E12, 12.0], [1.731671387E12, 13.0], [1.731671559E12, 12.199999999999996], [1.731671428E12, 12.149999999999999], [1.731671641E12, 12.0], [1.7316716E12, 13.0], [1.73167151E12, 12.0], [1.731671469E12, 12.0], [1.731671551E12, 12.0], [1.73167142E12, 12.0], [1.731671633E12, 12.0], [1.731671592E12, 12.0], [1.731671502E12, 12.399999999999999], [1.731671674E12, 12.0], [1.731671461E12, 12.449999999999996], [1.731671543E12, 12.0], [1.731671412E12, 12.149999999999999], [1.731671625E12, 12.0], [1.731671584E12, 12.0], [1.731671494E12, 13.0], [1.731671666E12, 12.199999999999996], [1.731671453E12, 12.199999999999996], [1.731671535E12, 12.0], [1.731671404E12, 12.0], [1.731671617E12, 11.349999999999994], [1.731671576E12, 12.0], [1.731671486E12, 12.0], [1.731671658E12, 12.899999999999991], [1.731671445E12, 12.0], [1.731671527E12, 13.0], [1.731671396E12, 12.25], [1.731671609E12, 12.0], [1.731671568E12, 12.0], [1.731671478E12, 12.0], [1.73167165E12, 12.0], [1.731671437E12, 12.0], [1.731671519E12, 12.0], [1.731671388E12, 13.299999999999997], [1.731671601E12, 13.0], [1.73167156E12, 12.0], [1.73167147E12, 12.0], [1.731671642E12, 12.0], [1.731671429E12, 12.0], [1.731671511E12, 12.449999999999996], [1.731671507E12, 12.0], [1.731671466E12, 13.0], [1.731671679E12, 12.0], [1.731671548E12, 16.349999999999994], [1.73167163E12, 12.0], [1.731671417E12, 12.0], [1.731671589E12, 12.0], [1.731671499E12, 13.0], [1.731671458E12, 12.0], [1.731671671E12, 12.449999999999996], [1.73167154E12, 13.0], [1.731671622E12, 13.0], [1.731671409E12, 13.0], [1.731671581E12, 12.0], [1.731671491E12, 13.0], [1.73167145E12, 12.0], [1.731671663E12, 12.0], [1.731671532E12, 13.0], [1.731671614E12, 12.0], [1.731671401E12, 12.399999999999999], [1.731671573E12, 12.0], [1.731671483E12, 12.0], [1.731671442E12, 12.0], [1.731671655E12, 12.0], [1.731671524E12, 12.0], [1.731671606E12, 12.0], [1.731671393E12, 13.25], [1.731671565E12, 12.0], [1.731671475E12, 12.149999999999999], [1.731671434E12, 12.0], [1.731671647E12, 12.0], [1.731671516E12, 12.0], [1.731671598E12, 13.299999999999997], [1.731671385E12, 13.0], [1.731671557E12, 12.0], [1.731671467E12, 12.0], [1.731671426E12, 12.0], [1.731671639E12, 12.399999999999999], [1.731671508E12, 13.0], [1.73167168E12, 12.449999999999996], [1.73167159E12, 12.0], [1.731671549E12, 12.0], [1.731671459E12, 12.0], [1.731671418E12, 13.0], [1.731671631E12, 11.25], [1.7316715E12, 15.0], [1.731671672E12, 13.0], [1.731671582E12, 12.0], [1.731671541E12, 13.0], [1.731671451E12, 12.0], [1.73167141E12, 12.299999999999997], [1.731671623E12, 12.0], [1.731671492E12, 12.399999999999999], [1.731671664E12, 12.349999999999994], [1.731671574E12, 12.0], [1.731671533E12, 12.449999999999996], [1.731671443E12, 12.0], [1.731671402E12, 13.0], [1.731671615E12, 11.0], [1.731671484E12, 12.0], [1.731671656E12, 12.0], [1.731671566E12, 12.0], [1.731671525E12, 12.0], [1.731671435E12, 12.0], [1.731671394E12, 12.0], [1.731671607E12, 12.0], [1.731671476E12, 12.0], [1.731671648E12, 12.0], [1.731671558E12, 12.0], [1.731671517E12, 12.0], [1.731671427E12, 12.0], [1.731671386E12, 13.0], [1.731671599E12, 12.0], [1.731671468E12, 12.0], [1.73167164E12, 12.0], [1.731671636E12, 12.0], [1.731671423E12, 13.0], [1.731671505E12, 12.449999999999996], [1.731671464E12, 12.0], [1.731671677E12, 12.0], [1.731671587E12, 12.0], [1.731671546E12, 12.349999999999994], [1.731671628E12, 12.0], [1.731671415E12, 12.0], [1.731671497E12, 12.149999999999999], [1.731671456E12, 12.0], [1.731671669E12, 13.149999999999999], [1.731671579E12, 11.25], [1.731671538E12, 12.0], [1.73167162E12, 12.0], [1.731671407E12, 12.349999999999994], [1.731671489E12, 12.0], [1.731671448E12, 12.399999999999999], [1.731671661E12, 12.0], [1.731671571E12, 12.399999999999999], [1.73167153E12, 12.0], [1.731671612E12, 12.0], [1.731671399E12, 12.299999999999997], [1.731671481E12, 12.0], [1.73167144E12, 12.0], [1.731671653E12, 12.0], [1.731671563E12, 12.0], [1.731671522E12, 12.0], [1.731671604E12, 12.0], [1.731671391E12, 13.0], [1.731671473E12, 13.0], [1.731671432E12, 12.25], [1.731671645E12, 12.0], [1.731671555E12, 12.0], [1.731671514E12, 12.0], [1.731671596E12, 12.0], [1.731671383E12, 13.0], [1.731671678E12, 12.25], [1.731671465E12, 13.0], [1.731671424E12, 12.0], [1.731671637E12, 13.0], [1.731671547E12, 12.0], [1.731671506E12, 12.0], [1.731671588E12, 12.0], [1.73167167E12, 13.0], [1.731671457E12, 12.0], [1.731671416E12, 12.0], [1.731671629E12, 12.199999999999996], [1.731671539E12, 13.0], [1.731671498E12, 12.0], [1.73167158E12, 11.449999999999996], [1.731671662E12, 13.0], [1.731671449E12, 12.0], [1.731671408E12, 12.399999999999999], [1.731671621E12, 12.0], [1.731671531E12, 13.0], [1.73167149E12, 12.0], [1.731671572E12, 12.0], [1.731671654E12, 12.0], [1.731671441E12, 12.0], [1.7316714E12, 12.0], [1.731671613E12, 13.299999999999997], [1.731671523E12, 12.399999999999999], [1.731671482E12, 12.0], [1.731671564E12, 12.0], [1.731671646E12, 12.0], [1.731671433E12, 13.0], [1.731671392E12, 13.0], [1.731671605E12, 12.0], [1.731671515E12, 12.0], [1.731671474E12, 12.0], [1.731671556E12, 12.0], [1.731671638E12, 12.149999999999999], [1.731671425E12, 13.0], [1.731671384E12, 13.0], [1.731671597E12, 12.0], [1.73167138E12, 179.04999999999998], [1.731671593E12, 12.0], [1.731671552E12, 12.0], [1.731671462E12, 12.199999999999996], [1.731671675E12, 12.199999999999996], [1.731671634E12, 12.0], [1.731671421E12, 12.0], [1.731671503E12, 12.0], [1.731671585E12, 12.0], [1.731671544E12, 12.149999999999999], [1.731671454E12, 12.899999999999991], [1.731671667E12, 13.0], [1.731671626E12, 12.0], [1.731671413E12, 13.0], [1.731671495E12, 12.399999999999999], [1.731671577E12, 12.0], [1.731671536E12, 12.449999999999996], [1.731671446E12, 12.0], [1.731671659E12, 12.0], [1.731671618E12, 12.0], [1.731671405E12, 12.0], [1.731671487E12, 11.199999999999996], [1.731671569E12, 13.0], [1.731671528E12, 12.0], [1.731671438E12, 13.0], [1.731671651E12, 12.0], [1.73167161E12, 12.0], [1.731671397E12, 13.199999999999996], [1.731671479E12, 12.0], [1.731671561E12, 12.0], [1.73167152E12, 12.0], [1.73167143E12, 12.399999999999999], [1.731671643E12, 12.0], [1.731671602E12, 12.0], [1.731671389E12, 13.0], [1.731671471E12, 12.0], [1.731671553E12, 13.599999999999987], [1.731671512E12, 12.0], [1.731671422E12, 12.0], [1.731671635E12, 12.0], [1.731671594E12, 11.149999999999999], [1.731671381E12, 13.0], [1.731671676E12, 12.199999999999996], [1.731671463E12, 12.0], [1.731671545E12, 12.0], [1.731671504E12, 12.299999999999997], [1.731671414E12, 12.449999999999996], [1.731671627E12, 12.0], [1.731671586E12, 12.0], [1.731671668E12, 13.0], [1.731671455E12, 13.0], [1.731671537E12, 13.0], [1.731671496E12, 12.0], [1.731671406E12, 12.149999999999999], [1.731671619E12, 12.0], [1.731671578E12, 12.0], [1.73167166E12, 11.149999999999999], [1.731671447E12, 12.199999999999996], [1.731671529E12, 12.299999999999997], [1.731671488E12, 12.199999999999996], [1.731671398E12, 13.0], [1.731671611E12, 12.0], [1.73167157E12, 12.0], [1.731671652E12, 13.449999999999996], [1.731671439E12, 12.0], [1.731671521E12, 12.0], [1.73167148E12, 12.0], [1.73167139E12, 13.0], [1.731671603E12, 12.0], [1.731671562E12, 12.0], [1.731671644E12, 12.0], [1.731671431E12, 12.0], [1.731671513E12, 15.199999999999996], [1.731671472E12, 12.149999999999999], [1.731671382E12, 12.399999999999999], [1.731671595E12, 12.0], [1.731671554E12, 12.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.73167155E12, 10.0], [1.731671509E12, 10.0], [1.731671419E12, 9.0], [1.731671591E12, 10.0], [1.73167146E12, 9.0], [1.731671673E12, 9.0], [1.731671632E12, 10.0], [1.731671542E12, 9.0], [1.731671501E12, 9.0], [1.731671411E12, 9.0], [1.731671583E12, 9.0], [1.731671452E12, 10.0], [1.731671665E12, 10.0], [1.731671624E12, 9.0], [1.731671534E12, 10.0], [1.731671493E12, 4.0], [1.731671403E12, 10.0], [1.731671575E12, 10.0], [1.731671444E12, 9.0], [1.731671657E12, 9.0], [1.731671616E12, 10.0], [1.731671526E12, 9.0], [1.731671485E12, 10.0], [1.731671395E12, 10.0], [1.731671567E12, 9.0], [1.731671436E12, 4.0], [1.731671649E12, 9.0], [1.731671608E12, 10.0], [1.731671518E12, 9.0], [1.731671477E12, 9.0], [1.731671387E12, 10.0], [1.731671559E12, 5.0], [1.731671428E12, 9.0], [1.731671641E12, 9.0], [1.7316716E12, 10.0], [1.73167151E12, 10.0], [1.731671469E12, 9.0], [1.731671551E12, 9.0], [1.73167142E12, 9.0], [1.731671633E12, 9.0], [1.731671592E12, 9.0], [1.731671502E12, 4.0], [1.731671674E12, 9.0], [1.731671461E12, 10.0], [1.731671543E12, 9.0], [1.731671412E12, 9.0], [1.731671625E12, 4.0], [1.731671584E12, 9.0], [1.731671494E12, 10.0], [1.731671666E12, 10.0], [1.731671453E12, 9.0], [1.731671535E12, 10.0], [1.731671404E12, 10.0], [1.731671617E12, 9.0], [1.731671576E12, 9.0], [1.731671486E12, 9.0], [1.731671658E12, 9.0], [1.731671445E12, 9.0], [1.731671527E12, 10.0], [1.731671396E12, 10.0], [1.731671609E12, 10.0], [1.731671568E12, 6.0], [1.731671478E12, 9.0], [1.73167165E12, 9.0], [1.731671437E12, 9.0], [1.731671519E12, 10.0], [1.731671388E12, 10.0], [1.731671601E12, 10.0], [1.73167156E12, 10.0], [1.73167147E12, 10.0], [1.731671642E12, 9.0], [1.731671429E12, 9.0], [1.731671511E12, 9.0], [1.731671507E12, 9.0], [1.731671466E12, 10.0], [1.731671679E12, 9.0], [1.731671548E12, 9.0], [1.73167163E12, 9.0], [1.731671417E12, 4.0], [1.731671589E12, 9.0], [1.731671499E12, 9.0], [1.731671458E12, 10.0], [1.731671671E12, 9.0], [1.73167154E12, 4.0], [1.731671622E12, 10.0], [1.731671409E12, 9.0], [1.731671581E12, 9.0], [1.731671491E12, 10.0], [1.73167145E12, 9.0], [1.731671663E12, 9.0], [1.731671532E12, 9.0], [1.731671614E12, 9.0], [1.731671401E12, 10.0], [1.731671573E12, 9.0], [1.731671483E12, 5.0], [1.731671442E12, 9.0], [1.731671655E12, 9.0], [1.731671524E12, 9.0], [1.731671606E12, 4.0], [1.731671393E12, 10.0], [1.731671565E12, 9.0], [1.731671475E12, 10.0], [1.731671434E12, 9.0], [1.731671647E12, 10.0], [1.731671516E12, 9.0], [1.731671598E12, 10.0], [1.731671385E12, 10.0], [1.731671557E12, 10.0], [1.731671467E12, 10.0], [1.731671426E12, 9.0], [1.731671639E12, 10.0], [1.731671508E12, 10.0], [1.73167168E12, 9.0], [1.73167159E12, 9.0], [1.731671549E12, 4.0], [1.731671459E12, 10.0], [1.731671418E12, 9.0], [1.731671631E12, 10.0], [1.7316715E12, 10.0], [1.731671672E12, 5.0], [1.731671582E12, 9.0], [1.731671541E12, 10.0], [1.731671451E12, 9.0], [1.73167141E12, 10.0], [1.731671623E12, 9.0], [1.731671492E12, 9.0], [1.731671664E12, 9.0], [1.731671574E12, 9.0], [1.731671533E12, 9.0], [1.731671443E12, 10.0], [1.731671402E12, 10.0], [1.731671615E12, 5.0], [1.731671484E12, 9.0], [1.731671656E12, 9.0], [1.731671566E12, 9.0], [1.731671525E12, 9.0], [1.731671435E12, 9.0], [1.731671394E12, 10.0], [1.731671607E12, 10.0], [1.731671476E12, 10.0], [1.731671648E12, 9.0], [1.731671558E12, 9.0], [1.731671517E12, 9.0], [1.731671427E12, 4.0], [1.731671386E12, 10.0], [1.731671599E12, 10.0], [1.731671468E12, 10.0], [1.73167164E12, 9.0], [1.731671636E12, 9.0], [1.731671423E12, 9.0], [1.731671505E12, 9.0], [1.731671464E12, 5.0], [1.731671677E12, 9.0], [1.731671587E12, 4.0], [1.731671546E12, 9.0], [1.731671628E12, 9.0], [1.731671415E12, 9.0], [1.731671497E12, 9.0], [1.731671456E12, 9.0], [1.731671669E12, 9.0], [1.731671579E12, 9.0], [1.731671538E12, 9.0], [1.73167162E12, 9.0], [1.731671407E12, 10.0], [1.731671489E12, 10.0], [1.731671448E12, 9.0], [1.731671661E12, 9.0], [1.731671571E12, 10.0], [1.73167153E12, 5.0], [1.731671612E12, 9.0], [1.731671399E12, 4.0], [1.731671481E12, 9.0], [1.73167144E12, 9.0], [1.731671653E12, 4.0], [1.731671563E12, 10.0], [1.731671522E12, 9.0], [1.731671604E12, 9.0], [1.731671391E12, 10.0], [1.731671473E12, 10.0], [1.731671432E12, 9.0], [1.731671645E12, 9.0], [1.731671555E12, 9.0], [1.731671514E12, 10.0], [1.731671596E12, 4.0], [1.731671383E12, 10.0], [1.731671678E12, 9.0], [1.731671465E12, 9.0], [1.731671424E12, 9.0], [1.731671637E12, 9.0], [1.731671547E12, 9.0], [1.731671506E12, 10.0], [1.731671588E12, 9.0], [1.73167167E12, 10.0], [1.731671457E12, 10.0], [1.731671416E12, 10.0], [1.731671629E12, 9.0], [1.731671539E12, 9.0], [1.731671498E12, 9.0], [1.73167158E12, 9.0], [1.731671662E12, 6.0], [1.731671449E12, 10.0], [1.731671408E12, 5.0], [1.731671621E12, 9.0], [1.731671531E12, 10.0], [1.73167149E12, 9.0], [1.731671572E12, 10.0], [1.731671654E12, 9.0], [1.731671441E12, 9.0], [1.7316714E12, 10.0], [1.731671613E12, 9.0], [1.731671523E12, 10.0], [1.731671482E12, 9.0], [1.731671564E12, 9.0], [1.731671646E12, 9.0], [1.731671433E12, 10.0], [1.731671392E12, 10.0], [1.731671605E12, 9.0], [1.731671515E12, 10.0], [1.731671474E12, 6.0], [1.731671556E12, 9.0], [1.731671638E12, 9.0], [1.731671425E12, 10.0], [1.731671384E12, 10.0], [1.731671597E12, 9.0], [1.73167138E12, 10.0], [1.731671593E12, 10.0], [1.731671552E12, 9.0], [1.731671462E12, 10.0], [1.731671675E12, 9.0], [1.731671634E12, 4.0], [1.731671421E12, 9.0], [1.731671503E12, 9.0], [1.731671585E12, 9.0], [1.731671544E12, 10.0], [1.731671454E12, 9.0], [1.731671667E12, 10.0], [1.731671626E12, 9.0], [1.731671413E12, 9.0], [1.731671495E12, 10.0], [1.731671577E12, 9.0], [1.731671536E12, 9.0], [1.731671446E12, 4.0], [1.731671659E12, 9.0], [1.731671618E12, 9.0], [1.731671405E12, 9.0], [1.731671487E12, 9.0], [1.731671569E12, 10.0], [1.731671528E12, 9.0], [1.731671438E12, 9.0], [1.731671651E12, 9.0], [1.73167161E12, 9.0], [1.731671397E12, 10.0], [1.731671479E12, 9.0], [1.731671561E12, 9.0], [1.73167152E12, 9.0], [1.73167143E12, 10.0], [1.731671643E12, 4.0], [1.731671602E12, 10.0], [1.731671389E12, 5.0], [1.731671471E12, 9.0], [1.731671553E12, 9.0], [1.731671512E12, 4.0], [1.731671422E12, 9.0], [1.731671635E12, 9.0], [1.731671594E12, 10.0], [1.731671381E12, 10.0], [1.731671676E12, 9.0], [1.731671463E12, 9.0], [1.731671545E12, 9.0], [1.731671504E12, 10.0], [1.731671414E12, 9.0], [1.731671627E12, 9.0], [1.731671586E12, 9.0], [1.731671668E12, 10.0], [1.731671455E12, 5.0], [1.731671537E12, 10.0], [1.731671496E12, 9.0], [1.731671406E12, 10.0], [1.731671619E12, 9.0], [1.731671578E12, 5.0], [1.73167166E12, 9.0], [1.731671447E12, 9.0], [1.731671529E12, 9.0], [1.731671488E12, 9.0], [1.731671398E12, 10.0], [1.731671611E12, 9.0], [1.73167157E12, 9.0], [1.731671652E12, 9.0], [1.731671439E12, 9.0], [1.731671521E12, 4.0], [1.73167148E12, 9.0], [1.73167139E12, 10.0], [1.731671603E12, 9.0], [1.731671562E12, 9.0], [1.731671644E12, 10.0], [1.731671431E12, 10.0], [1.731671513E12, 9.0], [1.731671472E12, 10.0], [1.731671382E12, 10.0], [1.731671595E12, 9.0], [1.731671554E12, 10.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.73167155E12, 10.0], [1.731671509E12, 10.0], [1.731671419E12, 10.0], [1.731671591E12, 10.0], [1.73167146E12, 10.0], [1.731671673E12, 10.0], [1.731671632E12, 10.0], [1.731671542E12, 10.0], [1.731671501E12, 10.0], [1.731671411E12, 10.0], [1.731671583E12, 10.0], [1.731671452E12, 10.0], [1.731671665E12, 11.0], [1.731671624E12, 10.0], [1.731671534E12, 10.0], [1.731671493E12, 10.0], [1.731671403E12, 11.0], [1.731671575E12, 10.0], [1.731671444E12, 10.0], [1.731671657E12, 10.0], [1.731671616E12, 10.0], [1.731671526E12, 10.0], [1.731671485E12, 10.0], [1.731671395E12, 10.0], [1.731671567E12, 10.0], [1.731671436E12, 10.0], [1.731671649E12, 10.0], [1.731671608E12, 10.0], [1.731671518E12, 10.0], [1.731671477E12, 10.0], [1.731671387E12, 11.0], [1.731671559E12, 10.0], [1.731671428E12, 10.0], [1.731671641E12, 10.0], [1.7316716E12, 10.0], [1.73167151E12, 10.0], [1.731671469E12, 10.0], [1.731671551E12, 10.0], [1.73167142E12, 10.0], [1.731671633E12, 10.0], [1.731671592E12, 10.0], [1.731671502E12, 10.0], [1.731671674E12, 10.0], [1.731671461E12, 11.0], [1.731671543E12, 10.0], [1.731671412E12, 10.0], [1.731671625E12, 10.0], [1.731671584E12, 10.0], [1.731671494E12, 10.0], [1.731671666E12, 11.0], [1.731671453E12, 10.0], [1.731671535E12, 10.0], [1.731671404E12, 10.0], [1.731671617E12, 10.0], [1.731671576E12, 10.0], [1.731671486E12, 10.0], [1.731671658E12, 10.0], [1.731671445E12, 10.0], [1.731671527E12, 11.0], [1.731671396E12, 11.0], [1.731671609E12, 10.0], [1.731671568E12, 10.0], [1.731671478E12, 10.0], [1.73167165E12, 10.0], [1.731671437E12, 10.0], [1.731671519E12, 10.0], [1.731671388E12, 11.0], [1.731671601E12, 10.0], [1.73167156E12, 10.0], [1.73167147E12, 10.0], [1.731671642E12, 10.0], [1.731671429E12, 10.0], [1.731671511E12, 10.0], [1.731671507E12, 10.0], [1.731671466E12, 11.0], [1.731671679E12, 10.0], [1.731671548E12, 10.0], [1.73167163E12, 10.0], [1.731671417E12, 10.0], [1.731671589E12, 10.0], [1.731671499E12, 10.0], [1.731671458E12, 10.0], [1.731671671E12, 10.0], [1.73167154E12, 11.0], [1.731671622E12, 10.0], [1.731671409E12, 10.5], [1.731671581E12, 10.0], [1.731671491E12, 11.0], [1.73167145E12, 10.0], [1.731671663E12, 10.0], [1.731671532E12, 10.0], [1.731671614E12, 10.0], [1.731671401E12, 10.0], [1.731671573E12, 10.0], [1.731671483E12, 10.0], [1.731671442E12, 10.0], [1.731671655E12, 10.0], [1.731671524E12, 10.0], [1.731671606E12, 10.0], [1.731671393E12, 11.0], [1.731671565E12, 10.0], [1.731671475E12, 10.0], [1.731671434E12, 10.0], [1.731671647E12, 10.0], [1.731671516E12, 10.0], [1.731671598E12, 11.0], [1.731671385E12, 11.0], [1.731671557E12, 10.0], [1.731671467E12, 10.0], [1.731671426E12, 10.0], [1.731671639E12, 10.0], [1.731671508E12, 10.0], [1.73167168E12, 10.0], [1.73167159E12, 10.0], [1.731671549E12, 10.0], [1.731671459E12, 10.0], [1.731671418E12, 11.0], [1.731671631E12, 10.0], [1.7316715E12, 10.0], [1.731671672E12, 10.5], [1.731671582E12, 10.0], [1.731671541E12, 11.0], [1.731671451E12, 10.0], [1.73167141E12, 10.0], [1.731671623E12, 10.0], [1.731671492E12, 10.0], [1.731671664E12, 10.0], [1.731671574E12, 10.0], [1.731671533E12, 10.0], [1.731671443E12, 10.0], [1.731671402E12, 11.0], [1.731671615E12, 10.0], [1.731671484E12, 10.0], [1.731671656E12, 10.0], [1.731671566E12, 10.0], [1.731671525E12, 10.0], [1.731671435E12, 10.0], [1.731671394E12, 10.0], [1.731671607E12, 10.0], [1.731671476E12, 10.0], [1.731671648E12, 10.0], [1.731671558E12, 10.0], [1.731671517E12, 10.0], [1.731671427E12, 10.0], [1.731671386E12, 11.0], [1.731671599E12, 11.0], [1.731671468E12, 10.0], [1.73167164E12, 10.0], [1.731671636E12, 10.0], [1.731671423E12, 10.0], [1.731671505E12, 10.0], [1.731671464E12, 10.0], [1.731671677E12, 10.0], [1.731671587E12, 10.0], [1.731671546E12, 10.0], [1.731671628E12, 10.0], [1.731671415E12, 10.0], [1.731671497E12, 10.0], [1.731671456E12, 10.0], [1.731671669E12, 10.0], [1.731671579E12, 10.0], [1.731671538E12, 10.0], [1.73167162E12, 10.0], [1.731671407E12, 10.0], [1.731671489E12, 10.0], [1.731671448E12, 10.0], [1.731671661E12, 10.0], [1.731671571E12, 10.0], [1.73167153E12, 10.0], [1.731671612E12, 10.0], [1.731671399E12, 10.0], [1.731671481E12, 10.0], [1.73167144E12, 10.0], [1.731671653E12, 10.0], [1.731671563E12, 10.0], [1.731671522E12, 10.0], [1.731671604E12, 10.0], [1.731671391E12, 11.0], [1.731671473E12, 10.0], [1.731671432E12, 10.5], [1.731671645E12, 10.0], [1.731671555E12, 10.0], [1.731671514E12, 10.0], [1.731671596E12, 10.0], [1.731671383E12, 11.0], [1.731671678E12, 10.0], [1.731671465E12, 10.0], [1.731671424E12, 10.0], [1.731671637E12, 10.0], [1.731671547E12, 10.0], [1.731671506E12, 10.0], [1.731671588E12, 10.0], [1.73167167E12, 10.0], [1.731671457E12, 10.0], [1.731671416E12, 10.0], [1.731671629E12, 10.0], [1.731671539E12, 10.0], [1.731671498E12, 10.0], [1.73167158E12, 10.0], [1.731671662E12, 10.0], [1.731671449E12, 10.0], [1.731671408E12, 10.0], [1.731671621E12, 10.0], [1.731671531E12, 10.0], [1.73167149E12, 10.0], [1.731671572E12, 10.0], [1.731671654E12, 10.0], [1.731671441E12, 10.0], [1.7316714E12, 10.0], [1.731671613E12, 10.0], [1.731671523E12, 10.0], [1.731671482E12, 10.0], [1.731671564E12, 10.0], [1.731671646E12, 10.0], [1.731671433E12, 11.0], [1.731671392E12, 11.0], [1.731671605E12, 10.0], [1.731671515E12, 10.0], [1.731671474E12, 10.0], [1.731671556E12, 10.0], [1.731671638E12, 10.0], [1.731671425E12, 11.0], [1.731671384E12, 11.0], [1.731671597E12, 10.0], [1.73167138E12, 12.5], [1.731671593E12, 10.0], [1.731671552E12, 10.0], [1.731671462E12, 10.0], [1.731671675E12, 10.0], [1.731671634E12, 10.0], [1.731671421E12, 10.0], [1.731671503E12, 10.0], [1.731671585E12, 10.0], [1.731671544E12, 10.0], [1.731671454E12, 10.0], [1.731671667E12, 11.0], [1.731671626E12, 10.0], [1.731671413E12, 11.0], [1.731671495E12, 10.0], [1.731671577E12, 10.0], [1.731671536E12, 10.0], [1.731671446E12, 10.0], [1.731671659E12, 10.0], [1.731671618E12, 10.0], [1.731671405E12, 10.0], [1.731671487E12, 10.0], [1.731671569E12, 10.0], [1.731671528E12, 10.0], [1.731671438E12, 10.0], [1.731671651E12, 10.0], [1.73167161E12, 10.0], [1.731671397E12, 11.0], [1.731671479E12, 10.0], [1.731671561E12, 10.0], [1.73167152E12, 10.0], [1.73167143E12, 10.0], [1.731671643E12, 10.0], [1.731671602E12, 10.0], [1.731671389E12, 11.0], [1.731671471E12, 10.0], [1.731671553E12, 10.0], [1.731671512E12, 10.0], [1.731671422E12, 10.0], [1.731671635E12, 10.0], [1.731671594E12, 10.0], [1.731671381E12, 11.0], [1.731671676E12, 10.0], [1.731671463E12, 10.0], [1.731671545E12, 10.0], [1.731671504E12, 10.0], [1.731671414E12, 10.0], [1.731671627E12, 10.0], [1.731671586E12, 10.0], [1.731671668E12, 10.0], [1.731671455E12, 10.0], [1.731671537E12, 10.0], [1.731671496E12, 10.0], [1.731671406E12, 10.0], [1.731671619E12, 10.0], [1.731671578E12, 10.0], [1.73167166E12, 10.0], [1.731671447E12, 10.0], [1.731671529E12, 10.0], [1.731671488E12, 10.0], [1.731671398E12, 11.0], [1.731671611E12, 10.0], [1.73167157E12, 10.0], [1.731671652E12, 10.0], [1.731671439E12, 10.0], [1.731671521E12, 10.0], [1.73167148E12, 10.0], [1.73167139E12, 11.0], [1.731671603E12, 10.0], [1.731671562E12, 10.0], [1.731671644E12, 10.0], [1.731671431E12, 10.0], [1.731671513E12, 10.0], [1.731671472E12, 10.0], [1.731671382E12, 11.0], [1.731671595E12, 10.0], [1.731671554E12, 10.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.73167168E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 10.0, "minX": 36.0, "maxY": 12.5, "series": [{"data": [[36.0, 12.5], [51.0, 10.0], [50.0, 10.0], [52.0, 10.0], [53.0, 10.0], [54.0, 10.0], [55.0, 10.0], [57.0, 10.0], [56.0, 10.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 57.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 10.0, "minX": 36.0, "maxY": 12.5, "series": [{"data": [[36.0, 12.5], [51.0, 10.0], [50.0, 10.0], [52.0, 10.0], [53.0, 10.0], [54.0, 10.0], [55.0, 10.0], [57.0, 10.0], [56.0, 10.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 57.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 37.0, "minX": 1.73167138E12, "maxY": 57.0, "series": [{"data": [[1.73167155E12, 56.0], [1.731671509E12, 55.0], [1.731671419E12, 55.0], [1.731671591E12, 55.0], [1.73167146E12, 53.0], [1.731671673E12, 53.0], [1.731671632E12, 55.0], [1.731671542E12, 50.0], [1.731671501E12, 51.0], [1.731671411E12, 51.0], [1.731671583E12, 50.0], [1.731671452E12, 53.0], [1.731671665E12, 53.0], [1.731671624E12, 51.0], [1.731671534E12, 56.0], [1.731671493E12, 55.0], [1.731671403E12, 56.0], [1.731671575E12, 56.0], [1.731671444E12, 55.0], [1.731671657E12, 55.0], [1.731671616E12, 56.0], [1.731671526E12, 52.0], [1.731671485E12, 53.0], [1.731671395E12, 50.0], [1.731671567E12, 50.0], [1.731671436E12, 51.0], [1.731671649E12, 51.0], [1.731671608E12, 50.0], [1.731671518E12, 54.0], [1.731671477E12, 52.0], [1.731671387E12, 52.0], [1.731671559E12, 56.0], [1.731671428E12, 56.0], [1.731671641E12, 56.0], [1.7316716E12, 56.0], [1.73167151E12, 54.0], [1.731671469E12, 55.0], [1.731671551E12, 52.0], [1.73167142E12, 50.0], [1.731671633E12, 50.0], [1.731671592E12, 51.0], [1.731671502E12, 52.0], [1.731671674E12, 50.0], [1.731671461E12, 51.0], [1.731671543E12, 54.0], [1.731671412E12, 56.0], [1.731671625E12, 56.0], [1.731671584E12, 55.0], [1.731671494E12, 55.0], [1.731671666E12, 55.0], [1.731671453E12, 55.0], [1.731671535E12, 54.0], [1.731671404E12, 51.0], [1.731671617E12, 51.0], [1.731671576E12, 52.0], [1.731671486E12, 50.0], [1.731671658E12, 50.0], [1.731671445E12, 50.0], [1.731671527E12, 52.0], [1.731671396E12, 55.0], [1.731671609E12, 55.0], [1.731671568E12, 53.0], [1.731671478E12, 56.0], [1.73167165E12, 56.0], [1.731671437E12, 56.0], [1.731671519E12, 56.0], [1.731671388E12, 54.0], [1.731671601E12, 53.0], [1.73167156E12, 54.0], [1.73167147E12, 50.0], [1.731671642E12, 51.0], [1.731671429E12, 51.0], [1.731671511E12, 50.0], [1.731671507E12, 53.0], [1.731671466E12, 55.0], [1.731671679E12, 55.0], [1.731671548E12, 51.0], [1.73167163E12, 50.0], [1.731671417E12, 50.0], [1.731671589E12, 50.0], [1.731671499E12, 53.0], [1.731671458E12, 51.0], [1.731671671E12, 51.0], [1.73167154E12, 54.0], [1.731671622E12, 56.0], [1.731671409E12, 57.0], [1.731671581E12, 56.0], [1.731671491E12, 55.0], [1.73167145E12, 56.0], [1.731671663E12, 56.0], [1.731671532E12, 53.0], [1.731671614E12, 50.0], [1.731671401E12, 50.0], [1.731671573E12, 52.0], [1.731671483E12, 51.0], [1.731671442E12, 50.0], [1.731671655E12, 50.0], [1.731671524E12, 52.0], [1.731671606E12, 56.0], [1.731671393E12, 55.0], [1.731671565E12, 54.0], [1.731671475E12, 56.0], [1.731671434E12, 56.0], [1.731671647E12, 56.0], [1.731671516E12, 55.0], [1.731671598E12, 52.0], [1.731671385E12, 53.0], [1.731671557E12, 53.0], [1.731671467E12, 50.0], [1.731671426E12, 51.0], [1.731671639E12, 50.0], [1.731671508E12, 51.0], [1.73167168E12, 50.0], [1.73167159E12, 54.0], [1.731671549E12, 52.0], [1.731671459E12, 56.0], [1.731671418E12, 55.0], [1.731671631E12, 55.0], [1.7316715E12, 56.0], [1.731671672E12, 56.0], [1.731671582E12, 54.0], [1.731671541E12, 56.0], [1.731671451E12, 50.0], [1.73167141E12, 52.0], [1.731671623E12, 52.0], [1.731671492E12, 50.0], [1.731671664E12, 51.0], [1.731671574E12, 52.0], [1.731671533E12, 50.0], [1.731671443E12, 55.0], [1.731671402E12, 53.0], [1.731671615E12, 53.0], [1.731671484E12, 56.0], [1.731671656E12, 55.0], [1.731671566E12, 56.0], [1.731671525E12, 56.0], [1.731671435E12, 52.0], [1.731671394E12, 55.0], [1.731671607E12, 54.0], [1.731671476E12, 51.0], [1.731671648E12, 53.0], [1.731671558E12, 50.0], [1.731671517E12, 50.0], [1.731671427E12, 53.0], [1.731671386E12, 55.0], [1.731671599E12, 51.0], [1.731671468E12, 55.0], [1.73167164E12, 53.0], [1.731671636E12, 50.0], [1.731671423E12, 50.0], [1.731671505E12, 51.0], [1.731671464E12, 50.0], [1.731671677E12, 50.0], [1.731671587E12, 54.0], [1.731671546E12, 53.0], [1.731671628E12, 56.0], [1.731671415E12, 55.0], [1.731671497E12, 56.0], [1.731671456E12, 55.0], [1.731671669E12, 56.0], [1.731671579E12, 53.0], [1.731671538E12, 55.0], [1.73167162E12, 51.0], [1.731671407E12, 51.0], [1.731671489E12, 50.0], [1.731671448E12, 50.0], [1.731671661E12, 50.0], [1.731671571E12, 52.0], [1.73167153E12, 51.0], [1.731671612E12, 54.0], [1.731671399E12, 54.0], [1.731671481E12, 56.0], [1.73167144E12, 56.0], [1.731671653E12, 56.0], [1.731671563E12, 55.0], [1.731671522E12, 57.0], [1.731671604E12, 54.0], [1.731671391E12, 57.0], [1.731671473E12, 50.0], [1.731671432E12, 53.0], [1.731671645E12, 52.0], [1.731671555E12, 51.0], [1.731671514E12, 50.0], [1.731671596E12, 52.0], [1.731671383E12, 55.0], [1.731671678E12, 55.0], [1.731671465E12, 55.0], [1.731671424E12, 54.0], [1.731671637E12, 54.0], [1.731671547E12, 56.0], [1.731671506E12, 56.0], [1.731671588E12, 56.0], [1.73167167E12, 52.0], [1.731671457E12, 53.0], [1.731671416E12, 54.0], [1.731671629E12, 54.0], [1.731671539E12, 50.0], [1.731671498E12, 50.0], [1.73167158E12, 50.0], [1.731671662E12, 53.0], [1.731671449E12, 54.0], [1.731671408E12, 51.0], [1.731671621E12, 52.0], [1.731671531E12, 56.0], [1.73167149E12, 55.0], [1.731671572E12, 56.0], [1.731671654E12, 54.0], [1.731671441E12, 54.0], [1.7316714E12, 56.0], [1.731671613E12, 56.0], [1.731671523E12, 50.0], [1.731671482E12, 52.0], [1.731671564E12, 50.0], [1.731671646E12, 51.0], [1.731671433E12, 52.0], [1.731671392E12, 50.0], [1.731671605E12, 50.0], [1.731671515E12, 55.0], [1.731671474E12, 53.0], [1.731671556E12, 56.0], [1.731671638E12, 56.0], [1.731671425E12, 55.0], [1.731671384E12, 53.0], [1.731671597E12, 56.0], [1.73167138E12, 37.0], [1.731671593E12, 53.0], [1.731671552E12, 51.0], [1.731671462E12, 55.0], [1.731671675E12, 56.0], [1.731671634E12, 55.0], [1.731671421E12, 55.0], [1.731671503E12, 56.0], [1.731671585E12, 55.0], [1.731671544E12, 56.0], [1.731671454E12, 52.0], [1.731671667E12, 52.0], [1.731671626E12, 53.0], [1.731671413E12, 53.0], [1.731671495E12, 50.0], [1.731671577E12, 51.0], [1.731671536E12, 50.0], [1.731671446E12, 55.0], [1.731671659E12, 54.0], [1.731671618E12, 53.0], [1.731671405E12, 53.0], [1.731671487E12, 56.0], [1.731671569E12, 56.0], [1.731671528E12, 56.0], [1.731671438E12, 53.0], [1.731671651E12, 53.0], [1.73167161E12, 55.0], [1.731671397E12, 55.0], [1.731671479E12, 52.0], [1.731671561E12, 50.0], [1.73167152E12, 50.0], [1.73167143E12, 52.0], [1.731671643E12, 52.0], [1.731671602E12, 51.0], [1.731671389E12, 55.0], [1.731671471E12, 54.0], [1.731671553E12, 55.0], [1.731671512E12, 56.0], [1.731671422E12, 55.0], [1.731671635E12, 55.0], [1.731671594E12, 56.0], [1.731671381E12, 53.0], [1.731671676E12, 54.0], [1.731671463E12, 54.0], [1.731671545E12, 50.0], [1.731671504E12, 52.0], [1.731671414E12, 51.0], [1.731671627E12, 50.0], [1.731671586E12, 50.0], [1.731671668E12, 52.0], [1.731671455E12, 52.0], [1.731671537E12, 55.0], [1.731671496E12, 54.0], [1.731671406E12, 56.0], [1.731671619E12, 56.0], [1.731671578E12, 56.0], [1.73167166E12, 56.0], [1.731671447E12, 55.0], [1.731671529E12, 52.0], [1.731671488E12, 54.0], [1.731671398E12, 50.0], [1.731671611E12, 50.0], [1.73167157E12, 51.0], [1.731671652E12, 50.0], [1.731671439E12, 50.0], [1.731671521E12, 53.0], [1.73167148E12, 52.0], [1.73167139E12, 54.0], [1.731671603E12, 55.0], [1.731671562E12, 55.0], [1.731671644E12, 56.0], [1.731671431E12, 55.0], [1.731671513E12, 54.0], [1.731671472E12, 56.0], [1.731671382E12, 52.0], [1.731671595E12, 51.0], [1.731671554E12, 54.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.73167168E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 36.0, "minX": 1.73167138E12, "maxY": 57.0, "series": [{"data": [[1.73167155E12, 56.0], [1.731671509E12, 55.0], [1.731671419E12, 56.0], [1.731671591E12, 55.0], [1.73167146E12, 54.0], [1.731671673E12, 54.0], [1.731671632E12, 56.0], [1.731671542E12, 51.0], [1.731671501E12, 52.0], [1.731671411E12, 50.0], [1.731671583E12, 50.0], [1.731671452E12, 52.0], [1.731671665E12, 52.0], [1.731671624E12, 50.0], [1.731671534E12, 55.0], [1.731671493E12, 54.0], [1.731671403E12, 56.0], [1.731671575E12, 56.0], [1.731671444E12, 56.0], [1.731671657E12, 56.0], [1.731671616E12, 56.0], [1.731671526E12, 53.0], [1.731671485E12, 54.0], [1.731671395E12, 50.0], [1.731671567E12, 51.0], [1.731671436E12, 50.0], [1.731671649E12, 50.0], [1.731671608E12, 50.0], [1.731671518E12, 53.0], [1.731671477E12, 51.0], [1.731671387E12, 53.0], [1.731671559E12, 55.0], [1.731671428E12, 56.0], [1.731671641E12, 56.0], [1.7316716E12, 56.0], [1.73167151E12, 55.0], [1.731671469E12, 56.0], [1.731671551E12, 53.0], [1.73167142E12, 50.0], [1.731671633E12, 50.0], [1.731671592E12, 52.0], [1.731671502E12, 51.0], [1.731671674E12, 50.0], [1.731671461E12, 50.0], [1.731671543E12, 53.0], [1.731671412E12, 56.0], [1.731671625E12, 56.0], [1.731671584E12, 54.0], [1.731671494E12, 55.0], [1.731671666E12, 55.0], [1.731671453E12, 55.0], [1.731671535E12, 55.0], [1.731671404E12, 52.0], [1.731671617E12, 52.0], [1.731671576E12, 53.0], [1.731671486E12, 50.0], [1.731671658E12, 50.0], [1.731671445E12, 50.0], [1.731671527E12, 51.0], [1.731671396E12, 54.0], [1.731671609E12, 54.0], [1.731671568E12, 52.0], [1.731671478E12, 56.0], [1.73167165E12, 56.0], [1.731671437E12, 56.0], [1.731671519E12, 56.0], [1.731671388E12, 53.0], [1.731671601E12, 54.0], [1.73167156E12, 55.0], [1.73167147E12, 50.0], [1.731671642E12, 52.0], [1.731671429E12, 52.0], [1.731671511E12, 50.0], [1.731671507E12, 54.0], [1.731671466E12, 56.0], [1.731671679E12, 56.0], [1.731671548E12, 52.0], [1.73167163E12, 50.0], [1.731671417E12, 50.0], [1.731671589E12, 50.0], [1.731671499E12, 52.0], [1.731671458E12, 50.0], [1.731671671E12, 50.0], [1.73167154E12, 53.0], [1.731671622E12, 56.0], [1.731671409E12, 56.0], [1.731671581E12, 55.0], [1.731671491E12, 55.0], [1.73167145E12, 56.0], [1.731671663E12, 56.0], [1.731671532E12, 54.0], [1.731671614E12, 51.0], [1.731671401E12, 51.0], [1.731671573E12, 53.0], [1.731671483E12, 50.0], [1.731671442E12, 50.0], [1.731671655E12, 50.0], [1.731671524E12, 51.0], [1.731671606E12, 55.0], [1.731671393E12, 54.0], [1.731671565E12, 53.0], [1.731671475E12, 56.0], [1.731671434E12, 56.0], [1.731671647E12, 56.0], [1.731671516E12, 56.0], [1.731671598E12, 53.0], [1.731671385E12, 52.0], [1.731671557E12, 54.0], [1.731671467E12, 50.0], [1.731671426E12, 52.0], [1.731671639E12, 51.0], [1.731671508E12, 50.0], [1.73167168E12, 50.0], [1.73167159E12, 53.0], [1.731671549E12, 51.0], [1.731671459E12, 56.0], [1.731671418E12, 54.0], [1.731671631E12, 54.0], [1.7316715E12, 56.0], [1.731671672E12, 56.0], [1.731671582E12, 55.0], [1.731671541E12, 56.0], [1.731671451E12, 51.0], [1.73167141E12, 53.0], [1.731671623E12, 53.0], [1.731671492E12, 51.0], [1.731671664E12, 52.0], [1.731671574E12, 51.0], [1.731671533E12, 50.0], [1.731671443E12, 54.0], [1.731671402E12, 52.0], [1.731671615E12, 52.0], [1.731671484E12, 56.0], [1.731671656E12, 54.0], [1.731671566E12, 56.0], [1.731671525E12, 56.0], [1.731671435E12, 53.0], [1.731671394E12, 56.0], [1.731671607E12, 55.0], [1.731671476E12, 52.0], [1.731671648E12, 54.0], [1.731671558E12, 50.0], [1.731671517E12, 50.0], [1.731671427E12, 52.0], [1.731671386E12, 55.0], [1.731671599E12, 50.0], [1.731671468E12, 54.0], [1.73167164E12, 52.0], [1.731671636E12, 51.0], [1.731671423E12, 50.0], [1.731671505E12, 50.0], [1.731671464E12, 50.0], [1.731671677E12, 50.0], [1.731671587E12, 53.0], [1.731671546E12, 52.0], [1.731671628E12, 55.0], [1.731671415E12, 55.0], [1.731671497E12, 56.0], [1.731671456E12, 55.0], [1.731671669E12, 56.0], [1.731671579E12, 54.0], [1.731671538E12, 56.0], [1.73167162E12, 52.0], [1.731671407E12, 52.0], [1.731671489E12, 50.0], [1.731671448E12, 51.0], [1.731671661E12, 51.0], [1.731671571E12, 51.0], [1.73167153E12, 50.0], [1.731671612E12, 53.0], [1.731671399E12, 53.0], [1.731671481E12, 56.0], [1.73167144E12, 55.0], [1.731671653E12, 55.0], [1.731671563E12, 56.0], [1.731671522E12, 57.0], [1.731671604E12, 55.0], [1.731671391E12, 57.0], [1.731671473E12, 51.0], [1.731671432E12, 54.0], [1.731671645E12, 53.0], [1.731671555E12, 50.0], [1.731671514E12, 50.0], [1.731671596E12, 51.0], [1.731671383E12, 55.0], [1.731671678E12, 54.0], [1.731671465E12, 54.0], [1.731671424E12, 53.0], [1.731671637E12, 53.0], [1.731671547E12, 56.0], [1.731671506E12, 56.0], [1.731671588E12, 57.0], [1.73167167E12, 53.0], [1.731671457E12, 54.0], [1.731671416E12, 55.0], [1.731671629E12, 55.0], [1.731671539E12, 50.0], [1.731671498E12, 51.0], [1.73167158E12, 50.0], [1.731671662E12, 52.0], [1.731671449E12, 53.0], [1.731671408E12, 51.0], [1.731671621E12, 51.0], [1.731671531E12, 56.0], [1.73167149E12, 54.0], [1.731671572E12, 56.0], [1.731671654E12, 55.0], [1.731671441E12, 55.0], [1.7316714E12, 56.0], [1.731671613E12, 56.0], [1.731671523E12, 51.0], [1.731671482E12, 53.0], [1.731671564E12, 50.0], [1.731671646E12, 50.0], [1.731671433E12, 51.0], [1.731671392E12, 51.0], [1.731671605E12, 50.0], [1.731671515E12, 54.0], [1.731671474E12, 52.0], [1.731671556E12, 56.0], [1.731671638E12, 56.0], [1.731671425E12, 55.0], [1.731671384E12, 54.0], [1.731671597E12, 56.0], [1.73167138E12, 36.0], [1.731671593E12, 52.0], [1.731671552E12, 50.0], [1.731671462E12, 55.0], [1.731671675E12, 55.0], [1.731671634E12, 54.0], [1.731671421E12, 54.0], [1.731671503E12, 56.0], [1.731671585E12, 56.0], [1.731671544E12, 56.0], [1.731671454E12, 53.0], [1.731671667E12, 53.0], [1.731671626E12, 54.0], [1.731671413E12, 54.0], [1.731671495E12, 51.0], [1.731671577E12, 50.0], [1.731671536E12, 50.0], [1.731671446E12, 54.0], [1.731671659E12, 53.0], [1.731671618E12, 52.0], [1.731671405E12, 52.0], [1.731671487E12, 55.0], [1.731671569E12, 56.0], [1.731671528E12, 56.0], [1.731671438E12, 54.0], [1.731671651E12, 54.0], [1.73167161E12, 56.0], [1.731671397E12, 55.0], [1.731671479E12, 53.0], [1.731671561E12, 50.0], [1.73167152E12, 51.0], [1.73167143E12, 51.0], [1.731671643E12, 51.0], [1.731671602E12, 50.0], [1.731671389E12, 55.0], [1.731671471E12, 53.0], [1.731671553E12, 55.0], [1.731671512E12, 55.0], [1.731671422E12, 56.0], [1.731671635E12, 55.0], [1.731671594E12, 56.0], [1.731671381E12, 54.0], [1.731671676E12, 55.0], [1.731671463E12, 55.0], [1.731671545E12, 51.0], [1.731671504E12, 53.0], [1.731671414E12, 50.0], [1.731671627E12, 50.0], [1.731671586E12, 50.0], [1.731671668E12, 51.0], [1.731671455E12, 51.0], [1.731671537E12, 54.0], [1.731671496E12, 53.0], [1.731671406E12, 56.0], [1.731671619E12, 56.0], [1.731671578E12, 56.0], [1.73167166E12, 56.0], [1.731671447E12, 55.0], [1.731671529E12, 53.0], [1.731671488E12, 55.0], [1.731671398E12, 51.0], [1.731671611E12, 50.0], [1.73167157E12, 52.0], [1.731671652E12, 50.0], [1.731671439E12, 50.0], [1.731671521E12, 52.0], [1.73167148E12, 51.0], [1.73167139E12, 54.0], [1.731671603E12, 55.0], [1.731671562E12, 54.0], [1.731671644E12, 56.0], [1.731671431E12, 55.0], [1.731671513E12, 55.0], [1.731671472E12, 56.0], [1.731671382E12, 51.0], [1.731671595E12, 52.0], [1.731671554E12, 55.0]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.73167168E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 36.0, "minX": 1.73167138E12, "maxY": 57.0, "series": [{"data": [[1.73167155E12, 56.0], [1.731671509E12, 55.0], [1.731671419E12, 56.0], [1.731671591E12, 55.0], [1.73167146E12, 54.0], [1.731671673E12, 54.0], [1.731671632E12, 56.0], [1.731671542E12, 51.0], [1.731671501E12, 52.0], [1.731671411E12, 50.0], [1.731671583E12, 50.0], [1.731671452E12, 52.0], [1.731671665E12, 52.0], [1.731671624E12, 50.0], [1.731671534E12, 55.0], [1.731671493E12, 54.0], [1.731671403E12, 56.0], [1.731671575E12, 56.0], [1.731671444E12, 56.0], [1.731671657E12, 56.0], [1.731671616E12, 56.0], [1.731671526E12, 53.0], [1.731671485E12, 54.0], [1.731671395E12, 50.0], [1.731671567E12, 51.0], [1.731671436E12, 50.0], [1.731671649E12, 50.0], [1.731671608E12, 50.0], [1.731671518E12, 53.0], [1.731671477E12, 51.0], [1.731671387E12, 53.0], [1.731671559E12, 55.0], [1.731671428E12, 56.0], [1.731671641E12, 56.0], [1.7316716E12, 56.0], [1.73167151E12, 55.0], [1.731671469E12, 56.0], [1.731671551E12, 53.0], [1.73167142E12, 50.0], [1.731671633E12, 50.0], [1.731671592E12, 52.0], [1.731671502E12, 51.0], [1.731671674E12, 50.0], [1.731671461E12, 50.0], [1.731671543E12, 53.0], [1.731671412E12, 56.0], [1.731671625E12, 56.0], [1.731671584E12, 54.0], [1.731671494E12, 55.0], [1.731671666E12, 55.0], [1.731671453E12, 55.0], [1.731671535E12, 55.0], [1.731671404E12, 52.0], [1.731671617E12, 52.0], [1.731671576E12, 53.0], [1.731671486E12, 50.0], [1.731671658E12, 50.0], [1.731671445E12, 50.0], [1.731671527E12, 51.0], [1.731671396E12, 54.0], [1.731671609E12, 54.0], [1.731671568E12, 52.0], [1.731671478E12, 56.0], [1.73167165E12, 56.0], [1.731671437E12, 56.0], [1.731671519E12, 56.0], [1.731671388E12, 53.0], [1.731671601E12, 54.0], [1.73167156E12, 55.0], [1.73167147E12, 50.0], [1.731671642E12, 52.0], [1.731671429E12, 52.0], [1.731671511E12, 50.0], [1.731671507E12, 54.0], [1.731671466E12, 56.0], [1.731671679E12, 56.0], [1.731671548E12, 52.0], [1.73167163E12, 50.0], [1.731671417E12, 50.0], [1.731671589E12, 50.0], [1.731671499E12, 52.0], [1.731671458E12, 50.0], [1.731671671E12, 50.0], [1.73167154E12, 53.0], [1.731671622E12, 56.0], [1.731671409E12, 56.0], [1.731671581E12, 55.0], [1.731671491E12, 55.0], [1.73167145E12, 56.0], [1.731671663E12, 56.0], [1.731671532E12, 54.0], [1.731671614E12, 51.0], [1.731671401E12, 51.0], [1.731671573E12, 53.0], [1.731671483E12, 50.0], [1.731671442E12, 50.0], [1.731671655E12, 50.0], [1.731671524E12, 51.0], [1.731671606E12, 55.0], [1.731671393E12, 54.0], [1.731671565E12, 53.0], [1.731671475E12, 56.0], [1.731671434E12, 56.0], [1.731671647E12, 56.0], [1.731671516E12, 56.0], [1.731671598E12, 53.0], [1.731671385E12, 52.0], [1.731671557E12, 54.0], [1.731671467E12, 50.0], [1.731671426E12, 52.0], [1.731671639E12, 51.0], [1.731671508E12, 50.0], [1.73167168E12, 50.0], [1.73167159E12, 53.0], [1.731671549E12, 51.0], [1.731671459E12, 56.0], [1.731671418E12, 54.0], [1.731671631E12, 54.0], [1.7316715E12, 56.0], [1.731671672E12, 56.0], [1.731671582E12, 55.0], [1.731671541E12, 56.0], [1.731671451E12, 51.0], [1.73167141E12, 53.0], [1.731671623E12, 53.0], [1.731671492E12, 51.0], [1.731671664E12, 52.0], [1.731671574E12, 51.0], [1.731671533E12, 50.0], [1.731671443E12, 54.0], [1.731671402E12, 52.0], [1.731671615E12, 52.0], [1.731671484E12, 56.0], [1.731671656E12, 54.0], [1.731671566E12, 56.0], [1.731671525E12, 56.0], [1.731671435E12, 53.0], [1.731671394E12, 56.0], [1.731671607E12, 55.0], [1.731671476E12, 52.0], [1.731671648E12, 54.0], [1.731671558E12, 50.0], [1.731671517E12, 50.0], [1.731671427E12, 52.0], [1.731671386E12, 55.0], [1.731671599E12, 50.0], [1.731671468E12, 54.0], [1.73167164E12, 52.0], [1.731671636E12, 51.0], [1.731671423E12, 50.0], [1.731671505E12, 50.0], [1.731671464E12, 50.0], [1.731671677E12, 50.0], [1.731671587E12, 53.0], [1.731671546E12, 52.0], [1.731671628E12, 55.0], [1.731671415E12, 55.0], [1.731671497E12, 56.0], [1.731671456E12, 55.0], [1.731671669E12, 56.0], [1.731671579E12, 54.0], [1.731671538E12, 56.0], [1.73167162E12, 52.0], [1.731671407E12, 52.0], [1.731671489E12, 50.0], [1.731671448E12, 51.0], [1.731671661E12, 51.0], [1.731671571E12, 51.0], [1.73167153E12, 50.0], [1.731671612E12, 53.0], [1.731671399E12, 53.0], [1.731671481E12, 56.0], [1.73167144E12, 55.0], [1.731671653E12, 55.0], [1.731671563E12, 56.0], [1.731671522E12, 57.0], [1.731671604E12, 55.0], [1.731671391E12, 57.0], [1.731671473E12, 51.0], [1.731671432E12, 54.0], [1.731671645E12, 53.0], [1.731671555E12, 50.0], [1.731671514E12, 50.0], [1.731671596E12, 51.0], [1.731671383E12, 55.0], [1.731671678E12, 54.0], [1.731671465E12, 54.0], [1.731671424E12, 53.0], [1.731671637E12, 53.0], [1.731671547E12, 56.0], [1.731671506E12, 56.0], [1.731671588E12, 57.0], [1.73167167E12, 53.0], [1.731671457E12, 54.0], [1.731671416E12, 55.0], [1.731671629E12, 55.0], [1.731671539E12, 50.0], [1.731671498E12, 51.0], [1.73167158E12, 50.0], [1.731671662E12, 52.0], [1.731671449E12, 53.0], [1.731671408E12, 51.0], [1.731671621E12, 51.0], [1.731671531E12, 56.0], [1.73167149E12, 54.0], [1.731671572E12, 56.0], [1.731671654E12, 55.0], [1.731671441E12, 55.0], [1.7316714E12, 56.0], [1.731671613E12, 56.0], [1.731671523E12, 51.0], [1.731671482E12, 53.0], [1.731671564E12, 50.0], [1.731671646E12, 50.0], [1.731671433E12, 51.0], [1.731671392E12, 51.0], [1.731671605E12, 50.0], [1.731671515E12, 54.0], [1.731671474E12, 52.0], [1.731671556E12, 56.0], [1.731671638E12, 56.0], [1.731671425E12, 55.0], [1.731671384E12, 54.0], [1.731671597E12, 56.0], [1.73167138E12, 36.0], [1.731671593E12, 52.0], [1.731671552E12, 50.0], [1.731671462E12, 55.0], [1.731671675E12, 55.0], [1.731671634E12, 54.0], [1.731671421E12, 54.0], [1.731671503E12, 56.0], [1.731671585E12, 56.0], [1.731671544E12, 56.0], [1.731671454E12, 53.0], [1.731671667E12, 53.0], [1.731671626E12, 54.0], [1.731671413E12, 54.0], [1.731671495E12, 51.0], [1.731671577E12, 50.0], [1.731671536E12, 50.0], [1.731671446E12, 54.0], [1.731671659E12, 53.0], [1.731671618E12, 52.0], [1.731671405E12, 52.0], [1.731671487E12, 55.0], [1.731671569E12, 56.0], [1.731671528E12, 56.0], [1.731671438E12, 54.0], [1.731671651E12, 54.0], [1.73167161E12, 56.0], [1.731671397E12, 55.0], [1.731671479E12, 53.0], [1.731671561E12, 50.0], [1.73167152E12, 51.0], [1.73167143E12, 51.0], [1.731671643E12, 51.0], [1.731671602E12, 50.0], [1.731671389E12, 55.0], [1.731671471E12, 53.0], [1.731671553E12, 55.0], [1.731671512E12, 55.0], [1.731671422E12, 56.0], [1.731671635E12, 55.0], [1.731671594E12, 56.0], [1.731671381E12, 54.0], [1.731671676E12, 55.0], [1.731671463E12, 55.0], [1.731671545E12, 51.0], [1.731671504E12, 53.0], [1.731671414E12, 50.0], [1.731671627E12, 50.0], [1.731671586E12, 50.0], [1.731671668E12, 51.0], [1.731671455E12, 51.0], [1.731671537E12, 54.0], [1.731671496E12, 53.0], [1.731671406E12, 56.0], [1.731671619E12, 56.0], [1.731671578E12, 56.0], [1.73167166E12, 56.0], [1.731671447E12, 55.0], [1.731671529E12, 53.0], [1.731671488E12, 55.0], [1.731671398E12, 51.0], [1.731671611E12, 50.0], [1.73167157E12, 52.0], [1.731671652E12, 50.0], [1.731671439E12, 50.0], [1.731671521E12, 52.0], [1.73167148E12, 51.0], [1.73167139E12, 54.0], [1.731671603E12, 55.0], [1.731671562E12, 54.0], [1.731671644E12, 56.0], [1.731671431E12, 55.0], [1.731671513E12, 55.0], [1.731671472E12, 56.0], [1.731671382E12, 51.0], [1.731671595E12, 52.0], [1.731671554E12, 55.0]], "isOverall": false, "label": "Products-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.73167168E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 36.0, "minX": 1.73167138E12, "maxY": 57.0, "series": [{"data": [[1.73167155E12, 56.0], [1.731671509E12, 55.0], [1.731671419E12, 56.0], [1.731671591E12, 55.0], [1.73167146E12, 54.0], [1.731671673E12, 54.0], [1.731671632E12, 56.0], [1.731671542E12, 51.0], [1.731671501E12, 52.0], [1.731671411E12, 50.0], [1.731671583E12, 50.0], [1.731671452E12, 52.0], [1.731671665E12, 52.0], [1.731671624E12, 50.0], [1.731671534E12, 55.0], [1.731671493E12, 54.0], [1.731671403E12, 56.0], [1.731671575E12, 56.0], [1.731671444E12, 56.0], [1.731671657E12, 56.0], [1.731671616E12, 56.0], [1.731671526E12, 53.0], [1.731671485E12, 54.0], [1.731671395E12, 50.0], [1.731671567E12, 51.0], [1.731671436E12, 50.0], [1.731671649E12, 50.0], [1.731671608E12, 50.0], [1.731671518E12, 53.0], [1.731671477E12, 51.0], [1.731671387E12, 53.0], [1.731671559E12, 55.0], [1.731671428E12, 56.0], [1.731671641E12, 56.0], [1.7316716E12, 56.0], [1.73167151E12, 55.0], [1.731671469E12, 56.0], [1.731671551E12, 53.0], [1.73167142E12, 50.0], [1.731671633E12, 50.0], [1.731671592E12, 52.0], [1.731671502E12, 51.0], [1.731671674E12, 50.0], [1.731671461E12, 50.0], [1.731671543E12, 53.0], [1.731671412E12, 56.0], [1.731671625E12, 56.0], [1.731671584E12, 54.0], [1.731671494E12, 55.0], [1.731671666E12, 55.0], [1.731671453E12, 55.0], [1.731671535E12, 55.0], [1.731671404E12, 52.0], [1.731671617E12, 52.0], [1.731671576E12, 53.0], [1.731671486E12, 50.0], [1.731671658E12, 50.0], [1.731671445E12, 50.0], [1.731671527E12, 51.0], [1.731671396E12, 54.0], [1.731671609E12, 54.0], [1.731671568E12, 52.0], [1.731671478E12, 56.0], [1.73167165E12, 56.0], [1.731671437E12, 56.0], [1.731671519E12, 56.0], [1.731671388E12, 53.0], [1.731671601E12, 54.0], [1.73167156E12, 55.0], [1.73167147E12, 50.0], [1.731671642E12, 52.0], [1.731671429E12, 52.0], [1.731671511E12, 50.0], [1.731671507E12, 54.0], [1.731671466E12, 56.0], [1.731671679E12, 56.0], [1.731671548E12, 52.0], [1.73167163E12, 50.0], [1.731671417E12, 50.0], [1.731671589E12, 50.0], [1.731671499E12, 52.0], [1.731671458E12, 50.0], [1.731671671E12, 50.0], [1.73167154E12, 53.0], [1.731671622E12, 56.0], [1.731671409E12, 56.0], [1.731671581E12, 55.0], [1.731671491E12, 55.0], [1.73167145E12, 56.0], [1.731671663E12, 56.0], [1.731671532E12, 54.0], [1.731671614E12, 51.0], [1.731671401E12, 51.0], [1.731671573E12, 53.0], [1.731671483E12, 50.0], [1.731671442E12, 50.0], [1.731671655E12, 50.0], [1.731671524E12, 51.0], [1.731671606E12, 55.0], [1.731671393E12, 54.0], [1.731671565E12, 53.0], [1.731671475E12, 56.0], [1.731671434E12, 56.0], [1.731671647E12, 56.0], [1.731671516E12, 56.0], [1.731671598E12, 53.0], [1.731671385E12, 52.0], [1.731671557E12, 54.0], [1.731671467E12, 50.0], [1.731671426E12, 52.0], [1.731671639E12, 51.0], [1.731671508E12, 50.0], [1.73167168E12, 50.0], [1.73167159E12, 53.0], [1.731671549E12, 51.0], [1.731671459E12, 56.0], [1.731671418E12, 54.0], [1.731671631E12, 54.0], [1.7316715E12, 56.0], [1.731671672E12, 56.0], [1.731671582E12, 55.0], [1.731671541E12, 56.0], [1.731671451E12, 51.0], [1.73167141E12, 53.0], [1.731671623E12, 53.0], [1.731671492E12, 51.0], [1.731671664E12, 52.0], [1.731671574E12, 51.0], [1.731671533E12, 50.0], [1.731671443E12, 54.0], [1.731671402E12, 52.0], [1.731671615E12, 52.0], [1.731671484E12, 56.0], [1.731671656E12, 54.0], [1.731671566E12, 56.0], [1.731671525E12, 56.0], [1.731671435E12, 53.0], [1.731671394E12, 56.0], [1.731671607E12, 55.0], [1.731671476E12, 52.0], [1.731671648E12, 54.0], [1.731671558E12, 50.0], [1.731671517E12, 50.0], [1.731671427E12, 52.0], [1.731671386E12, 55.0], [1.731671599E12, 50.0], [1.731671468E12, 54.0], [1.73167164E12, 52.0], [1.731671636E12, 51.0], [1.731671423E12, 50.0], [1.731671505E12, 50.0], [1.731671464E12, 50.0], [1.731671677E12, 50.0], [1.731671587E12, 53.0], [1.731671546E12, 52.0], [1.731671628E12, 55.0], [1.731671415E12, 55.0], [1.731671497E12, 56.0], [1.731671456E12, 55.0], [1.731671669E12, 56.0], [1.731671579E12, 54.0], [1.731671538E12, 56.0], [1.73167162E12, 52.0], [1.731671407E12, 52.0], [1.731671489E12, 50.0], [1.731671448E12, 51.0], [1.731671661E12, 51.0], [1.731671571E12, 51.0], [1.73167153E12, 50.0], [1.731671612E12, 53.0], [1.731671399E12, 53.0], [1.731671481E12, 56.0], [1.73167144E12, 55.0], [1.731671653E12, 55.0], [1.731671563E12, 56.0], [1.731671522E12, 57.0], [1.731671604E12, 55.0], [1.731671391E12, 57.0], [1.731671473E12, 51.0], [1.731671432E12, 54.0], [1.731671645E12, 53.0], [1.731671555E12, 50.0], [1.731671514E12, 50.0], [1.731671596E12, 51.0], [1.731671383E12, 55.0], [1.731671678E12, 54.0], [1.731671465E12, 54.0], [1.731671424E12, 53.0], [1.731671637E12, 53.0], [1.731671547E12, 56.0], [1.731671506E12, 56.0], [1.731671588E12, 57.0], [1.73167167E12, 53.0], [1.731671457E12, 54.0], [1.731671416E12, 55.0], [1.731671629E12, 55.0], [1.731671539E12, 50.0], [1.731671498E12, 51.0], [1.73167158E12, 50.0], [1.731671662E12, 52.0], [1.731671449E12, 53.0], [1.731671408E12, 51.0], [1.731671621E12, 51.0], [1.731671531E12, 56.0], [1.73167149E12, 54.0], [1.731671572E12, 56.0], [1.731671654E12, 55.0], [1.731671441E12, 55.0], [1.7316714E12, 56.0], [1.731671613E12, 56.0], [1.731671523E12, 51.0], [1.731671482E12, 53.0], [1.731671564E12, 50.0], [1.731671646E12, 50.0], [1.731671433E12, 51.0], [1.731671392E12, 51.0], [1.731671605E12, 50.0], [1.731671515E12, 54.0], [1.731671474E12, 52.0], [1.731671556E12, 56.0], [1.731671638E12, 56.0], [1.731671425E12, 55.0], [1.731671384E12, 54.0], [1.731671597E12, 56.0], [1.73167138E12, 36.0], [1.731671593E12, 52.0], [1.731671552E12, 50.0], [1.731671462E12, 55.0], [1.731671675E12, 55.0], [1.731671634E12, 54.0], [1.731671421E12, 54.0], [1.731671503E12, 56.0], [1.731671585E12, 56.0], [1.731671544E12, 56.0], [1.731671454E12, 53.0], [1.731671667E12, 53.0], [1.731671626E12, 54.0], [1.731671413E12, 54.0], [1.731671495E12, 51.0], [1.731671577E12, 50.0], [1.731671536E12, 50.0], [1.731671446E12, 54.0], [1.731671659E12, 53.0], [1.731671618E12, 52.0], [1.731671405E12, 52.0], [1.731671487E12, 55.0], [1.731671569E12, 56.0], [1.731671528E12, 56.0], [1.731671438E12, 54.0], [1.731671651E12, 54.0], [1.73167161E12, 56.0], [1.731671397E12, 55.0], [1.731671479E12, 53.0], [1.731671561E12, 50.0], [1.73167152E12, 51.0], [1.73167143E12, 51.0], [1.731671643E12, 51.0], [1.731671602E12, 50.0], [1.731671389E12, 55.0], [1.731671471E12, 53.0], [1.731671553E12, 55.0], [1.731671512E12, 55.0], [1.731671422E12, 56.0], [1.731671635E12, 55.0], [1.731671594E12, 56.0], [1.731671381E12, 54.0], [1.731671676E12, 55.0], [1.731671463E12, 55.0], [1.731671545E12, 51.0], [1.731671504E12, 53.0], [1.731671414E12, 50.0], [1.731671627E12, 50.0], [1.731671586E12, 50.0], [1.731671668E12, 51.0], [1.731671455E12, 51.0], [1.731671537E12, 54.0], [1.731671496E12, 53.0], [1.731671406E12, 56.0], [1.731671619E12, 56.0], [1.731671578E12, 56.0], [1.73167166E12, 56.0], [1.731671447E12, 55.0], [1.731671529E12, 53.0], [1.731671488E12, 55.0], [1.731671398E12, 51.0], [1.731671611E12, 50.0], [1.73167157E12, 52.0], [1.731671652E12, 50.0], [1.731671439E12, 50.0], [1.731671521E12, 52.0], [1.73167148E12, 51.0], [1.73167139E12, 54.0], [1.731671603E12, 55.0], [1.731671562E12, 54.0], [1.731671644E12, 56.0], [1.731671431E12, 55.0], [1.731671513E12, 55.0], [1.731671472E12, 56.0], [1.731671382E12, 51.0], [1.731671595E12, 52.0], [1.731671554E12, 55.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.73167168E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

